// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: charge/msg_charge.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "charge/msg_charge.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace charge {

namespace {

const ::google::protobuf::Descriptor* ChargeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChargeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* TransferIn_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TransferIn_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChargeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChargeResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_charge_2fmsg_5fcharge_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_charge_2fmsg_5fcharge_2eproto() {
  protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "charge/msg_charge.proto");
  GOOGLE_CHECK(file != NULL);
  ChargeRequest_descriptor_ = file->message_type(0);
  static const int ChargeRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, login_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, transfer_in_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, pay_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, product_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, product_title_),
  };
  ChargeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChargeRequest_descriptor_,
      ChargeRequest::internal_default_instance(),
      ChargeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChargeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeRequest, _internal_metadata_));
  TransferIn_descriptor_ = file->message_type(1);
  static const int TransferIn_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferIn, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferIn, key_),
  };
  TransferIn_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      TransferIn_descriptor_,
      TransferIn::internal_default_instance(),
      TransferIn_offsets_,
      -1,
      -1,
      -1,
      sizeof(TransferIn),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TransferIn, _internal_metadata_));
  ChargeResponse_descriptor_ = file->message_type(2);
  static const int ChargeResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, prepay_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, package_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, noncestr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, error_),
  };
  ChargeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChargeResponse_descriptor_,
      ChargeResponse::internal_default_instance(),
      ChargeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ChargeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChargeResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_charge_2fmsg_5fcharge_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChargeRequest_descriptor_, ChargeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      TransferIn_descriptor_, TransferIn::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChargeResponse_descriptor_, ChargeResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_charge_2fmsg_5fcharge_2eproto() {
  ChargeRequest_default_instance_.Shutdown();
  delete ChargeRequest_reflection_;
  TransferIn_default_instance_.Shutdown();
  delete TransferIn_reflection_;
  ChargeResponse_default_instance_.Shutdown();
  delete ChargeResponse_reflection_;
}

void protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ChargeRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  TransferIn_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ChargeResponse_default_instance_.DefaultConstruct();
  ChargeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  TransferIn_default_instance_.get_mutable()->InitAsDefaultInstance();
  ChargeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto_once_);
void protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto_once_,
                 &protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto_impl);
}
void protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027charge/msg_charge.proto\022\006charge\032\032grpcC"
    "ommon/msg_error.proto\"\261\001\n\rChargeRequest\022"
    "\017\n\007user_id\030\001 \001(\t\022\023\n\013login_token\030\002 \001(\t\022\'\n"
    "\013transfer_in\030\003 \001(\0132\022.charge.TransferIn\022\020"
    "\n\010pay_type\030\004 \001(\t\022\020\n\010turnover\030\005 \001(\t\022\026\n\016pr"
    "oduct_detail\030\006 \001(\t\022\025\n\rproduct_title\030\007 \001("
    "\t\"\'\n\nTransferIn\022\014\n\004Type\030\001 \001(\t\022\013\n\003Key\030\002 \001"
    "(\t\"\262\001\n\016ChargeResponse\022\016\n\006app_id\030\001 \001(\t\022\022\n"
    "\npartner_id\030\002 \001(\t\022\021\n\tprepay_id\030\003 \001(\t\022\017\n\007"
    "package\030\004 \001(\t\022\020\n\010noncestr\030\005 \001(\t\022\022\n\ntime_"
    "stamp\030\006 \001(\t\022\014\n\004sign\030\007 \001(\t\022$\n\005error\030\010 \001(\013"
    "2\025.grpcCommon.GrpcErrorB\035\n\022com.wanfang.c"
    "hargeP\001\242\002\004WFPRb\006proto3", 502);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "charge/msg_charge.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_charge_2fmsg_5fcharge_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto_once_);
void protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto_once_,
                 &protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_charge_2fmsg_5fcharge_2eproto {
  StaticDescriptorInitializer_charge_2fmsg_5fcharge_2eproto() {
    protobuf_AddDesc_charge_2fmsg_5fcharge_2eproto();
  }
} static_descriptor_initializer_charge_2fmsg_5fcharge_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChargeRequest::kUserIdFieldNumber;
const int ChargeRequest::kLoginTokenFieldNumber;
const int ChargeRequest::kTransferInFieldNumber;
const int ChargeRequest::kPayTypeFieldNumber;
const int ChargeRequest::kTurnoverFieldNumber;
const int ChargeRequest::kProductDetailFieldNumber;
const int ChargeRequest::kProductTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChargeRequest::ChargeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:charge.ChargeRequest)
}

void ChargeRequest::InitAsDefaultInstance() {
  transfer_in_ = const_cast< ::charge::TransferIn*>(
      ::charge::TransferIn::internal_default_instance());
}

ChargeRequest::ChargeRequest(const ChargeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:charge.ChargeRequest)
}

void ChargeRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_detail_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  transfer_in_ = NULL;
  _cached_size_ = 0;
}

ChargeRequest::~ChargeRequest() {
  // @@protoc_insertion_point(destructor:charge.ChargeRequest)
  SharedDtor();
}

void ChargeRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_detail_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ChargeRequest_default_instance_.get()) {
    delete transfer_in_;
  }
}

void ChargeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChargeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChargeRequest_descriptor_;
}

const ChargeRequest& ChargeRequest::default_instance() {
  protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChargeRequest> ChargeRequest_default_instance_;

ChargeRequest* ChargeRequest::New(::google::protobuf::Arena* arena) const {
  ChargeRequest* n = new ChargeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChargeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:charge.ChargeRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && transfer_in_ != NULL) delete transfer_in_;
  transfer_in_ = NULL;
  pay_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ChargeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:charge.ChargeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_login_token;
        break;
      }

      // optional string login_token = 2;
      case 2: {
        if (tag == 18) {
         parse_login_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_token().data(), this->login_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.login_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_transfer_in;
        break;
      }

      // optional .charge.TransferIn transfer_in = 3;
      case 3: {
        if (tag == 26) {
         parse_transfer_in:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_transfer_in()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_pay_type;
        break;
      }

      // optional string pay_type = 4;
      case 4: {
        if (tag == 34) {
         parse_pay_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_type().data(), this->pay_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.pay_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_turnover;
        break;
      }

      // optional string turnover = 5;
      case 5: {
        if (tag == 42) {
         parse_turnover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_turnover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->turnover().data(), this->turnover().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.turnover"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_product_detail;
        break;
      }

      // optional string product_detail = 6;
      case 6: {
        if (tag == 50) {
         parse_product_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_detail()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_detail().data(), this->product_detail().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.product_detail"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_product_title;
        break;
      }

      // optional string product_title = 7;
      case 7: {
        if (tag == 58) {
         parse_product_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->product_title().data(), this->product_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeRequest.product_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:charge.ChargeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:charge.ChargeRequest)
  return false;
#undef DO_
}

void ChargeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:charge.ChargeRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.login_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_token(), output);
  }

  // optional .charge.TransferIn transfer_in = 3;
  if (this->has_transfer_in()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->transfer_in_, output);
  }

  // optional string pay_type = 4;
  if (this->pay_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_type().data(), this->pay_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.pay_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->pay_type(), output);
  }

  // optional string turnover = 5;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), this->turnover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.turnover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->turnover(), output);
  }

  // optional string product_detail = 6;
  if (this->product_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_detail().data(), this->product_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.product_detail");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->product_detail(), output);
  }

  // optional string product_title = 7;
  if (this->product_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_title().data(), this->product_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.product_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->product_title(), output);
  }

  // @@protoc_insertion_point(serialize_end:charge.ChargeRequest)
}

::google::protobuf::uint8* ChargeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:charge.ChargeRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.login_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_token(), target);
  }

  // optional .charge.TransferIn transfer_in = 3;
  if (this->has_transfer_in()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->transfer_in_, false, target);
  }

  // optional string pay_type = 4;
  if (this->pay_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_type().data(), this->pay_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.pay_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->pay_type(), target);
  }

  // optional string turnover = 5;
  if (this->turnover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->turnover().data(), this->turnover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.turnover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->turnover(), target);
  }

  // optional string product_detail = 6;
  if (this->product_detail().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_detail().data(), this->product_detail().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.product_detail");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->product_detail(), target);
  }

  // optional string product_title = 7;
  if (this->product_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->product_title().data(), this->product_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeRequest.product_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->product_title(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:charge.ChargeRequest)
  return target;
}

size_t ChargeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:charge.ChargeRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_token());
  }

  // optional .charge.TransferIn transfer_in = 3;
  if (this->has_transfer_in()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->transfer_in_);
  }

  // optional string pay_type = 4;
  if (this->pay_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_type());
  }

  // optional string turnover = 5;
  if (this->turnover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->turnover());
  }

  // optional string product_detail = 6;
  if (this->product_detail().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_detail());
  }

  // optional string product_title = 7;
  if (this->product_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->product_title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChargeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:charge.ChargeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChargeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChargeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:charge.ChargeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:charge.ChargeRequest)
    UnsafeMergeFrom(*source);
  }
}

void ChargeRequest::MergeFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:charge.ChargeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChargeRequest::UnsafeMergeFrom(const ChargeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.login_token().size() > 0) {

    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
  if (from.has_transfer_in()) {
    mutable_transfer_in()->::charge::TransferIn::MergeFrom(from.transfer_in());
  }
  if (from.pay_type().size() > 0) {

    pay_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_type_);
  }
  if (from.turnover().size() > 0) {

    turnover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.turnover_);
  }
  if (from.product_detail().size() > 0) {

    product_detail_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_detail_);
  }
  if (from.product_title().size() > 0) {

    product_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_title_);
  }
}

void ChargeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:charge.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeRequest::CopyFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:charge.ChargeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChargeRequest::IsInitialized() const {

  return true;
}

void ChargeRequest::Swap(ChargeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChargeRequest::InternalSwap(ChargeRequest* other) {
  user_id_.Swap(&other->user_id_);
  login_token_.Swap(&other->login_token_);
  std::swap(transfer_in_, other->transfer_in_);
  pay_type_.Swap(&other->pay_type_);
  turnover_.Swap(&other->turnover_);
  product_detail_.Swap(&other->product_detail_);
  product_title_.Swap(&other->product_title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChargeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChargeRequest_descriptor_;
  metadata.reflection = ChargeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChargeRequest

// optional string user_id = 1;
void ChargeRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::user_id() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.user_id)
}
void ChargeRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.user_id)
}
void ChargeRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.user_id)
}
::std::string* ChargeRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.user_id)
}

// optional string login_token = 2;
void ChargeRequest::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::login_token() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.login_token)
}
void ChargeRequest::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.login_token)
}
void ChargeRequest::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.login_token)
}
::std::string* ChargeRequest::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_login_token() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.login_token)
}

// optional .charge.TransferIn transfer_in = 3;
bool ChargeRequest::has_transfer_in() const {
  return this != internal_default_instance() && transfer_in_ != NULL;
}
void ChargeRequest::clear_transfer_in() {
  if (GetArenaNoVirtual() == NULL && transfer_in_ != NULL) delete transfer_in_;
  transfer_in_ = NULL;
}
const ::charge::TransferIn& ChargeRequest::transfer_in() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.transfer_in)
  return transfer_in_ != NULL ? *transfer_in_
                         : *::charge::TransferIn::internal_default_instance();
}
::charge::TransferIn* ChargeRequest::mutable_transfer_in() {
  
  if (transfer_in_ == NULL) {
    transfer_in_ = new ::charge::TransferIn;
  }
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.transfer_in)
  return transfer_in_;
}
::charge::TransferIn* ChargeRequest::release_transfer_in() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.transfer_in)
  
  ::charge::TransferIn* temp = transfer_in_;
  transfer_in_ = NULL;
  return temp;
}
void ChargeRequest::set_allocated_transfer_in(::charge::TransferIn* transfer_in) {
  delete transfer_in_;
  transfer_in_ = transfer_in;
  if (transfer_in) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.transfer_in)
}

// optional string pay_type = 4;
void ChargeRequest::clear_pay_type() {
  pay_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::pay_type() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.pay_type)
  return pay_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_pay_type(const ::std::string& value) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.pay_type)
}
void ChargeRequest::set_pay_type(const char* value) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.pay_type)
}
void ChargeRequest::set_pay_type(const char* value, size_t size) {
  
  pay_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.pay_type)
}
::std::string* ChargeRequest::mutable_pay_type() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.pay_type)
  return pay_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_pay_type() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.pay_type)
  
  return pay_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_pay_type(::std::string* pay_type) {
  if (pay_type != NULL) {
    
  } else {
    
  }
  pay_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_type);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.pay_type)
}

// optional string turnover = 5;
void ChargeRequest::clear_turnover() {
  turnover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::turnover() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.turnover)
  return turnover_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_turnover(const ::std::string& value) {
  
  turnover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.turnover)
}
void ChargeRequest::set_turnover(const char* value) {
  
  turnover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.turnover)
}
void ChargeRequest::set_turnover(const char* value, size_t size) {
  
  turnover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.turnover)
}
::std::string* ChargeRequest::mutable_turnover() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.turnover)
  return turnover_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_turnover() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.turnover)
  
  return turnover_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_turnover(::std::string* turnover) {
  if (turnover != NULL) {
    
  } else {
    
  }
  turnover_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), turnover);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.turnover)
}

// optional string product_detail = 6;
void ChargeRequest::clear_product_detail() {
  product_detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::product_detail() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.product_detail)
  return product_detail_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_product_detail(const ::std::string& value) {
  
  product_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.product_detail)
}
void ChargeRequest::set_product_detail(const char* value) {
  
  product_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.product_detail)
}
void ChargeRequest::set_product_detail(const char* value, size_t size) {
  
  product_detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.product_detail)
}
::std::string* ChargeRequest::mutable_product_detail() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.product_detail)
  return product_detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_product_detail() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.product_detail)
  
  return product_detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_product_detail(::std::string* product_detail) {
  if (product_detail != NULL) {
    
  } else {
    
  }
  product_detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_detail);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.product_detail)
}

// optional string product_title = 7;
void ChargeRequest::clear_product_title() {
  product_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeRequest::product_title() const {
  // @@protoc_insertion_point(field_get:charge.ChargeRequest.product_title)
  return product_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_product_title(const ::std::string& value) {
  
  product_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeRequest.product_title)
}
void ChargeRequest::set_product_title(const char* value) {
  
  product_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeRequest.product_title)
}
void ChargeRequest::set_product_title(const char* value, size_t size) {
  
  product_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeRequest.product_title)
}
::std::string* ChargeRequest::mutable_product_title() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeRequest.product_title)
  return product_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeRequest::release_product_title() {
  // @@protoc_insertion_point(field_release:charge.ChargeRequest.product_title)
  
  return product_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeRequest::set_allocated_product_title(::std::string* product_title) {
  if (product_title != NULL) {
    
  } else {
    
  }
  product_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_title);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeRequest.product_title)
}

inline const ChargeRequest* ChargeRequest::internal_default_instance() {
  return &ChargeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TransferIn::kTypeFieldNumber;
const int TransferIn::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TransferIn::TransferIn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:charge.TransferIn)
}

void TransferIn::InitAsDefaultInstance() {
}

TransferIn::TransferIn(const TransferIn& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:charge.TransferIn)
}

void TransferIn::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TransferIn::~TransferIn() {
  // @@protoc_insertion_point(destructor:charge.TransferIn)
  SharedDtor();
}

void TransferIn::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TransferIn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TransferIn::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TransferIn_descriptor_;
}

const TransferIn& TransferIn::default_instance() {
  protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<TransferIn> TransferIn_default_instance_;

TransferIn* TransferIn::New(::google::protobuf::Arena* arena) const {
  TransferIn* n = new TransferIn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TransferIn::Clear() {
// @@protoc_insertion_point(message_clear_start:charge.TransferIn)
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TransferIn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:charge.TransferIn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string Type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), this->type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.TransferIn.Type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_Key;
        break;
      }

      // optional string Key = 2;
      case 2: {
        if (tag == 18) {
         parse_Key:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.TransferIn.Key"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:charge.TransferIn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:charge.TransferIn)
  return false;
#undef DO_
}

void TransferIn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:charge.TransferIn)
  // optional string Type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.TransferIn.Type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.TransferIn.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->key(), output);
  }

  // @@protoc_insertion_point(serialize_end:charge.TransferIn)
}

::google::protobuf::uint8* TransferIn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:charge.TransferIn)
  // optional string Type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), this->type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.TransferIn.Type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.TransferIn.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->key(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:charge.TransferIn)
  return target;
}

size_t TransferIn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:charge.TransferIn)
  size_t total_size = 0;

  // optional string Type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // optional string Key = 2;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TransferIn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:charge.TransferIn)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const TransferIn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TransferIn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:charge.TransferIn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:charge.TransferIn)
    UnsafeMergeFrom(*source);
  }
}

void TransferIn::MergeFrom(const TransferIn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:charge.TransferIn)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void TransferIn::UnsafeMergeFrom(const TransferIn& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void TransferIn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:charge.TransferIn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TransferIn::CopyFrom(const TransferIn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:charge.TransferIn)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool TransferIn::IsInitialized() const {

  return true;
}

void TransferIn::Swap(TransferIn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TransferIn::InternalSwap(TransferIn* other) {
  type_.Swap(&other->type_);
  key_.Swap(&other->key_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TransferIn::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TransferIn_descriptor_;
  metadata.reflection = TransferIn_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TransferIn

// optional string Type = 1;
void TransferIn::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferIn::type() const {
  // @@protoc_insertion_point(field_get:charge.TransferIn.Type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferIn::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.TransferIn.Type)
}
void TransferIn::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.TransferIn.Type)
}
void TransferIn::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.TransferIn.Type)
}
::std::string* TransferIn::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:charge.TransferIn.Type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferIn::release_type() {
  // @@protoc_insertion_point(field_release:charge.TransferIn.Type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferIn::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:charge.TransferIn.Type)
}

// optional string Key = 2;
void TransferIn::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TransferIn::key() const {
  // @@protoc_insertion_point(field_get:charge.TransferIn.Key)
  return key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferIn::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.TransferIn.Key)
}
void TransferIn::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.TransferIn.Key)
}
void TransferIn::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.TransferIn.Key)
}
::std::string* TransferIn::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:charge.TransferIn.Key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TransferIn::release_key() {
  // @@protoc_insertion_point(field_release:charge.TransferIn.Key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TransferIn::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:charge.TransferIn.Key)
}

inline const TransferIn* TransferIn::internal_default_instance() {
  return &TransferIn_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChargeResponse::kAppIdFieldNumber;
const int ChargeResponse::kPartnerIdFieldNumber;
const int ChargeResponse::kPrepayIdFieldNumber;
const int ChargeResponse::kPackageFieldNumber;
const int ChargeResponse::kNoncestrFieldNumber;
const int ChargeResponse::kTimeStampFieldNumber;
const int ChargeResponse::kSignFieldNumber;
const int ChargeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChargeResponse::ChargeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:charge.ChargeResponse)
}

void ChargeResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

ChargeResponse::ChargeResponse(const ChargeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:charge.ChargeResponse)
}

void ChargeResponse::SharedCtor() {
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

ChargeResponse::~ChargeResponse() {
  // @@protoc_insertion_point(destructor:charge.ChargeResponse)
  SharedDtor();
}

void ChargeResponse::SharedDtor() {
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ChargeResponse_default_instance_.get()) {
    delete error_;
  }
}

void ChargeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChargeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChargeResponse_descriptor_;
}

const ChargeResponse& ChargeResponse::default_instance() {
  protobuf_InitDefaults_charge_2fmsg_5fcharge_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ChargeResponse> ChargeResponse_default_instance_;

ChargeResponse* ChargeResponse::New(::google::protobuf::Arena* arena) const {
  ChargeResponse* n = new ChargeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChargeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:charge.ChargeResponse)
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool ChargeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:charge.ChargeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_id().data(), this->app_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.app_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partner_id;
        break;
      }

      // optional string partner_id = 2;
      case 2: {
        if (tag == 18) {
         parse_partner_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partner_id().data(), this->partner_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.partner_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_prepay_id;
        break;
      }

      // optional string prepay_id = 3;
      case 3: {
        if (tag == 26) {
         parse_prepay_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prepay_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prepay_id().data(), this->prepay_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.prepay_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_package;
        break;
      }

      // optional string package = 4;
      case 4: {
        if (tag == 34) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), this->package().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.package"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_noncestr;
        break;
      }

      // optional string noncestr = 5;
      case 5: {
        if (tag == 42) {
         parse_noncestr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_noncestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->noncestr().data(), this->noncestr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.noncestr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time_stamp;
        break;
      }

      // optional string time_stamp = 6;
      case 6: {
        if (tag == 50) {
         parse_time_stamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_stamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_stamp().data(), this->time_stamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.time_stamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sign;
        break;
      }

      // optional string sign = 7;
      case 7: {
        if (tag == 58) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "charge.ChargeResponse.sign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 8;
      case 8: {
        if (tag == 66) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:charge.ChargeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:charge.ChargeResponse)
  return false;
#undef DO_
}

void ChargeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:charge.ChargeResponse)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_id(), output);
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partner_id().data(), this->partner_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.partner_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->partner_id(), output);
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.prepay_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prepay_id(), output);
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->package(), output);
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.noncestr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->noncestr(), output);
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_stamp().data(), this->time_stamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.time_stamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time_stamp(), output);
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sign(), output);
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:charge.ChargeResponse)
}

::google::protobuf::uint8* ChargeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:charge.ChargeResponse)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_id(), target);
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partner_id().data(), this->partner_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.partner_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partner_id(), target);
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.prepay_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prepay_id(), target);
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->package(), target);
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.noncestr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->noncestr(), target);
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_stamp().data(), this->time_stamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.time_stamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time_stamp(), target);
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "charge.ChargeResponse.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sign(), target);
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:charge.ChargeResponse)
  return target;
}

size_t ChargeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:charge.ChargeResponse)
  size_t total_size = 0;

  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_id());
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partner_id());
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prepay_id());
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->noncestr());
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_stamp());
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChargeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:charge.ChargeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChargeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChargeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:charge.ChargeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:charge.ChargeResponse)
    UnsafeMergeFrom(*source);
  }
}

void ChargeResponse::MergeFrom(const ChargeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:charge.ChargeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ChargeResponse::UnsafeMergeFrom(const ChargeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_id().size() > 0) {

    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  if (from.partner_id().size() > 0) {

    partner_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partner_id_);
  }
  if (from.prepay_id().size() > 0) {

    prepay_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepay_id_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.noncestr().size() > 0) {

    noncestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noncestr_);
  }
  if (from.time_stamp().size() > 0) {

    time_stamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_stamp_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void ChargeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:charge.ChargeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeResponse::CopyFrom(const ChargeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:charge.ChargeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ChargeResponse::IsInitialized() const {

  return true;
}

void ChargeResponse::Swap(ChargeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChargeResponse::InternalSwap(ChargeResponse* other) {
  app_id_.Swap(&other->app_id_);
  partner_id_.Swap(&other->partner_id_);
  prepay_id_.Swap(&other->prepay_id_);
  package_.Swap(&other->package_);
  noncestr_.Swap(&other->noncestr_);
  time_stamp_.Swap(&other->time_stamp_);
  sign_.Swap(&other->sign_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChargeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChargeResponse_descriptor_;
  metadata.reflection = ChargeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChargeResponse

// optional string app_id = 1;
void ChargeResponse::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::app_id() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.app_id)
}
void ChargeResponse::set_app_id(const char* value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.app_id)
}
void ChargeResponse::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.app_id)
}
::std::string* ChargeResponse::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_app_id() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.app_id)
}

// optional string partner_id = 2;
void ChargeResponse::clear_partner_id() {
  partner_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::partner_id() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.partner_id)
  return partner_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_partner_id(const ::std::string& value) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.partner_id)
}
void ChargeResponse::set_partner_id(const char* value) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.partner_id)
}
void ChargeResponse::set_partner_id(const char* value, size_t size) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.partner_id)
}
::std::string* ChargeResponse::mutable_partner_id() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.partner_id)
  return partner_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_partner_id() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.partner_id)
  
  return partner_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_partner_id(::std::string* partner_id) {
  if (partner_id != NULL) {
    
  } else {
    
  }
  partner_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partner_id);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.partner_id)
}

// optional string prepay_id = 3;
void ChargeResponse::clear_prepay_id() {
  prepay_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::prepay_id() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.prepay_id)
  return prepay_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_prepay_id(const ::std::string& value) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.prepay_id)
}
void ChargeResponse::set_prepay_id(const char* value) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.prepay_id)
}
void ChargeResponse::set_prepay_id(const char* value, size_t size) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.prepay_id)
}
::std::string* ChargeResponse::mutable_prepay_id() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.prepay_id)
  return prepay_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_prepay_id() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.prepay_id)
  
  return prepay_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_prepay_id(::std::string* prepay_id) {
  if (prepay_id != NULL) {
    
  } else {
    
  }
  prepay_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepay_id);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.prepay_id)
}

// optional string package = 4;
void ChargeResponse::clear_package() {
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::package() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.package)
  return package_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_package(const ::std::string& value) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.package)
}
void ChargeResponse::set_package(const char* value) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.package)
}
void ChargeResponse::set_package(const char* value, size_t size) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.package)
}
::std::string* ChargeResponse::mutable_package() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.package)
  return package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_package() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.package)
  
  return package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_package(::std::string* package) {
  if (package != NULL) {
    
  } else {
    
  }
  package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.package)
}

// optional string noncestr = 5;
void ChargeResponse::clear_noncestr() {
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::noncestr() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.noncestr)
  return noncestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_noncestr(const ::std::string& value) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.noncestr)
}
void ChargeResponse::set_noncestr(const char* value) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.noncestr)
}
void ChargeResponse::set_noncestr(const char* value, size_t size) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.noncestr)
}
::std::string* ChargeResponse::mutable_noncestr() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.noncestr)
  return noncestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_noncestr() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.noncestr)
  
  return noncestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_noncestr(::std::string* noncestr) {
  if (noncestr != NULL) {
    
  } else {
    
  }
  noncestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noncestr);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.noncestr)
}

// optional string time_stamp = 6;
void ChargeResponse::clear_time_stamp() {
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::time_stamp() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.time_stamp)
  return time_stamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_time_stamp(const ::std::string& value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.time_stamp)
}
void ChargeResponse::set_time_stamp(const char* value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.time_stamp)
}
void ChargeResponse::set_time_stamp(const char* value, size_t size) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.time_stamp)
}
::std::string* ChargeResponse::mutable_time_stamp() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.time_stamp)
  return time_stamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_time_stamp() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.time_stamp)
  
  return time_stamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_time_stamp(::std::string* time_stamp) {
  if (time_stamp != NULL) {
    
  } else {
    
  }
  time_stamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_stamp);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.time_stamp)
}

// optional string sign = 7;
void ChargeResponse::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ChargeResponse::sign() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.sign)
  return sign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:charge.ChargeResponse.sign)
}
void ChargeResponse::set_sign(const char* value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:charge.ChargeResponse.sign)
}
void ChargeResponse::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:charge.ChargeResponse.sign)
}
::std::string* ChargeResponse::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ChargeResponse::release_sign() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ChargeResponse::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.sign)
}

// optional .grpcCommon.GrpcError error = 8;
bool ChargeResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void ChargeResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& ChargeResponse::error() const {
  // @@protoc_insertion_point(field_get:charge.ChargeResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* ChargeResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:charge.ChargeResponse.error)
  return error_;
}
::grpcCommon::GrpcError* ChargeResponse::release_error() {
  // @@protoc_insertion_point(field_release:charge.ChargeResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void ChargeResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:charge.ChargeResponse.error)
}

inline const ChargeResponse* ChargeResponse::internal_default_instance() {
  return &ChargeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace charge

// @@protoc_insertion_point(global_scope)
