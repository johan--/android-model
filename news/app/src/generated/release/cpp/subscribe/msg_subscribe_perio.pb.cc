// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscribe/msg_subscribe_perio.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "subscribe/msg_subscribe_perio.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace subscribe {

namespace {

const ::google::protobuf::Descriptor* SubscribePerioRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckPerioISSubscribedRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckPerioISSubscribedRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CheckPerioISSubscribeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CheckPerioISSubscribeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListResponse_SubscribePerioMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListResponse_SubscribePerioMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddSubscribePerioTreeListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddSubscribePerioTreeListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListSearchRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListSearchRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListSearchResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListSearchResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListSearchResponse_PerioListSearchMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "subscribe/msg_subscribe_perio.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribePerioRequest_descriptor_ = file->message_type(0);
  static const int SubscribePerioRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, perio_id_),
  };
  SubscribePerioRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioRequest_descriptor_,
      SubscribePerioRequest::internal_default_instance(),
      SubscribePerioRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, _internal_metadata_));
  SubscribePerioResponse_descriptor_ = file->message_type(1);
  static const int SubscribePerioResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, subscribe_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, error_),
  };
  SubscribePerioResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioResponse_descriptor_,
      SubscribePerioResponse::internal_default_instance(),
      SubscribePerioResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, _internal_metadata_));
  CheckPerioISSubscribedRequest_descriptor_ = file->message_type(2);
  static const int CheckPerioISSubscribedRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribedRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribedRequest, perio_id_),
  };
  CheckPerioISSubscribedRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckPerioISSubscribedRequest_descriptor_,
      CheckPerioISSubscribedRequest::internal_default_instance(),
      CheckPerioISSubscribedRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckPerioISSubscribedRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribedRequest, _internal_metadata_));
  CheckPerioISSubscribeResponse_descriptor_ = file->message_type(3);
  static const int CheckPerioISSubscribeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribeResponse, is_subscribed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribeResponse, error_),
  };
  CheckPerioISSubscribeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CheckPerioISSubscribeResponse_descriptor_,
      CheckPerioISSubscribeResponse::internal_default_instance(),
      CheckPerioISSubscribeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CheckPerioISSubscribeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckPerioISSubscribeResponse, _internal_metadata_));
  SubscribePerioListRequest_descriptor_ = file->message_type(4);
  static const int SubscribePerioListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, page_size_),
  };
  SubscribePerioListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListRequest_descriptor_,
      SubscribePerioListRequest::internal_default_instance(),
      SubscribePerioListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, _internal_metadata_));
  SubscribePerioListResponse_descriptor_ = file->message_type(5);
  static const int SubscribePerioListResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, subscribe_perio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, has_more_),
  };
  SubscribePerioListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListResponse_descriptor_,
      SubscribePerioListResponse::internal_default_instance(),
      SubscribePerioListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, _internal_metadata_));
  SubscribePerioListResponse_SubscribePerioMessage_descriptor_ = SubscribePerioListResponse_descriptor_->nested_type(0);
  static const int SubscribePerioListResponse_SubscribePerioMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_cover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_society_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, add_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, subscribe_id_),
  };
  SubscribePerioListResponse_SubscribePerioMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListResponse_SubscribePerioMessage_descriptor_,
      SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance(),
      SubscribePerioListResponse_SubscribePerioMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListResponse_SubscribePerioMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, _internal_metadata_));
  AddSubscribePerioTreeListRequest_descriptor_ = file->message_type(6);
  static const int AddSubscribePerioTreeListRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, pre_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, core_perio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, source_db_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, host_unit_area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, publish_cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, search_word_),
  };
  AddSubscribePerioTreeListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddSubscribePerioTreeListRequest_descriptor_,
      AddSubscribePerioTreeListRequest::internal_default_instance(),
      AddSubscribePerioTreeListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddSubscribePerioTreeListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListRequest, _internal_metadata_));
  AddSubscribePerioTreeListResponse_descriptor_ = file->message_type(7);
  static const int AddSubscribePerioTreeListResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse, tree_item_),
  };
  AddSubscribePerioTreeListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddSubscribePerioTreeListResponse_descriptor_,
      AddSubscribePerioTreeListResponse::internal_default_instance(),
      AddSubscribePerioTreeListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddSubscribePerioTreeListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse, _internal_metadata_));
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_ = AddSubscribePerioTreeListResponse_descriptor_->nested_type(0);
  static const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, value_),
  };
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_,
      AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::internal_default_instance(),
      AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage, _internal_metadata_));
  SubscribePerioListSearchRequest_descriptor_ = file->message_type(8);
  static const int SubscribePerioListSearchRequest_offsets_[11] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, page_size_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, select_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, select_order_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, pre_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, core_perio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, source_db_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, host_unit_area_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, publish_cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, user_id_),
  };
  SubscribePerioListSearchRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListSearchRequest_descriptor_,
      SubscribePerioListSearchRequest::internal_default_instance(),
      SubscribePerioListSearchRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListSearchRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchRequest, _internal_metadata_));
  SubscribePerioListSearchResponse_descriptor_ = file->message_type(9);
  static const int SubscribePerioListSearchResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse, has_more_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse, search_perios_),
  };
  SubscribePerioListSearchResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListSearchResponse_descriptor_,
      SubscribePerioListSearchResponse::internal_default_instance(),
      SubscribePerioListSearchResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListSearchResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse, _internal_metadata_));
  SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_ = SubscribePerioListSearchResponse_descriptor_->nested_type(0);
  static const int SubscribePerioListSearchResponse_PerioListSearchMessage_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, perio_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, perio_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, end_issue_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, end_year_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, core_perio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, publish_cycle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, subscribe_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, is_subscribed_),
  };
  SubscribePerioListSearchResponse_PerioListSearchMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_,
      SubscribePerioListSearchResponse_PerioListSearchMessage::internal_default_instance(),
      SubscribePerioListSearchResponse_PerioListSearchMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListSearchResponse_PerioListSearchMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListSearchResponse_PerioListSearchMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioRequest_descriptor_, SubscribePerioRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioResponse_descriptor_, SubscribePerioResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckPerioISSubscribedRequest_descriptor_, CheckPerioISSubscribedRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CheckPerioISSubscribeResponse_descriptor_, CheckPerioISSubscribeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListRequest_descriptor_, SubscribePerioListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListResponse_descriptor_, SubscribePerioListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListResponse_SubscribePerioMessage_descriptor_, SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddSubscribePerioTreeListRequest_descriptor_, AddSubscribePerioTreeListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddSubscribePerioTreeListResponse_descriptor_, AddSubscribePerioTreeListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_, AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListSearchRequest_descriptor_, SubscribePerioListSearchRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListSearchResponse_descriptor_, SubscribePerioListSearchResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_, SubscribePerioListSearchResponse_PerioListSearchMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  SubscribePerioRequest_default_instance_.Shutdown();
  delete SubscribePerioRequest_reflection_;
  SubscribePerioResponse_default_instance_.Shutdown();
  delete SubscribePerioResponse_reflection_;
  CheckPerioISSubscribedRequest_default_instance_.Shutdown();
  delete CheckPerioISSubscribedRequest_reflection_;
  CheckPerioISSubscribeResponse_default_instance_.Shutdown();
  delete CheckPerioISSubscribeResponse_reflection_;
  SubscribePerioListRequest_default_instance_.Shutdown();
  delete SubscribePerioListRequest_reflection_;
  SubscribePerioListResponse_default_instance_.Shutdown();
  delete SubscribePerioListResponse_reflection_;
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.Shutdown();
  delete SubscribePerioListResponse_SubscribePerioMessage_reflection_;
  AddSubscribePerioTreeListRequest_default_instance_.Shutdown();
  delete AddSubscribePerioTreeListRequest_reflection_;
  AddSubscribePerioTreeListResponse_default_instance_.Shutdown();
  delete AddSubscribePerioTreeListResponse_reflection_;
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_default_instance_.Shutdown();
  delete AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_reflection_;
  SubscribePerioListSearchRequest_default_instance_.Shutdown();
  delete SubscribePerioListSearchRequest_reflection_;
  SubscribePerioListSearchResponse_default_instance_.Shutdown();
  delete SubscribePerioListSearchResponse_reflection_;
  SubscribePerioListSearchResponse_PerioListSearchMessage_default_instance_.Shutdown();
  delete SubscribePerioListSearchResponse_PerioListSearchMessage_reflection_;
}

void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioRequest_default_instance_.DefaultConstruct();
  SubscribePerioResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CheckPerioISSubscribedRequest_default_instance_.DefaultConstruct();
  CheckPerioISSubscribeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListRequest_default_instance_.DefaultConstruct();
  SubscribePerioListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AddSubscribePerioTreeListRequest_default_instance_.DefaultConstruct();
  AddSubscribePerioTreeListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListSearchRequest_default_instance_.DefaultConstruct();
  SubscribePerioListSearchResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListSearchResponse_PerioListSearchMessage_default_instance_.DefaultConstruct();
  SubscribePerioRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CheckPerioISSubscribedRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CheckPerioISSubscribeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddSubscribePerioTreeListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddSubscribePerioTreeListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListSearchRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListSearchResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListSearchResponse_PerioListSearchMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_);
void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_,
                 &protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl);
}
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#subscribe/msg_subscribe_perio.proto\022\ts"
    "ubscribe\032\031google/protobuf/any.proto\032\032grp"
    "cCommon/msg_error.proto\":\n\025SubscribePeri"
    "oRequest\022\017\n\007user_id\030\001 \001(\t\022\020\n\010perio_id\030\002 "
    "\001(\t\"Y\n\026SubscribePerioResponse\022\031\n\021subscri"
    "be_success\030\001 \001(\010\022$\n\005error\030\002 \001(\0132\025.grpcCo"
    "mmon.GrpcError\"B\n\035CheckPerioISSubscribed"
    "Request\022\017\n\007user_id\030\001 \001(\t\022\020\n\010perio_id\030\002 \001"
    "(\t\"\\\n\035CheckPerioISSubscribeResponse\022\025\n\ri"
    "s_subscribed\030\001 \001(\010\022$\n\005error\030\002 \001(\0132\025.grpc"
    "Common.GrpcError\"T\n\031SubscribePerioListRe"
    "quest\022\017\n\007user_id\030\001 \001(\t\022\023\n\013page_number\030\002 "
    "\001(\005\022\021\n\tpage_size\030\003 \001(\005\"\276\002\n\032SubscribePeri"
    "oListResponse\022T\n\017subscribe_perio\030\001 \003(\0132;"
    ".subscribe.SubscribePerioListResponse.Su"
    "bscribePerioMessage\022$\n\005error\030\002 \001(\0132\025.grp"
    "cCommon.GrpcError\022\020\n\010has_more\030\003 \001(\010\032\221\001\n\025"
    "SubscribePerioMessage\022\020\n\010perio_id\030\001 \001(\t\022"
    "\022\n\nperio_name\030\002 \001(\t\022\023\n\013perio_cover\030\003 \001(\t"
    "\022\025\n\rperio_society\030\004 \001(\t\022\020\n\010add_time\030\005 \001("
    "\t\022\024\n\014subscribe_id\030\006 \001(\t\"\240\001\n AddSubscribe"
    "PerioTreeListRequest\022\021\n\tpre_title\030\001 \001(\t\022"
    "\022\n\ncore_perio\030\002 \001(\t\022\021\n\tsource_db\030\003 \001(\t\022\026"
    "\n\016host_unit_area\030\004 \001(\t\022\025\n\rpublish_cycle\030"
    "\005 \001(\t\022\023\n\013search_word\030\006 \003(\t\"\344\001\n!AddSubscr"
    "ibePerioTreeListResponse\022[\n\ttree_item\030\001 "
    "\003(\0132H.subscribe.AddSubscribePerioTreeLis"
    "tResponse.AddSubscribeTreeItemMessage\032b\n"
    "\033AddSubscribeTreeItemMessage\022\n\n\002id\030\001 \001(\t"
    "\022\014\n\004name\030\002 \001(\t\022\013\n\003pid\030\003 \001(\t\022\r\n\005count\030\004 \001"
    "(\005\022\r\n\005value\030\005 \001(\t\"\376\001\n\037SubscribePerioList"
    "SearchRequest\022\023\n\013page_number\030\001 \001(\005\022\021\n\tpa"
    "ge_size\030\002 \001(\005\022\024\n\014select_title\030\003 \003(\t\022\024\n\014s"
    "elect_order\030\004 \001(\t\022\021\n\tpre_title\030\006 \001(\t\022\022\n\n"
    "core_perio\030\007 \001(\t\022\021\n\tsource_db\030\010 \001(\t\022\026\n\016h"
    "ost_unit_area\030\t \001(\t\022\025\n\rpublish_cycle\030\n \001"
    "(\t\022\r\n\005value\030\013 \001(\t\022\017\n\007user_id\030\014 \001(\t\"\364\002\n S"
    "ubscribePerioListSearchResponse\022$\n\005error"
    "\030\001 \001(\0132\025.grpcCommon.GrpcError\022\020\n\010has_mor"
    "e\030\002 \001(\010\022Y\n\rsearch_perios\030\003 \003(\0132B.subscri"
    "be.SubscribePerioListSearchResponse.Peri"
    "oListSearchMessage\032\274\001\n\026PerioListSearchMe"
    "ssage\022\023\n\013perio_title\030\001 \001(\t\022\020\n\010perio_id\030\002"
    " \001(\t\022\021\n\tend_issue\030\003 \001(\t\022\020\n\010end_year\030\004 \001("
    "\t\022\022\n\ncore_perio\030\005 \001(\t\022\025\n\rpublish_cycle\030\006"
    " \001(\t\022\024\n\014subscribe_id\030\007 \001(\t\022\025\n\ris_subscri"
    "bed\030\010 \001(\010B \n\025com.wanfang.subscribeP\001\242\002\004W"
    "FPRb\006proto3", 1891);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "subscribe/msg_subscribe_perio.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_5fperio_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_);
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_,
                 &protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto {
  StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
    protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  }
} static_descriptor_initializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioRequest::kUserIdFieldNumber;
const int SubscribePerioRequest::kPerioIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioRequest::SubscribePerioRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioRequest)
}

void SubscribePerioRequest::InitAsDefaultInstance() {
}

SubscribePerioRequest::SubscribePerioRequest(const SubscribePerioRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioRequest)
}

void SubscribePerioRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubscribePerioRequest::~SubscribePerioRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioRequest)
  SharedDtor();
}

void SubscribePerioRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioRequest_descriptor_;
}

const SubscribePerioRequest& SubscribePerioRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioRequest> SubscribePerioRequest_default_instance_;

SubscribePerioRequest* SubscribePerioRequest::New(::google::protobuf::Arena* arena) const {
  SubscribePerioRequest* n = new SubscribePerioRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubscribePerioRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_id;
        break;
      }

      // optional string perio_id = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioRequest.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioRequest)
  return false;
#undef DO_
}

void SubscribePerioRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioRequest)
}

::google::protobuf::uint8* SubscribePerioRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioRequest)
  return target;
}

size_t SubscribePerioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioRequest::MergeFrom(const SubscribePerioRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioRequest::UnsafeMergeFrom(const SubscribePerioRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
}

void SubscribePerioRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioRequest::CopyFrom(const SubscribePerioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioRequest::IsInitialized() const {

  return true;
}

void SubscribePerioRequest::Swap(SubscribePerioRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioRequest::InternalSwap(SubscribePerioRequest* other) {
  user_id_.Swap(&other->user_id_);
  perio_id_.Swap(&other->perio_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioRequest_descriptor_;
  metadata.reflection = SubscribePerioRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioRequest

// optional string user_id = 1;
void SubscribePerioRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioRequest.user_id)
}
void SubscribePerioRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioRequest.user_id)
}
void SubscribePerioRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioRequest.user_id)
}
::std::string* SubscribePerioRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioRequest.user_id)
}

// optional string perio_id = 2;
void SubscribePerioRequest::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioRequest::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioRequest.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioRequest.perio_id)
}
void SubscribePerioRequest::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioRequest.perio_id)
}
void SubscribePerioRequest::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioRequest.perio_id)
}
::std::string* SubscribePerioRequest::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioRequest.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioRequest::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioRequest.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioRequest.perio_id)
}

inline const SubscribePerioRequest* SubscribePerioRequest::internal_default_instance() {
  return &SubscribePerioRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioResponse::kSubscribeSuccessFieldNumber;
const int SubscribePerioResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioResponse::SubscribePerioResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioResponse)
}

void SubscribePerioResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubscribePerioResponse::SubscribePerioResponse(const SubscribePerioResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioResponse)
}

void SubscribePerioResponse::SharedCtor() {
  error_ = NULL;
  subscribe_success_ = false;
  _cached_size_ = 0;
}

SubscribePerioResponse::~SubscribePerioResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioResponse)
  SharedDtor();
}

void SubscribePerioResponse::SharedDtor() {
  if (this != &SubscribePerioResponse_default_instance_.get()) {
    delete error_;
  }
}

void SubscribePerioResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioResponse_descriptor_;
}

const SubscribePerioResponse& SubscribePerioResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioResponse> SubscribePerioResponse_default_instance_;

SubscribePerioResponse* SubscribePerioResponse::New(::google::protobuf::Arena* arena) const {
  SubscribePerioResponse* n = new SubscribePerioResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioResponse)
  subscribe_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool SubscribePerioResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool subscribe_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribe_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioResponse)
  return false;
#undef DO_
}

void SubscribePerioResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioResponse)
  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->subscribe_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioResponse)
}

::google::protobuf::uint8* SubscribePerioResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioResponse)
  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->subscribe_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioResponse)
  return target;
}

size_t SubscribePerioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioResponse)
  size_t total_size = 0;

  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioResponse::MergeFrom(const SubscribePerioResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioResponse::UnsafeMergeFrom(const SubscribePerioResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.subscribe_success() != 0) {
    set_subscribe_success(from.subscribe_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void SubscribePerioResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioResponse::CopyFrom(const SubscribePerioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioResponse::IsInitialized() const {

  return true;
}

void SubscribePerioResponse::Swap(SubscribePerioResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioResponse::InternalSwap(SubscribePerioResponse* other) {
  std::swap(subscribe_success_, other->subscribe_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioResponse_descriptor_;
  metadata.reflection = SubscribePerioResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioResponse

// optional bool subscribe_success = 1;
void SubscribePerioResponse::clear_subscribe_success() {
  subscribe_success_ = false;
}
bool SubscribePerioResponse::subscribe_success() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioResponse.subscribe_success)
  return subscribe_success_;
}
void SubscribePerioResponse::set_subscribe_success(bool value) {
  
  subscribe_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioResponse.subscribe_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool SubscribePerioResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubscribePerioResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubscribePerioResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubscribePerioResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubscribePerioResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubscribePerioResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioResponse.error)
}

inline const SubscribePerioResponse* SubscribePerioResponse::internal_default_instance() {
  return &SubscribePerioResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckPerioISSubscribedRequest::kUserIdFieldNumber;
const int CheckPerioISSubscribedRequest::kPerioIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPerioISSubscribedRequest::CheckPerioISSubscribedRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.CheckPerioISSubscribedRequest)
}

void CheckPerioISSubscribedRequest::InitAsDefaultInstance() {
}

CheckPerioISSubscribedRequest::CheckPerioISSubscribedRequest(const CheckPerioISSubscribedRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.CheckPerioISSubscribedRequest)
}

void CheckPerioISSubscribedRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CheckPerioISSubscribedRequest::~CheckPerioISSubscribedRequest() {
  // @@protoc_insertion_point(destructor:subscribe.CheckPerioISSubscribedRequest)
  SharedDtor();
}

void CheckPerioISSubscribedRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CheckPerioISSubscribedRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckPerioISSubscribedRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckPerioISSubscribedRequest_descriptor_;
}

const CheckPerioISSubscribedRequest& CheckPerioISSubscribedRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckPerioISSubscribedRequest> CheckPerioISSubscribedRequest_default_instance_;

CheckPerioISSubscribedRequest* CheckPerioISSubscribedRequest::New(::google::protobuf::Arena* arena) const {
  CheckPerioISSubscribedRequest* n = new CheckPerioISSubscribedRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckPerioISSubscribedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.CheckPerioISSubscribedRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CheckPerioISSubscribedRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.CheckPerioISSubscribedRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.CheckPerioISSubscribedRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_id;
        break;
      }

      // optional string perio_id = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.CheckPerioISSubscribedRequest.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.CheckPerioISSubscribedRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.CheckPerioISSubscribedRequest)
  return false;
#undef DO_
}

void CheckPerioISSubscribedRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.CheckPerioISSubscribedRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CheckPerioISSubscribedRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CheckPerioISSubscribedRequest.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.CheckPerioISSubscribedRequest)
}

::google::protobuf::uint8* CheckPerioISSubscribedRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.CheckPerioISSubscribedRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CheckPerioISSubscribedRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CheckPerioISSubscribedRequest.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.CheckPerioISSubscribedRequest)
  return target;
}

size_t CheckPerioISSubscribedRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.CheckPerioISSubscribedRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckPerioISSubscribedRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.CheckPerioISSubscribedRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckPerioISSubscribedRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPerioISSubscribedRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.CheckPerioISSubscribedRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.CheckPerioISSubscribedRequest)
    UnsafeMergeFrom(*source);
  }
}

void CheckPerioISSubscribedRequest::MergeFrom(const CheckPerioISSubscribedRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.CheckPerioISSubscribedRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckPerioISSubscribedRequest::UnsafeMergeFrom(const CheckPerioISSubscribedRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
}

void CheckPerioISSubscribedRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.CheckPerioISSubscribedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPerioISSubscribedRequest::CopyFrom(const CheckPerioISSubscribedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.CheckPerioISSubscribedRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckPerioISSubscribedRequest::IsInitialized() const {

  return true;
}

void CheckPerioISSubscribedRequest::Swap(CheckPerioISSubscribedRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPerioISSubscribedRequest::InternalSwap(CheckPerioISSubscribedRequest* other) {
  user_id_.Swap(&other->user_id_);
  perio_id_.Swap(&other->perio_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckPerioISSubscribedRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckPerioISSubscribedRequest_descriptor_;
  metadata.reflection = CheckPerioISSubscribedRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckPerioISSubscribedRequest

// optional string user_id = 1;
void CheckPerioISSubscribedRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckPerioISSubscribedRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.CheckPerioISSubscribedRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPerioISSubscribedRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.CheckPerioISSubscribedRequest.user_id)
}
void CheckPerioISSubscribedRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.CheckPerioISSubscribedRequest.user_id)
}
void CheckPerioISSubscribedRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.CheckPerioISSubscribedRequest.user_id)
}
::std::string* CheckPerioISSubscribedRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.CheckPerioISSubscribedRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPerioISSubscribedRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.CheckPerioISSubscribedRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPerioISSubscribedRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.CheckPerioISSubscribedRequest.user_id)
}

// optional string perio_id = 2;
void CheckPerioISSubscribedRequest::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CheckPerioISSubscribedRequest::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.CheckPerioISSubscribedRequest.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPerioISSubscribedRequest::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.CheckPerioISSubscribedRequest.perio_id)
}
void CheckPerioISSubscribedRequest::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.CheckPerioISSubscribedRequest.perio_id)
}
void CheckPerioISSubscribedRequest::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.CheckPerioISSubscribedRequest.perio_id)
}
::std::string* CheckPerioISSubscribedRequest::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.CheckPerioISSubscribedRequest.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CheckPerioISSubscribedRequest::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.CheckPerioISSubscribedRequest.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CheckPerioISSubscribedRequest::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.CheckPerioISSubscribedRequest.perio_id)
}

inline const CheckPerioISSubscribedRequest* CheckPerioISSubscribedRequest::internal_default_instance() {
  return &CheckPerioISSubscribedRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckPerioISSubscribeResponse::kIsSubscribedFieldNumber;
const int CheckPerioISSubscribeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckPerioISSubscribeResponse::CheckPerioISSubscribeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.CheckPerioISSubscribeResponse)
}

void CheckPerioISSubscribeResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

CheckPerioISSubscribeResponse::CheckPerioISSubscribeResponse(const CheckPerioISSubscribeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.CheckPerioISSubscribeResponse)
}

void CheckPerioISSubscribeResponse::SharedCtor() {
  error_ = NULL;
  is_subscribed_ = false;
  _cached_size_ = 0;
}

CheckPerioISSubscribeResponse::~CheckPerioISSubscribeResponse() {
  // @@protoc_insertion_point(destructor:subscribe.CheckPerioISSubscribeResponse)
  SharedDtor();
}

void CheckPerioISSubscribeResponse::SharedDtor() {
  if (this != &CheckPerioISSubscribeResponse_default_instance_.get()) {
    delete error_;
  }
}

void CheckPerioISSubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckPerioISSubscribeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CheckPerioISSubscribeResponse_descriptor_;
}

const CheckPerioISSubscribeResponse& CheckPerioISSubscribeResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CheckPerioISSubscribeResponse> CheckPerioISSubscribeResponse_default_instance_;

CheckPerioISSubscribeResponse* CheckPerioISSubscribeResponse::New(::google::protobuf::Arena* arena) const {
  CheckPerioISSubscribeResponse* n = new CheckPerioISSubscribeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckPerioISSubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.CheckPerioISSubscribeResponse)
  is_subscribed_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool CheckPerioISSubscribeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.CheckPerioISSubscribeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_subscribed = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscribed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.CheckPerioISSubscribeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.CheckPerioISSubscribeResponse)
  return false;
#undef DO_
}

void CheckPerioISSubscribeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.CheckPerioISSubscribeResponse)
  // optional bool is_subscribed = 1;
  if (this->is_subscribed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_subscribed(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.CheckPerioISSubscribeResponse)
}

::google::protobuf::uint8* CheckPerioISSubscribeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.CheckPerioISSubscribeResponse)
  // optional bool is_subscribed = 1;
  if (this->is_subscribed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_subscribed(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.CheckPerioISSubscribeResponse)
  return target;
}

size_t CheckPerioISSubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.CheckPerioISSubscribeResponse)
  size_t total_size = 0;

  // optional bool is_subscribed = 1;
  if (this->is_subscribed() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckPerioISSubscribeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.CheckPerioISSubscribeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CheckPerioISSubscribeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckPerioISSubscribeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.CheckPerioISSubscribeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.CheckPerioISSubscribeResponse)
    UnsafeMergeFrom(*source);
  }
}

void CheckPerioISSubscribeResponse::MergeFrom(const CheckPerioISSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.CheckPerioISSubscribeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CheckPerioISSubscribeResponse::UnsafeMergeFrom(const CheckPerioISSubscribeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.is_subscribed() != 0) {
    set_is_subscribed(from.is_subscribed());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void CheckPerioISSubscribeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.CheckPerioISSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckPerioISSubscribeResponse::CopyFrom(const CheckPerioISSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.CheckPerioISSubscribeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CheckPerioISSubscribeResponse::IsInitialized() const {

  return true;
}

void CheckPerioISSubscribeResponse::Swap(CheckPerioISSubscribeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckPerioISSubscribeResponse::InternalSwap(CheckPerioISSubscribeResponse* other) {
  std::swap(is_subscribed_, other->is_subscribed_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckPerioISSubscribeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CheckPerioISSubscribeResponse_descriptor_;
  metadata.reflection = CheckPerioISSubscribeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckPerioISSubscribeResponse

// optional bool is_subscribed = 1;
void CheckPerioISSubscribeResponse::clear_is_subscribed() {
  is_subscribed_ = false;
}
bool CheckPerioISSubscribeResponse::is_subscribed() const {
  // @@protoc_insertion_point(field_get:subscribe.CheckPerioISSubscribeResponse.is_subscribed)
  return is_subscribed_;
}
void CheckPerioISSubscribeResponse::set_is_subscribed(bool value) {
  
  is_subscribed_ = value;
  // @@protoc_insertion_point(field_set:subscribe.CheckPerioISSubscribeResponse.is_subscribed)
}

// optional .grpcCommon.GrpcError error = 2;
bool CheckPerioISSubscribeResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void CheckPerioISSubscribeResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& CheckPerioISSubscribeResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.CheckPerioISSubscribeResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* CheckPerioISSubscribeResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.CheckPerioISSubscribeResponse.error)
  return error_;
}
::grpcCommon::GrpcError* CheckPerioISSubscribeResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.CheckPerioISSubscribeResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void CheckPerioISSubscribeResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.CheckPerioISSubscribeResponse.error)
}

inline const CheckPerioISSubscribeResponse* CheckPerioISSubscribeResponse::internal_default_instance() {
  return &CheckPerioISSubscribeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListRequest::kUserIdFieldNumber;
const int SubscribePerioListRequest::kPageNumberFieldNumber;
const int SubscribePerioListRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListRequest::SubscribePerioListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListRequest)
}

void SubscribePerioListRequest::InitAsDefaultInstance() {
}

SubscribePerioListRequest::SubscribePerioListRequest(const SubscribePerioListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListRequest)
}

void SubscribePerioListRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_number_) + sizeof(page_size_));
  _cached_size_ = 0;
}

SubscribePerioListRequest::~SubscribePerioListRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListRequest)
  SharedDtor();
}

void SubscribePerioListRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListRequest_descriptor_;
}

const SubscribePerioListRequest& SubscribePerioListRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListRequest> SubscribePerioListRequest_default_instance_;

SubscribePerioListRequest* SubscribePerioListRequest::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListRequest* n = new SubscribePerioListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SubscribePerioListRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SubscribePerioListRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(page_number_, page_size_);
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SubscribePerioListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_number;
        break;
      }

      // optional int32 page_number = 2;
      case 2: {
        if (tag == 16) {
         parse_page_number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListRequest)
  return false;
#undef DO_
}

void SubscribePerioListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListRequest)
}

::google::protobuf::uint8* SubscribePerioListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListRequest)
  return target;
}

size_t SubscribePerioListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListRequest::MergeFrom(const SubscribePerioListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListRequest::UnsafeMergeFrom(const SubscribePerioListRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void SubscribePerioListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListRequest::CopyFrom(const SubscribePerioListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListRequest::IsInitialized() const {

  return true;
}

void SubscribePerioListRequest::Swap(SubscribePerioListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListRequest::InternalSwap(SubscribePerioListRequest* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(page_number_, other->page_number_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListRequest_descriptor_;
  metadata.reflection = SubscribePerioListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListRequest

// optional string user_id = 1;
void SubscribePerioListRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.user_id)
}
void SubscribePerioListRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListRequest.user_id)
}
void SubscribePerioListRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListRequest.user_id)
}
::std::string* SubscribePerioListRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListRequest.user_id)
}

// optional int32 page_number = 2;
void SubscribePerioListRequest::clear_page_number() {
  page_number_ = 0;
}
::google::protobuf::int32 SubscribePerioListRequest::page_number() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.page_number)
  return page_number_;
}
void SubscribePerioListRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.page_number)
}

// optional int32 page_size = 3;
void SubscribePerioListRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 SubscribePerioListRequest::page_size() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.page_size)
  return page_size_;
}
void SubscribePerioListRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.page_size)
}

inline const SubscribePerioListRequest* SubscribePerioListRequest::internal_default_instance() {
  return &SubscribePerioListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioIdFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioNameFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioCoverFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioSocietyFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kAddTimeFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kSubscribeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListResponse_SubscribePerioMessage::SubscribePerioListResponse_SubscribePerioMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

void SubscribePerioListResponse_SubscribePerioMessage::InitAsDefaultInstance() {
}

SubscribePerioListResponse_SubscribePerioMessage::SubscribePerioListResponse_SubscribePerioMessage(const SubscribePerioListResponse_SubscribePerioMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

void SubscribePerioListResponse_SubscribePerioMessage::SharedCtor() {
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubscribePerioListResponse_SubscribePerioMessage::~SubscribePerioListResponse_SubscribePerioMessage() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  SharedDtor();
}

void SubscribePerioListResponse_SubscribePerioMessage::SharedDtor() {
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListResponse_SubscribePerioMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListResponse_SubscribePerioMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListResponse_SubscribePerioMessage_descriptor_;
}

const SubscribePerioListResponse_SubscribePerioMessage& SubscribePerioListResponse_SubscribePerioMessage::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListResponse_SubscribePerioMessage> SubscribePerioListResponse_SubscribePerioMessage_default_instance_;

SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse_SubscribePerioMessage::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListResponse_SubscribePerioMessage* n = new SubscribePerioListResponse_SubscribePerioMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListResponse_SubscribePerioMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubscribePerioListResponse_SubscribePerioMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string perio_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_name;
        break;
      }

      // optional string perio_name = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_name().data(), this->perio_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_perio_cover;
        break;
      }

      // optional string perio_cover = 3;
      case 3: {
        if (tag == 26) {
         parse_perio_cover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_cover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_cover().data(), this->perio_cover().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_perio_society;
        break;
      }

      // optional string perio_society = 4;
      case 4: {
        if (tag == 34) {
         parse_perio_society:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_society()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_society().data(), this->perio_society().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_add_time;
        break;
      }

      // optional string add_time = 5;
      case 5: {
        if (tag == 42) {
         parse_add_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_add_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->add_time().data(), this->add_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_subscribe_id;
        break;
      }

      // optional string subscribe_id = 6;
      case 6: {
        if (tag == 50) {
         parse_subscribe_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subscribe_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subscribe_id().data(), this->subscribe_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return false;
#undef DO_
}

void SubscribePerioListResponse_SubscribePerioMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->perio_id(), output);
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_name().data(), this->perio_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_name(), output);
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_cover().data(), this->perio_cover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->perio_cover(), output);
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_society().data(), this->perio_society().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->perio_society(), output);
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->add_time(), output);
  }

  // optional string subscribe_id = 6;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->subscribe_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

::google::protobuf::uint8* SubscribePerioListResponse_SubscribePerioMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->perio_id(), target);
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_name().data(), this->perio_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_name(), target);
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_cover().data(), this->perio_cover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->perio_cover(), target);
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_society().data(), this->perio_society().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->perio_society(), target);
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->add_time(), target);
  }

  // optional string subscribe_id = 6;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->subscribe_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return target;
}

size_t SubscribePerioListResponse_SubscribePerioMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  size_t total_size = 0;

  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_name());
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_cover());
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_society());
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->add_time());
  }

  // optional string subscribe_id = 6;
  if (this->subscribe_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subscribe_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListResponse_SubscribePerioMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListResponse_SubscribePerioMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListResponse_SubscribePerioMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::MergeFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::UnsafeMergeFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
  if (from.perio_name().size() > 0) {

    perio_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_name_);
  }
  if (from.perio_cover().size() > 0) {

    perio_cover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_cover_);
  }
  if (from.perio_society().size() > 0) {

    perio_society_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_society_);
  }
  if (from.add_time().size() > 0) {

    add_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_time_);
  }
  if (from.subscribe_id().size() > 0) {

    subscribe_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subscribe_id_);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListResponse_SubscribePerioMessage::CopyFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListResponse_SubscribePerioMessage::IsInitialized() const {

  return true;
}

void SubscribePerioListResponse_SubscribePerioMessage::Swap(SubscribePerioListResponse_SubscribePerioMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListResponse_SubscribePerioMessage::InternalSwap(SubscribePerioListResponse_SubscribePerioMessage* other) {
  perio_id_.Swap(&other->perio_id_);
  perio_name_.Swap(&other->perio_name_);
  perio_cover_.Swap(&other->perio_cover_);
  perio_society_.Swap(&other->perio_society_);
  add_time_.Swap(&other->add_time_);
  subscribe_id_.Swap(&other->subscribe_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListResponse_SubscribePerioMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListResponse_SubscribePerioMessage_descriptor_;
  metadata.reflection = SubscribePerioListResponse_SubscribePerioMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListResponse::kSubscribePerioFieldNumber;
const int SubscribePerioListResponse::kErrorFieldNumber;
const int SubscribePerioListResponse::kHasMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListResponse::SubscribePerioListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListResponse)
}

void SubscribePerioListResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubscribePerioListResponse::SubscribePerioListResponse(const SubscribePerioListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListResponse)
}

void SubscribePerioListResponse::SharedCtor() {
  error_ = NULL;
  has_more_ = false;
  _cached_size_ = 0;
}

SubscribePerioListResponse::~SubscribePerioListResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListResponse)
  SharedDtor();
}

void SubscribePerioListResponse::SharedDtor() {
  if (this != &SubscribePerioListResponse_default_instance_.get()) {
    delete error_;
  }
}

void SubscribePerioListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListResponse_descriptor_;
}

const SubscribePerioListResponse& SubscribePerioListResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListResponse> SubscribePerioListResponse_default_instance_;

SubscribePerioListResponse* SubscribePerioListResponse::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListResponse* n = new SubscribePerioListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  has_more_ = false;
  subscribe_perio_.Clear();
}

bool SubscribePerioListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_subscribe_perio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subscribe_perio()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_subscribe_perio;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_more;
        break;
      }

      // optional bool has_more = 3;
      case 3: {
        if (tag == 24) {
         parse_has_more:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListResponse)
  return false;
#undef DO_
}

void SubscribePerioListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListResponse)
  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  for (unsigned int i = 0, n = this->subscribe_perio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subscribe_perio(i), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_more(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListResponse)
}

::google::protobuf::uint8* SubscribePerioListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListResponse)
  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  for (unsigned int i = 0, n = this->subscribe_perio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->subscribe_perio(i), false, target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_more(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListResponse)
  return target;
}

size_t SubscribePerioListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  {
    unsigned int count = this->subscribe_perio_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscribe_perio(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListResponse::MergeFrom(const SubscribePerioListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListResponse::UnsafeMergeFrom(const SubscribePerioListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  subscribe_perio_.MergeFrom(from.subscribe_perio_);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
}

void SubscribePerioListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListResponse::CopyFrom(const SubscribePerioListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListResponse::IsInitialized() const {

  return true;
}

void SubscribePerioListResponse::Swap(SubscribePerioListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListResponse::InternalSwap(SubscribePerioListResponse* other) {
  subscribe_perio_.UnsafeArenaSwap(&other->subscribe_perio_);
  std::swap(error_, other->error_);
  std::swap(has_more_, other->has_more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListResponse_descriptor_;
  metadata.reflection = SubscribePerioListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListResponse_SubscribePerioMessage

// optional string perio_id = 1;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}

// optional string perio_name = 2;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_name() {
  perio_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_name() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  return perio_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const ::std::string& value) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const char* value) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const char* value, size_t size) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_name() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  return perio_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_name() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  
  return perio_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_name(::std::string* perio_name) {
  if (perio_name != NULL) {
    
  } else {
    
  }
  perio_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_name);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}

// optional string perio_cover = 3;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_cover() {
  perio_cover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_cover() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  return perio_cover_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const ::std::string& value) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const char* value) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const char* value, size_t size) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_cover() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  return perio_cover_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_cover() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  
  return perio_cover_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_cover(::std::string* perio_cover) {
  if (perio_cover != NULL) {
    
  } else {
    
  }
  perio_cover_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_cover);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}

// optional string perio_society = 4;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_society() {
  perio_society_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_society() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  return perio_society_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const ::std::string& value) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const char* value) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const char* value, size_t size) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_society() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  return perio_society_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_society() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  
  return perio_society_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_society(::std::string* perio_society) {
  if (perio_society != NULL) {
    
  } else {
    
  }
  perio_society_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_society);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}

// optional string add_time = 5;
void SubscribePerioListResponse_SubscribePerioMessage::clear_add_time() {
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::add_time() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  return add_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const ::std::string& value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const char* value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const char* value, size_t size) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_add_time() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  return add_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_add_time() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  
  return add_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_add_time(::std::string* add_time) {
  if (add_time != NULL) {
    
  } else {
    
  }
  add_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), add_time);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}

// optional string subscribe_id = 6;
void SubscribePerioListResponse_SubscribePerioMessage::clear_subscribe_id() {
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::subscribe_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
  return subscribe_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_subscribe_id(const ::std::string& value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_subscribe_id(const char* value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_subscribe_id(const char* value, size_t size) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_subscribe_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
  return subscribe_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_subscribe_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
  
  return subscribe_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_subscribe_id(::std::string* subscribe_id) {
  if (subscribe_id != NULL) {
    
  } else {
    
  }
  subscribe_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscribe_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.subscribe_id)
}

inline const SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance() {
  return &SubscribePerioListResponse_SubscribePerioMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// SubscribePerioListResponse

// repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
int SubscribePerioListResponse::subscribe_perio_size() const {
  return subscribe_perio_.size();
}
void SubscribePerioListResponse::clear_subscribe_perio() {
  subscribe_perio_.Clear();
}
const ::subscribe::SubscribePerioListResponse_SubscribePerioMessage& SubscribePerioListResponse::subscribe_perio(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Get(index);
}
::subscribe::SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse::mutable_subscribe_perio(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Mutable(index);
}
::subscribe::SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse::add_subscribe_perio() {
  // @@protoc_insertion_point(field_add:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Add();
}
::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListResponse_SubscribePerioMessage >*
SubscribePerioListResponse::mutable_subscribe_perio() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.SubscribePerioListResponse.subscribe_perio)
  return &subscribe_perio_;
}
const ::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListResponse_SubscribePerioMessage >&
SubscribePerioListResponse::subscribe_perio() const {
  // @@protoc_insertion_point(field_list:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_;
}

// optional .grpcCommon.GrpcError error = 2;
bool SubscribePerioListResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubscribePerioListResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubscribePerioListResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubscribePerioListResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubscribePerioListResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubscribePerioListResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.error)
}

// optional bool has_more = 3;
void SubscribePerioListResponse::clear_has_more() {
  has_more_ = false;
}
bool SubscribePerioListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.has_more)
  return has_more_;
}
void SubscribePerioListResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.has_more)
}

inline const SubscribePerioListResponse* SubscribePerioListResponse::internal_default_instance() {
  return &SubscribePerioListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSubscribePerioTreeListRequest::kPreTitleFieldNumber;
const int AddSubscribePerioTreeListRequest::kCorePerioFieldNumber;
const int AddSubscribePerioTreeListRequest::kSourceDbFieldNumber;
const int AddSubscribePerioTreeListRequest::kHostUnitAreaFieldNumber;
const int AddSubscribePerioTreeListRequest::kPublishCycleFieldNumber;
const int AddSubscribePerioTreeListRequest::kSearchWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSubscribePerioTreeListRequest::AddSubscribePerioTreeListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.AddSubscribePerioTreeListRequest)
}

void AddSubscribePerioTreeListRequest::InitAsDefaultInstance() {
}

AddSubscribePerioTreeListRequest::AddSubscribePerioTreeListRequest(const AddSubscribePerioTreeListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.AddSubscribePerioTreeListRequest)
}

void AddSubscribePerioTreeListRequest::SharedCtor() {
  pre_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

AddSubscribePerioTreeListRequest::~AddSubscribePerioTreeListRequest() {
  // @@protoc_insertion_point(destructor:subscribe.AddSubscribePerioTreeListRequest)
  SharedDtor();
}

void AddSubscribePerioTreeListRequest::SharedDtor() {
  pre_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddSubscribePerioTreeListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddSubscribePerioTreeListRequest_descriptor_;
}

const AddSubscribePerioTreeListRequest& AddSubscribePerioTreeListRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddSubscribePerioTreeListRequest> AddSubscribePerioTreeListRequest_default_instance_;

AddSubscribePerioTreeListRequest* AddSubscribePerioTreeListRequest::New(::google::protobuf::Arena* arena) const {
  AddSubscribePerioTreeListRequest* n = new AddSubscribePerioTreeListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddSubscribePerioTreeListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.AddSubscribePerioTreeListRequest)
  pre_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  search_word_.Clear();
}

bool AddSubscribePerioTreeListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.AddSubscribePerioTreeListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string pre_title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pre_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pre_title().data(), this->pre_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.pre_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_core_perio;
        break;
      }

      // optional string core_perio = 2;
      case 2: {
        if (tag == 18) {
         parse_core_perio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_core_perio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->core_perio().data(), this->core_perio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.core_perio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_source_db;
        break;
      }

      // optional string source_db = 3;
      case 3: {
        if (tag == 26) {
         parse_source_db:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_db()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_db().data(), this->source_db().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.source_db"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_host_unit_area;
        break;
      }

      // optional string host_unit_area = 4;
      case 4: {
        if (tag == 34) {
         parse_host_unit_area:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_unit_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_unit_area().data(), this->host_unit_area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.host_unit_area"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_publish_cycle;
        break;
      }

      // optional string publish_cycle = 5;
      case 5: {
        if (tag == 42) {
         parse_publish_cycle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_cycle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_cycle().data(), this->publish_cycle().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.publish_cycle"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_search_word;
        break;
      }

      // repeated string search_word = 6;
      case 6: {
        if (tag == 50) {
         parse_search_word:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_search_word()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->search_word(this->search_word_size() - 1).data(),
            this->search_word(this->search_word_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListRequest.search_word"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_search_word;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.AddSubscribePerioTreeListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.AddSubscribePerioTreeListRequest)
  return false;
#undef DO_
}

void AddSubscribePerioTreeListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.AddSubscribePerioTreeListRequest)
  // optional string pre_title = 1;
  if (this->pre_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_title().data(), this->pre_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.pre_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->pre_title(), output);
  }

  // optional string core_perio = 2;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.core_perio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->core_perio(), output);
  }

  // optional string source_db = 3;
  if (this->source_db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_db().data(), this->source_db().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.source_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->source_db(), output);
  }

  // optional string host_unit_area = 4;
  if (this->host_unit_area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_unit_area().data(), this->host_unit_area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.host_unit_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->host_unit_area(), output);
  }

  // optional string publish_cycle = 5;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.publish_cycle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->publish_cycle(), output);
  }

  // repeated string search_word = 6;
  for (int i = 0; i < this->search_word_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_word(i).data(), this->search_word(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.search_word");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->search_word(i), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.AddSubscribePerioTreeListRequest)
}

::google::protobuf::uint8* AddSubscribePerioTreeListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.AddSubscribePerioTreeListRequest)
  // optional string pre_title = 1;
  if (this->pre_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_title().data(), this->pre_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.pre_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->pre_title(), target);
  }

  // optional string core_perio = 2;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.core_perio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->core_perio(), target);
  }

  // optional string source_db = 3;
  if (this->source_db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_db().data(), this->source_db().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.source_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->source_db(), target);
  }

  // optional string host_unit_area = 4;
  if (this->host_unit_area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_unit_area().data(), this->host_unit_area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.host_unit_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->host_unit_area(), target);
  }

  // optional string publish_cycle = 5;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.publish_cycle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->publish_cycle(), target);
  }

  // repeated string search_word = 6;
  for (int i = 0; i < this->search_word_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->search_word(i).data(), this->search_word(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListRequest.search_word");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->search_word(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.AddSubscribePerioTreeListRequest)
  return target;
}

size_t AddSubscribePerioTreeListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.AddSubscribePerioTreeListRequest)
  size_t total_size = 0;

  // optional string pre_title = 1;
  if (this->pre_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pre_title());
  }

  // optional string core_perio = 2;
  if (this->core_perio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->core_perio());
  }

  // optional string source_db = 3;
  if (this->source_db().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_db());
  }

  // optional string host_unit_area = 4;
  if (this->host_unit_area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_unit_area());
  }

  // optional string publish_cycle = 5;
  if (this->publish_cycle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_cycle());
  }

  // repeated string search_word = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->search_word_size());
  for (int i = 0; i < this->search_word_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->search_word(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddSubscribePerioTreeListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.AddSubscribePerioTreeListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddSubscribePerioTreeListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSubscribePerioTreeListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.AddSubscribePerioTreeListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.AddSubscribePerioTreeListRequest)
    UnsafeMergeFrom(*source);
  }
}

void AddSubscribePerioTreeListRequest::MergeFrom(const AddSubscribePerioTreeListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.AddSubscribePerioTreeListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddSubscribePerioTreeListRequest::UnsafeMergeFrom(const AddSubscribePerioTreeListRequest& from) {
  GOOGLE_DCHECK(&from != this);
  search_word_.UnsafeMergeFrom(from.search_word_);
  if (from.pre_title().size() > 0) {

    pre_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pre_title_);
  }
  if (from.core_perio().size() > 0) {

    core_perio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.core_perio_);
  }
  if (from.source_db().size() > 0) {

    source_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_db_);
  }
  if (from.host_unit_area().size() > 0) {

    host_unit_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_unit_area_);
  }
  if (from.publish_cycle().size() > 0) {

    publish_cycle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_cycle_);
  }
}

void AddSubscribePerioTreeListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.AddSubscribePerioTreeListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSubscribePerioTreeListRequest::CopyFrom(const AddSubscribePerioTreeListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.AddSubscribePerioTreeListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddSubscribePerioTreeListRequest::IsInitialized() const {

  return true;
}

void AddSubscribePerioTreeListRequest::Swap(AddSubscribePerioTreeListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSubscribePerioTreeListRequest::InternalSwap(AddSubscribePerioTreeListRequest* other) {
  pre_title_.Swap(&other->pre_title_);
  core_perio_.Swap(&other->core_perio_);
  source_db_.Swap(&other->source_db_);
  host_unit_area_.Swap(&other->host_unit_area_);
  publish_cycle_.Swap(&other->publish_cycle_);
  search_word_.UnsafeArenaSwap(&other->search_word_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddSubscribePerioTreeListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddSubscribePerioTreeListRequest_descriptor_;
  metadata.reflection = AddSubscribePerioTreeListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddSubscribePerioTreeListRequest

// optional string pre_title = 1;
void AddSubscribePerioTreeListRequest::clear_pre_title() {
  pre_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListRequest::pre_title() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.pre_title)
  return pre_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_pre_title(const ::std::string& value) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.pre_title)
}
void AddSubscribePerioTreeListRequest::set_pre_title(const char* value) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.pre_title)
}
void AddSubscribePerioTreeListRequest::set_pre_title(const char* value, size_t size) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.pre_title)
}
::std::string* AddSubscribePerioTreeListRequest::mutable_pre_title() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.pre_title)
  return pre_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListRequest::release_pre_title() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListRequest.pre_title)
  
  return pre_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_allocated_pre_title(::std::string* pre_title) {
  if (pre_title != NULL) {
    
  } else {
    
  }
  pre_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_title);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListRequest.pre_title)
}

// optional string core_perio = 2;
void AddSubscribePerioTreeListRequest::clear_core_perio() {
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListRequest::core_perio() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.core_perio)
  return core_perio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_core_perio(const ::std::string& value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.core_perio)
}
void AddSubscribePerioTreeListRequest::set_core_perio(const char* value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.core_perio)
}
void AddSubscribePerioTreeListRequest::set_core_perio(const char* value, size_t size) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.core_perio)
}
::std::string* AddSubscribePerioTreeListRequest::mutable_core_perio() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.core_perio)
  return core_perio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListRequest::release_core_perio() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListRequest.core_perio)
  
  return core_perio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_allocated_core_perio(::std::string* core_perio) {
  if (core_perio != NULL) {
    
  } else {
    
  }
  core_perio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), core_perio);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListRequest.core_perio)
}

// optional string source_db = 3;
void AddSubscribePerioTreeListRequest::clear_source_db() {
  source_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListRequest::source_db() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.source_db)
  return source_db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_source_db(const ::std::string& value) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.source_db)
}
void AddSubscribePerioTreeListRequest::set_source_db(const char* value) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.source_db)
}
void AddSubscribePerioTreeListRequest::set_source_db(const char* value, size_t size) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.source_db)
}
::std::string* AddSubscribePerioTreeListRequest::mutable_source_db() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.source_db)
  return source_db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListRequest::release_source_db() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListRequest.source_db)
  
  return source_db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_allocated_source_db(::std::string* source_db) {
  if (source_db != NULL) {
    
  } else {
    
  }
  source_db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_db);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListRequest.source_db)
}

// optional string host_unit_area = 4;
void AddSubscribePerioTreeListRequest::clear_host_unit_area() {
  host_unit_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListRequest::host_unit_area() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
  return host_unit_area_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_host_unit_area(const ::std::string& value) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
}
void AddSubscribePerioTreeListRequest::set_host_unit_area(const char* value) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
}
void AddSubscribePerioTreeListRequest::set_host_unit_area(const char* value, size_t size) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
}
::std::string* AddSubscribePerioTreeListRequest::mutable_host_unit_area() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
  return host_unit_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListRequest::release_host_unit_area() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
  
  return host_unit_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_allocated_host_unit_area(::std::string* host_unit_area) {
  if (host_unit_area != NULL) {
    
  } else {
    
  }
  host_unit_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_unit_area);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListRequest.host_unit_area)
}

// optional string publish_cycle = 5;
void AddSubscribePerioTreeListRequest::clear_publish_cycle() {
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListRequest::publish_cycle() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
  return publish_cycle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_publish_cycle(const ::std::string& value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
}
void AddSubscribePerioTreeListRequest::set_publish_cycle(const char* value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
}
void AddSubscribePerioTreeListRequest::set_publish_cycle(const char* value, size_t size) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
}
::std::string* AddSubscribePerioTreeListRequest::mutable_publish_cycle() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
  return publish_cycle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListRequest::release_publish_cycle() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
  
  return publish_cycle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListRequest::set_allocated_publish_cycle(::std::string* publish_cycle) {
  if (publish_cycle != NULL) {
    
  } else {
    
  }
  publish_cycle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_cycle);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListRequest.publish_cycle)
}

// repeated string search_word = 6;
int AddSubscribePerioTreeListRequest::search_word_size() const {
  return search_word_.size();
}
void AddSubscribePerioTreeListRequest::clear_search_word() {
  search_word_.Clear();
}
const ::std::string& AddSubscribePerioTreeListRequest::search_word(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListRequest.search_word)
  return search_word_.Get(index);
}
::std::string* AddSubscribePerioTreeListRequest::mutable_search_word(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListRequest.search_word)
  return search_word_.Mutable(index);
}
void AddSubscribePerioTreeListRequest::set_search_word(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListRequest.search_word)
  search_word_.Mutable(index)->assign(value);
}
void AddSubscribePerioTreeListRequest::set_search_word(int index, const char* value) {
  search_word_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListRequest.search_word)
}
void AddSubscribePerioTreeListRequest::set_search_word(int index, const char* value, size_t size) {
  search_word_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListRequest.search_word)
}
::std::string* AddSubscribePerioTreeListRequest::add_search_word() {
  // @@protoc_insertion_point(field_add_mutable:subscribe.AddSubscribePerioTreeListRequest.search_word)
  return search_word_.Add();
}
void AddSubscribePerioTreeListRequest::add_search_word(const ::std::string& value) {
  search_word_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:subscribe.AddSubscribePerioTreeListRequest.search_word)
}
void AddSubscribePerioTreeListRequest::add_search_word(const char* value) {
  search_word_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:subscribe.AddSubscribePerioTreeListRequest.search_word)
}
void AddSubscribePerioTreeListRequest::add_search_word(const char* value, size_t size) {
  search_word_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:subscribe.AddSubscribePerioTreeListRequest.search_word)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AddSubscribePerioTreeListRequest::search_word() const {
  // @@protoc_insertion_point(field_list:subscribe.AddSubscribePerioTreeListRequest.search_word)
  return search_word_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AddSubscribePerioTreeListRequest::mutable_search_word() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.AddSubscribePerioTreeListRequest.search_word)
  return &search_word_;
}

inline const AddSubscribePerioTreeListRequest* AddSubscribePerioTreeListRequest::internal_default_instance() {
  return &AddSubscribePerioTreeListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::kIdFieldNumber;
const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::kNameFieldNumber;
const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::kPidFieldNumber;
const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::kCountFieldNumber;
const int AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::InitAsDefaultInstance() {
}

AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage(const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  _cached_size_ = 0;
}

AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::~AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage() {
  // @@protoc_insertion_point(destructor:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  SharedDtor();
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_;
}

const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage> AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_default_instance_;

AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::New(::google::protobuf::Arena* arena) const {
  AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* n = new AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = 0;
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_pid;
        break;
      }

      // optional string pid = 3;
      case 3: {
        if (tag == 26) {
         parse_pid:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pid().data(), this->pid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_count;
        break;
      }

      // optional int32 count = 4;
      case 4: {
        if (tag == 32) {
         parse_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_value;
        break;
      }

      // optional string value = 5;
      case 5: {
        if (tag == 42) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  return false;
#undef DO_
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string pid = 3;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pid(), output);
  }

  // optional int32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->count(), output);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
}

::google::protobuf::uint8* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  // optional string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional string pid = 3;
  if (this->pid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pid().data(), this->pid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pid(), target);
  }

  // optional int32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->count(), target);
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  return target;
}

size_t AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  size_t total_size = 0;

  // optional string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // optional string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional string pid = 3;
  if (this->pid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pid());
  }

  // optional int32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->count());
  }

  // optional string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
    UnsafeMergeFrom(*source);
  }
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::MergeFrom(const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::UnsafeMergeFrom(const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.pid().size() > 0) {

    pid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pid_);
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::CopyFrom(const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::IsInitialized() const {

  return true;
}

void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::Swap(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::InternalSwap(AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* other) {
  id_.Swap(&other->id_);
  name_.Swap(&other->name_);
  pid_.Swap(&other->pid_);
  std::swap(count_, other->count_);
  value_.Swap(&other->value_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_descriptor_;
  metadata.reflection = AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddSubscribePerioTreeListResponse::kTreeItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddSubscribePerioTreeListResponse::AddSubscribePerioTreeListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.AddSubscribePerioTreeListResponse)
}

void AddSubscribePerioTreeListResponse::InitAsDefaultInstance() {
}

AddSubscribePerioTreeListResponse::AddSubscribePerioTreeListResponse(const AddSubscribePerioTreeListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.AddSubscribePerioTreeListResponse)
}

void AddSubscribePerioTreeListResponse::SharedCtor() {
  _cached_size_ = 0;
}

AddSubscribePerioTreeListResponse::~AddSubscribePerioTreeListResponse() {
  // @@protoc_insertion_point(destructor:subscribe.AddSubscribePerioTreeListResponse)
  SharedDtor();
}

void AddSubscribePerioTreeListResponse::SharedDtor() {
}

void AddSubscribePerioTreeListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddSubscribePerioTreeListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AddSubscribePerioTreeListResponse_descriptor_;
}

const AddSubscribePerioTreeListResponse& AddSubscribePerioTreeListResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<AddSubscribePerioTreeListResponse> AddSubscribePerioTreeListResponse_default_instance_;

AddSubscribePerioTreeListResponse* AddSubscribePerioTreeListResponse::New(::google::protobuf::Arena* arena) const {
  AddSubscribePerioTreeListResponse* n = new AddSubscribePerioTreeListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddSubscribePerioTreeListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.AddSubscribePerioTreeListResponse)
  tree_item_.Clear();
}

bool AddSubscribePerioTreeListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.AddSubscribePerioTreeListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage tree_item = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_tree_item:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_tree_item()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_tree_item;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.AddSubscribePerioTreeListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.AddSubscribePerioTreeListResponse)
  return false;
#undef DO_
}

void AddSubscribePerioTreeListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.AddSubscribePerioTreeListResponse)
  // repeated .subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage tree_item = 1;
  for (unsigned int i = 0, n = this->tree_item_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->tree_item(i), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.AddSubscribePerioTreeListResponse)
}

::google::protobuf::uint8* AddSubscribePerioTreeListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.AddSubscribePerioTreeListResponse)
  // repeated .subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage tree_item = 1;
  for (unsigned int i = 0, n = this->tree_item_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->tree_item(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.AddSubscribePerioTreeListResponse)
  return target;
}

size_t AddSubscribePerioTreeListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.AddSubscribePerioTreeListResponse)
  size_t total_size = 0;

  // repeated .subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage tree_item = 1;
  {
    unsigned int count = this->tree_item_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tree_item(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddSubscribePerioTreeListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.AddSubscribePerioTreeListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const AddSubscribePerioTreeListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddSubscribePerioTreeListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.AddSubscribePerioTreeListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.AddSubscribePerioTreeListResponse)
    UnsafeMergeFrom(*source);
  }
}

void AddSubscribePerioTreeListResponse::MergeFrom(const AddSubscribePerioTreeListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.AddSubscribePerioTreeListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void AddSubscribePerioTreeListResponse::UnsafeMergeFrom(const AddSubscribePerioTreeListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  tree_item_.MergeFrom(from.tree_item_);
}

void AddSubscribePerioTreeListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.AddSubscribePerioTreeListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddSubscribePerioTreeListResponse::CopyFrom(const AddSubscribePerioTreeListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.AddSubscribePerioTreeListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool AddSubscribePerioTreeListResponse::IsInitialized() const {

  return true;
}

void AddSubscribePerioTreeListResponse::Swap(AddSubscribePerioTreeListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddSubscribePerioTreeListResponse::InternalSwap(AddSubscribePerioTreeListResponse* other) {
  tree_item_.UnsafeArenaSwap(&other->tree_item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddSubscribePerioTreeListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AddSubscribePerioTreeListResponse_descriptor_;
  metadata.reflection = AddSubscribePerioTreeListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage

// optional string id = 1;
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::id() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
  return id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::release_id() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.id)
}

// optional string name = 2;
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::name() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::release_name() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.name)
}

// optional string pid = 3;
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::clear_pid() {
  pid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::pid() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
  return pid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_pid(const ::std::string& value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_pid(const char* value) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_pid(const char* value, size_t size) {
  
  pid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::mutable_pid() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
  return pid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::release_pid() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
  
  return pid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_allocated_pid(::std::string* pid) {
  if (pid != NULL) {
    
  } else {
    
  }
  pid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pid);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.pid)
}

// optional int32 count = 4;
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::clear_count() {
  count_ = 0;
}
::google::protobuf::int32 AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::count() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.count)
  return count_;
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.count)
}

// optional string value = 5;
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::value() const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::release_value() {
  // @@protoc_insertion_point(field_release:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage.value)
}

inline const AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage::internal_default_instance() {
  return &AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// AddSubscribePerioTreeListResponse

// repeated .subscribe.AddSubscribePerioTreeListResponse.AddSubscribeTreeItemMessage tree_item = 1;
int AddSubscribePerioTreeListResponse::tree_item_size() const {
  return tree_item_.size();
}
void AddSubscribePerioTreeListResponse::clear_tree_item() {
  tree_item_.Clear();
}
const ::subscribe::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage& AddSubscribePerioTreeListResponse::tree_item(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.AddSubscribePerioTreeListResponse.tree_item)
  return tree_item_.Get(index);
}
::subscribe::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* AddSubscribePerioTreeListResponse::mutable_tree_item(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.AddSubscribePerioTreeListResponse.tree_item)
  return tree_item_.Mutable(index);
}
::subscribe::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage* AddSubscribePerioTreeListResponse::add_tree_item() {
  // @@protoc_insertion_point(field_add:subscribe.AddSubscribePerioTreeListResponse.tree_item)
  return tree_item_.Add();
}
::google::protobuf::RepeatedPtrField< ::subscribe::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage >*
AddSubscribePerioTreeListResponse::mutable_tree_item() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.AddSubscribePerioTreeListResponse.tree_item)
  return &tree_item_;
}
const ::google::protobuf::RepeatedPtrField< ::subscribe::AddSubscribePerioTreeListResponse_AddSubscribeTreeItemMessage >&
AddSubscribePerioTreeListResponse::tree_item() const {
  // @@protoc_insertion_point(field_list:subscribe.AddSubscribePerioTreeListResponse.tree_item)
  return tree_item_;
}

inline const AddSubscribePerioTreeListResponse* AddSubscribePerioTreeListResponse::internal_default_instance() {
  return &AddSubscribePerioTreeListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListSearchRequest::kPageNumberFieldNumber;
const int SubscribePerioListSearchRequest::kPageSizeFieldNumber;
const int SubscribePerioListSearchRequest::kSelectTitleFieldNumber;
const int SubscribePerioListSearchRequest::kSelectOrderFieldNumber;
const int SubscribePerioListSearchRequest::kPreTitleFieldNumber;
const int SubscribePerioListSearchRequest::kCorePerioFieldNumber;
const int SubscribePerioListSearchRequest::kSourceDbFieldNumber;
const int SubscribePerioListSearchRequest::kHostUnitAreaFieldNumber;
const int SubscribePerioListSearchRequest::kPublishCycleFieldNumber;
const int SubscribePerioListSearchRequest::kValueFieldNumber;
const int SubscribePerioListSearchRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListSearchRequest::SubscribePerioListSearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListSearchRequest)
}

void SubscribePerioListSearchRequest::InitAsDefaultInstance() {
}

SubscribePerioListSearchRequest::SubscribePerioListSearchRequest(const SubscribePerioListSearchRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListSearchRequest)
}

void SubscribePerioListSearchRequest::SharedCtor() {
  select_order_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pre_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_number_) + sizeof(page_size_));
  _cached_size_ = 0;
}

SubscribePerioListSearchRequest::~SubscribePerioListSearchRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListSearchRequest)
  SharedDtor();
}

void SubscribePerioListSearchRequest::SharedDtor() {
  select_order_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pre_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListSearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListSearchRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListSearchRequest_descriptor_;
}

const SubscribePerioListSearchRequest& SubscribePerioListSearchRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListSearchRequest> SubscribePerioListSearchRequest_default_instance_;

SubscribePerioListSearchRequest* SubscribePerioListSearchRequest::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListSearchRequest* n = new SubscribePerioListSearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListSearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListSearchRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SubscribePerioListSearchRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SubscribePerioListSearchRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(page_number_, page_size_);
  select_order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pre_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  host_unit_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

  select_title_.Clear();
}

bool SubscribePerioListSearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListSearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 page_number = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 2;
      case 2: {
        if (tag == 16) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_select_title;
        break;
      }

      // repeated string select_title = 3;
      case 3: {
        if (tag == 26) {
         parse_select_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_select_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->select_title(this->select_title_size() - 1).data(),
            this->select_title(this->select_title_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.select_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_select_title;
        if (input->ExpectTag(34)) goto parse_select_order;
        break;
      }

      // optional string select_order = 4;
      case 4: {
        if (tag == 34) {
         parse_select_order:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_select_order()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->select_order().data(), this->select_order().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.select_order"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_pre_title;
        break;
      }

      // optional string pre_title = 6;
      case 6: {
        if (tag == 50) {
         parse_pre_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pre_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pre_title().data(), this->pre_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.pre_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_core_perio;
        break;
      }

      // optional string core_perio = 7;
      case 7: {
        if (tag == 58) {
         parse_core_perio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_core_perio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->core_perio().data(), this->core_perio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.core_perio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_source_db;
        break;
      }

      // optional string source_db = 8;
      case 8: {
        if (tag == 66) {
         parse_source_db:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_db()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_db().data(), this->source_db().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.source_db"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_host_unit_area;
        break;
      }

      // optional string host_unit_area = 9;
      case 9: {
        if (tag == 74) {
         parse_host_unit_area:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_unit_area()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->host_unit_area().data(), this->host_unit_area().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.host_unit_area"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_publish_cycle;
        break;
      }

      // optional string publish_cycle = 10;
      case 10: {
        if (tag == 82) {
         parse_publish_cycle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_cycle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_cycle().data(), this->publish_cycle().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.publish_cycle"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_value;
        break;
      }

      // optional string value = 11;
      case 11: {
        if (tag == 90) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_user_id;
        break;
      }

      // optional string user_id = 12;
      case 12: {
        if (tag == 98) {
         parse_user_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListSearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListSearchRequest)
  return false;
#undef DO_
}

void SubscribePerioListSearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListSearchRequest)
  // optional int32 page_number = 1;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->page_number(), output);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_size(), output);
  }

  // repeated string select_title = 3;
  for (int i = 0; i < this->select_title_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->select_title(i).data(), this->select_title(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.select_title");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->select_title(i), output);
  }

  // optional string select_order = 4;
  if (this->select_order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->select_order().data(), this->select_order().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.select_order");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->select_order(), output);
  }

  // optional string pre_title = 6;
  if (this->pre_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_title().data(), this->pre_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.pre_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->pre_title(), output);
  }

  // optional string core_perio = 7;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.core_perio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->core_perio(), output);
  }

  // optional string source_db = 8;
  if (this->source_db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_db().data(), this->source_db().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.source_db");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->source_db(), output);
  }

  // optional string host_unit_area = 9;
  if (this->host_unit_area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_unit_area().data(), this->host_unit_area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.host_unit_area");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->host_unit_area(), output);
  }

  // optional string publish_cycle = 10;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.publish_cycle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->publish_cycle(), output);
  }

  // optional string value = 11;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->value(), output);
  }

  // optional string user_id = 12;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListSearchRequest)
}

::google::protobuf::uint8* SubscribePerioListSearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListSearchRequest)
  // optional int32 page_number = 1;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->page_number(), target);
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_size(), target);
  }

  // repeated string select_title = 3;
  for (int i = 0; i < this->select_title_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->select_title(i).data(), this->select_title(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.select_title");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->select_title(i), target);
  }

  // optional string select_order = 4;
  if (this->select_order().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->select_order().data(), this->select_order().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.select_order");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->select_order(), target);
  }

  // optional string pre_title = 6;
  if (this->pre_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pre_title().data(), this->pre_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.pre_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->pre_title(), target);
  }

  // optional string core_perio = 7;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.core_perio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->core_perio(), target);
  }

  // optional string source_db = 8;
  if (this->source_db().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_db().data(), this->source_db().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.source_db");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->source_db(), target);
  }

  // optional string host_unit_area = 9;
  if (this->host_unit_area().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->host_unit_area().data(), this->host_unit_area().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.host_unit_area");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->host_unit_area(), target);
  }

  // optional string publish_cycle = 10;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.publish_cycle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->publish_cycle(), target);
  }

  // optional string value = 11;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->value(), target);
  }

  // optional string user_id = 12;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListSearchRequest)
  return target;
}

size_t SubscribePerioListSearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListSearchRequest)
  size_t total_size = 0;

  // optional int32 page_number = 1;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // optional int32 page_size = 2;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  // optional string select_order = 4;
  if (this->select_order().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->select_order());
  }

  // optional string pre_title = 6;
  if (this->pre_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pre_title());
  }

  // optional string core_perio = 7;
  if (this->core_perio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->core_perio());
  }

  // optional string source_db = 8;
  if (this->source_db().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source_db());
  }

  // optional string host_unit_area = 9;
  if (this->host_unit_area().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->host_unit_area());
  }

  // optional string publish_cycle = 10;
  if (this->publish_cycle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_cycle());
  }

  // optional string value = 11;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // optional string user_id = 12;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // repeated string select_title = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->select_title_size());
  for (int i = 0; i < this->select_title_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->select_title(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListSearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListSearchRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListSearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListSearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListSearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListSearchRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListSearchRequest::MergeFrom(const SubscribePerioListSearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListSearchRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListSearchRequest::UnsafeMergeFrom(const SubscribePerioListSearchRequest& from) {
  GOOGLE_DCHECK(&from != this);
  select_title_.UnsafeMergeFrom(from.select_title_);
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
  if (from.select_order().size() > 0) {

    select_order_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.select_order_);
  }
  if (from.pre_title().size() > 0) {

    pre_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pre_title_);
  }
  if (from.core_perio().size() > 0) {

    core_perio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.core_perio_);
  }
  if (from.source_db().size() > 0) {

    source_db_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_db_);
  }
  if (from.host_unit_area().size() > 0) {

    host_unit_area_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_unit_area_);
  }
  if (from.publish_cycle().size() > 0) {

    publish_cycle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_cycle_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void SubscribePerioListSearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListSearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListSearchRequest::CopyFrom(const SubscribePerioListSearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListSearchRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListSearchRequest::IsInitialized() const {

  return true;
}

void SubscribePerioListSearchRequest::Swap(SubscribePerioListSearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListSearchRequest::InternalSwap(SubscribePerioListSearchRequest* other) {
  std::swap(page_number_, other->page_number_);
  std::swap(page_size_, other->page_size_);
  select_title_.UnsafeArenaSwap(&other->select_title_);
  select_order_.Swap(&other->select_order_);
  pre_title_.Swap(&other->pre_title_);
  core_perio_.Swap(&other->core_perio_);
  source_db_.Swap(&other->source_db_);
  host_unit_area_.Swap(&other->host_unit_area_);
  publish_cycle_.Swap(&other->publish_cycle_);
  value_.Swap(&other->value_);
  user_id_.Swap(&other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListSearchRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListSearchRequest_descriptor_;
  metadata.reflection = SubscribePerioListSearchRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListSearchRequest

// optional int32 page_number = 1;
void SubscribePerioListSearchRequest::clear_page_number() {
  page_number_ = 0;
}
::google::protobuf::int32 SubscribePerioListSearchRequest::page_number() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.page_number)
  return page_number_;
}
void SubscribePerioListSearchRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.page_number)
}

// optional int32 page_size = 2;
void SubscribePerioListSearchRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 SubscribePerioListSearchRequest::page_size() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.page_size)
  return page_size_;
}
void SubscribePerioListSearchRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.page_size)
}

// repeated string select_title = 3;
int SubscribePerioListSearchRequest::select_title_size() const {
  return select_title_.size();
}
void SubscribePerioListSearchRequest::clear_select_title() {
  select_title_.Clear();
}
const ::std::string& SubscribePerioListSearchRequest::select_title(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.select_title)
  return select_title_.Get(index);
}
::std::string* SubscribePerioListSearchRequest::mutable_select_title(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.select_title)
  return select_title_.Mutable(index);
}
void SubscribePerioListSearchRequest::set_select_title(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.select_title)
  select_title_.Mutable(index)->assign(value);
}
void SubscribePerioListSearchRequest::set_select_title(int index, const char* value) {
  select_title_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.select_title)
}
void SubscribePerioListSearchRequest::set_select_title(int index, const char* value, size_t size) {
  select_title_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.select_title)
}
::std::string* SubscribePerioListSearchRequest::add_select_title() {
  // @@protoc_insertion_point(field_add_mutable:subscribe.SubscribePerioListSearchRequest.select_title)
  return select_title_.Add();
}
void SubscribePerioListSearchRequest::add_select_title(const ::std::string& value) {
  select_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:subscribe.SubscribePerioListSearchRequest.select_title)
}
void SubscribePerioListSearchRequest::add_select_title(const char* value) {
  select_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:subscribe.SubscribePerioListSearchRequest.select_title)
}
void SubscribePerioListSearchRequest::add_select_title(const char* value, size_t size) {
  select_title_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:subscribe.SubscribePerioListSearchRequest.select_title)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
SubscribePerioListSearchRequest::select_title() const {
  // @@protoc_insertion_point(field_list:subscribe.SubscribePerioListSearchRequest.select_title)
  return select_title_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
SubscribePerioListSearchRequest::mutable_select_title() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.SubscribePerioListSearchRequest.select_title)
  return &select_title_;
}

// optional string select_order = 4;
void SubscribePerioListSearchRequest::clear_select_order() {
  select_order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::select_order() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.select_order)
  return select_order_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_select_order(const ::std::string& value) {
  
  select_order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.select_order)
}
void SubscribePerioListSearchRequest::set_select_order(const char* value) {
  
  select_order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.select_order)
}
void SubscribePerioListSearchRequest::set_select_order(const char* value, size_t size) {
  
  select_order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.select_order)
}
::std::string* SubscribePerioListSearchRequest::mutable_select_order() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.select_order)
  return select_order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_select_order() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.select_order)
  
  return select_order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_select_order(::std::string* select_order) {
  if (select_order != NULL) {
    
  } else {
    
  }
  select_order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), select_order);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.select_order)
}

// optional string pre_title = 6;
void SubscribePerioListSearchRequest::clear_pre_title() {
  pre_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::pre_title() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.pre_title)
  return pre_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_pre_title(const ::std::string& value) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.pre_title)
}
void SubscribePerioListSearchRequest::set_pre_title(const char* value) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.pre_title)
}
void SubscribePerioListSearchRequest::set_pre_title(const char* value, size_t size) {
  
  pre_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.pre_title)
}
::std::string* SubscribePerioListSearchRequest::mutable_pre_title() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.pre_title)
  return pre_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_pre_title() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.pre_title)
  
  return pre_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_pre_title(::std::string* pre_title) {
  if (pre_title != NULL) {
    
  } else {
    
  }
  pre_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pre_title);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.pre_title)
}

// optional string core_perio = 7;
void SubscribePerioListSearchRequest::clear_core_perio() {
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::core_perio() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.core_perio)
  return core_perio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_core_perio(const ::std::string& value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.core_perio)
}
void SubscribePerioListSearchRequest::set_core_perio(const char* value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.core_perio)
}
void SubscribePerioListSearchRequest::set_core_perio(const char* value, size_t size) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.core_perio)
}
::std::string* SubscribePerioListSearchRequest::mutable_core_perio() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.core_perio)
  return core_perio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_core_perio() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.core_perio)
  
  return core_perio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_core_perio(::std::string* core_perio) {
  if (core_perio != NULL) {
    
  } else {
    
  }
  core_perio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), core_perio);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.core_perio)
}

// optional string source_db = 8;
void SubscribePerioListSearchRequest::clear_source_db() {
  source_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::source_db() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.source_db)
  return source_db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_source_db(const ::std::string& value) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.source_db)
}
void SubscribePerioListSearchRequest::set_source_db(const char* value) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.source_db)
}
void SubscribePerioListSearchRequest::set_source_db(const char* value, size_t size) {
  
  source_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.source_db)
}
::std::string* SubscribePerioListSearchRequest::mutable_source_db() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.source_db)
  return source_db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_source_db() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.source_db)
  
  return source_db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_source_db(::std::string* source_db) {
  if (source_db != NULL) {
    
  } else {
    
  }
  source_db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_db);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.source_db)
}

// optional string host_unit_area = 9;
void SubscribePerioListSearchRequest::clear_host_unit_area() {
  host_unit_area_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::host_unit_area() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.host_unit_area)
  return host_unit_area_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_host_unit_area(const ::std::string& value) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.host_unit_area)
}
void SubscribePerioListSearchRequest::set_host_unit_area(const char* value) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.host_unit_area)
}
void SubscribePerioListSearchRequest::set_host_unit_area(const char* value, size_t size) {
  
  host_unit_area_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.host_unit_area)
}
::std::string* SubscribePerioListSearchRequest::mutable_host_unit_area() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.host_unit_area)
  return host_unit_area_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_host_unit_area() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.host_unit_area)
  
  return host_unit_area_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_host_unit_area(::std::string* host_unit_area) {
  if (host_unit_area != NULL) {
    
  } else {
    
  }
  host_unit_area_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_unit_area);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.host_unit_area)
}

// optional string publish_cycle = 10;
void SubscribePerioListSearchRequest::clear_publish_cycle() {
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::publish_cycle() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.publish_cycle)
  return publish_cycle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_publish_cycle(const ::std::string& value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.publish_cycle)
}
void SubscribePerioListSearchRequest::set_publish_cycle(const char* value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.publish_cycle)
}
void SubscribePerioListSearchRequest::set_publish_cycle(const char* value, size_t size) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.publish_cycle)
}
::std::string* SubscribePerioListSearchRequest::mutable_publish_cycle() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.publish_cycle)
  return publish_cycle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_publish_cycle() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.publish_cycle)
  
  return publish_cycle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_publish_cycle(::std::string* publish_cycle) {
  if (publish_cycle != NULL) {
    
  } else {
    
  }
  publish_cycle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_cycle);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.publish_cycle)
}

// optional string value = 11;
void SubscribePerioListSearchRequest::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::value() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.value)
  return value_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.value)
}
void SubscribePerioListSearchRequest::set_value(const char* value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.value)
}
void SubscribePerioListSearchRequest::set_value(const char* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.value)
}
::std::string* SubscribePerioListSearchRequest::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_value() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.value)
}

// optional string user_id = 12;
void SubscribePerioListSearchRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchRequest.user_id)
}
void SubscribePerioListSearchRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchRequest.user_id)
}
void SubscribePerioListSearchRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchRequest.user_id)
}
::std::string* SubscribePerioListSearchRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchRequest.user_id)
}

inline const SubscribePerioListSearchRequest* SubscribePerioListSearchRequest::internal_default_instance() {
  return &SubscribePerioListSearchRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kPerioTitleFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kPerioIdFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kEndIssueFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kEndYearFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kCorePerioFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kPublishCycleFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kSubscribeIdFieldNumber;
const int SubscribePerioListSearchResponse_PerioListSearchMessage::kIsSubscribedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListSearchResponse_PerioListSearchMessage::SubscribePerioListSearchResponse_PerioListSearchMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::InitAsDefaultInstance() {
}

SubscribePerioListSearchResponse_PerioListSearchMessage::SubscribePerioListSearchResponse_PerioListSearchMessage(const SubscribePerioListSearchResponse_PerioListSearchMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::SharedCtor() {
  perio_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_issue_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_subscribed_ = false;
  _cached_size_ = 0;
}

SubscribePerioListSearchResponse_PerioListSearchMessage::~SubscribePerioListSearchResponse_PerioListSearchMessage() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  SharedDtor();
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::SharedDtor() {
  perio_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_issue_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListSearchResponse_PerioListSearchMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_;
}

const SubscribePerioListSearchResponse_PerioListSearchMessage& SubscribePerioListSearchResponse_PerioListSearchMessage::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListSearchResponse_PerioListSearchMessage> SubscribePerioListSearchResponse_PerioListSearchMessage_default_instance_;

SubscribePerioListSearchResponse_PerioListSearchMessage* SubscribePerioListSearchResponse_PerioListSearchMessage::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListSearchResponse_PerioListSearchMessage* n = new SubscribePerioListSearchResponse_PerioListSearchMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  perio_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_issue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_subscribed_ = false;
}

bool SubscribePerioListSearchResponse_PerioListSearchMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string perio_title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_title().data(), this->perio_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_id;
        break;
      }

      // optional string perio_id = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_end_issue;
        break;
      }

      // optional string end_issue = 3;
      case 3: {
        if (tag == 26) {
         parse_end_issue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_issue()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_issue().data(), this->end_issue().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_end_year;
        break;
      }

      // optional string end_year = 4;
      case 4: {
        if (tag == 34) {
         parse_end_year:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->end_year().data(), this->end_year().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_core_perio;
        break;
      }

      // optional string core_perio = 5;
      case 5: {
        if (tag == 42) {
         parse_core_perio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_core_perio()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->core_perio().data(), this->core_perio().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_publish_cycle;
        break;
      }

      // optional string publish_cycle = 6;
      case 6: {
        if (tag == 50) {
         parse_publish_cycle:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_cycle()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_cycle().data(), this->publish_cycle().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_subscribe_id;
        break;
      }

      // optional string subscribe_id = 7;
      case 7: {
        if (tag == 58) {
         parse_subscribe_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subscribe_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subscribe_id().data(), this->subscribe_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_is_subscribed;
        break;
      }

      // optional bool is_subscribed = 8;
      case 8: {
        if (tag == 64) {
         parse_is_subscribed:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_subscribed_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  return false;
#undef DO_
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  // optional string perio_title = 1;
  if (this->perio_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title().data(), this->perio_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->perio_title(), output);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_id(), output);
  }

  // optional string end_issue = 3;
  if (this->end_issue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_issue().data(), this->end_issue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->end_issue(), output);
  }

  // optional string end_year = 4;
  if (this->end_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_year().data(), this->end_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->end_year(), output);
  }

  // optional string core_perio = 5;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->core_perio(), output);
  }

  // optional string publish_cycle = 6;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->publish_cycle(), output);
  }

  // optional string subscribe_id = 7;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->subscribe_id(), output);
  }

  // optional bool is_subscribed = 8;
  if (this->is_subscribed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->is_subscribed(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
}

::google::protobuf::uint8* SubscribePerioListSearchResponse_PerioListSearchMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  // optional string perio_title = 1;
  if (this->perio_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title().data(), this->perio_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->perio_title(), target);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_id(), target);
  }

  // optional string end_issue = 3;
  if (this->end_issue().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_issue().data(), this->end_issue().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->end_issue(), target);
  }

  // optional string end_year = 4;
  if (this->end_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->end_year().data(), this->end_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->end_year(), target);
  }

  // optional string core_perio = 5;
  if (this->core_perio().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->core_perio().data(), this->core_perio().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->core_perio(), target);
  }

  // optional string publish_cycle = 6;
  if (this->publish_cycle().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_cycle().data(), this->publish_cycle().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->publish_cycle(), target);
  }

  // optional string subscribe_id = 7;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->subscribe_id(), target);
  }

  // optional bool is_subscribed = 8;
  if (this->is_subscribed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->is_subscribed(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  return target;
}

size_t SubscribePerioListSearchResponse_PerioListSearchMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  size_t total_size = 0;

  // optional string perio_title = 1;
  if (this->perio_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_title());
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  // optional string end_issue = 3;
  if (this->end_issue().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_issue());
  }

  // optional string end_year = 4;
  if (this->end_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->end_year());
  }

  // optional string core_perio = 5;
  if (this->core_perio().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->core_perio());
  }

  // optional string publish_cycle = 6;
  if (this->publish_cycle().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_cycle());
  }

  // optional string subscribe_id = 7;
  if (this->subscribe_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subscribe_id());
  }

  // optional bool is_subscribed = 8;
  if (this->is_subscribed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListSearchResponse_PerioListSearchMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListSearchResponse_PerioListSearchMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::MergeFrom(const SubscribePerioListSearchResponse_PerioListSearchMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::UnsafeMergeFrom(const SubscribePerioListSearchResponse_PerioListSearchMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.perio_title().size() > 0) {

    perio_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_title_);
  }
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
  if (from.end_issue().size() > 0) {

    end_issue_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_issue_);
  }
  if (from.end_year().size() > 0) {

    end_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.end_year_);
  }
  if (from.core_perio().size() > 0) {

    core_perio_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.core_perio_);
  }
  if (from.publish_cycle().size() > 0) {

    publish_cycle_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_cycle_);
  }
  if (from.subscribe_id().size() > 0) {

    subscribe_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subscribe_id_);
  }
  if (from.is_subscribed() != 0) {
    set_is_subscribed(from.is_subscribed());
  }
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::CopyFrom(const SubscribePerioListSearchResponse_PerioListSearchMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListSearchResponse_PerioListSearchMessage::IsInitialized() const {

  return true;
}

void SubscribePerioListSearchResponse_PerioListSearchMessage::Swap(SubscribePerioListSearchResponse_PerioListSearchMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::InternalSwap(SubscribePerioListSearchResponse_PerioListSearchMessage* other) {
  perio_title_.Swap(&other->perio_title_);
  perio_id_.Swap(&other->perio_id_);
  end_issue_.Swap(&other->end_issue_);
  end_year_.Swap(&other->end_year_);
  core_perio_.Swap(&other->core_perio_);
  publish_cycle_.Swap(&other->publish_cycle_);
  subscribe_id_.Swap(&other->subscribe_id_);
  std::swap(is_subscribed_, other->is_subscribed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListSearchResponse_PerioListSearchMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListSearchResponse_PerioListSearchMessage_descriptor_;
  metadata.reflection = SubscribePerioListSearchResponse_PerioListSearchMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListSearchResponse::kErrorFieldNumber;
const int SubscribePerioListSearchResponse::kHasMoreFieldNumber;
const int SubscribePerioListSearchResponse::kSearchPeriosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListSearchResponse::SubscribePerioListSearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListSearchResponse)
}

void SubscribePerioListSearchResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubscribePerioListSearchResponse::SubscribePerioListSearchResponse(const SubscribePerioListSearchResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListSearchResponse)
}

void SubscribePerioListSearchResponse::SharedCtor() {
  error_ = NULL;
  has_more_ = false;
  _cached_size_ = 0;
}

SubscribePerioListSearchResponse::~SubscribePerioListSearchResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListSearchResponse)
  SharedDtor();
}

void SubscribePerioListSearchResponse::SharedDtor() {
  if (this != &SubscribePerioListSearchResponse_default_instance_.get()) {
    delete error_;
  }
}

void SubscribePerioListSearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListSearchResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListSearchResponse_descriptor_;
}

const SubscribePerioListSearchResponse& SubscribePerioListSearchResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListSearchResponse> SubscribePerioListSearchResponse_default_instance_;

SubscribePerioListSearchResponse* SubscribePerioListSearchResponse::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListSearchResponse* n = new SubscribePerioListSearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListSearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListSearchResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  has_more_ = false;
  search_perios_.Clear();
}

bool SubscribePerioListSearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListSearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.GrpcError error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_has_more;
        break;
      }

      // optional bool has_more = 2;
      case 2: {
        if (tag == 16) {
         parse_has_more:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_search_perios;
        break;
      }

      // repeated .subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage search_perios = 3;
      case 3: {
        if (tag == 26) {
         parse_search_perios:
          DO_(input->IncrementRecursionDepth());
         parse_loop_search_perios:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_search_perios()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_search_perios;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListSearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListSearchResponse)
  return false;
#undef DO_
}

void SubscribePerioListSearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListSearchResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_more(), output);
  }

  // repeated .subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage search_perios = 3;
  for (unsigned int i = 0, n = this->search_perios_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->search_perios(i), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListSearchResponse)
}

::google::protobuf::uint8* SubscribePerioListSearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListSearchResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_more(), target);
  }

  // repeated .subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage search_perios = 3;
  for (unsigned int i = 0, n = this->search_perios_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->search_perios(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListSearchResponse)
  return target;
}

size_t SubscribePerioListSearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListSearchResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  // repeated .subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage search_perios = 3;
  {
    unsigned int count = this->search_perios_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->search_perios(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListSearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListSearchResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListSearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListSearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListSearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListSearchResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListSearchResponse::MergeFrom(const SubscribePerioListSearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListSearchResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListSearchResponse::UnsafeMergeFrom(const SubscribePerioListSearchResponse& from) {
  GOOGLE_DCHECK(&from != this);
  search_perios_.MergeFrom(from.search_perios_);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
}

void SubscribePerioListSearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListSearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListSearchResponse::CopyFrom(const SubscribePerioListSearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListSearchResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListSearchResponse::IsInitialized() const {

  return true;
}

void SubscribePerioListSearchResponse::Swap(SubscribePerioListSearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListSearchResponse::InternalSwap(SubscribePerioListSearchResponse* other) {
  std::swap(error_, other->error_);
  std::swap(has_more_, other->has_more_);
  search_perios_.UnsafeArenaSwap(&other->search_perios_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListSearchResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListSearchResponse_descriptor_;
  metadata.reflection = SubscribePerioListSearchResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListSearchResponse_PerioListSearchMessage

// optional string perio_title = 1;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_perio_title() {
  perio_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::perio_title() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
  return perio_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_title(const ::std::string& value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_title(const char* value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_title(const char* value, size_t size) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_perio_title() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
  return perio_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_perio_title() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
  
  return perio_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_perio_title(::std::string* perio_title) {
  if (perio_title != NULL) {
    
  } else {
    
  }
  perio_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_title);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_title)
}

// optional string perio_id = 2;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.perio_id)
}

// optional string end_issue = 3;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_end_issue() {
  end_issue_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::end_issue() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
  return end_issue_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_issue(const ::std::string& value) {
  
  end_issue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_issue(const char* value) {
  
  end_issue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_issue(const char* value, size_t size) {
  
  end_issue_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_end_issue() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
  return end_issue_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_end_issue() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
  
  return end_issue_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_end_issue(::std::string* end_issue) {
  if (end_issue != NULL) {
    
  } else {
    
  }
  end_issue_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_issue);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_issue)
}

// optional string end_year = 4;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_end_year() {
  end_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::end_year() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
  return end_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_year(const ::std::string& value) {
  
  end_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_year(const char* value) {
  
  end_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_end_year(const char* value, size_t size) {
  
  end_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_end_year() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
  return end_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_end_year() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
  
  return end_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_end_year(::std::string* end_year) {
  if (end_year != NULL) {
    
  } else {
    
  }
  end_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_year);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.end_year)
}

// optional string core_perio = 5;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_core_perio() {
  core_perio_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::core_perio() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
  return core_perio_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_core_perio(const ::std::string& value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_core_perio(const char* value) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_core_perio(const char* value, size_t size) {
  
  core_perio_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_core_perio() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
  return core_perio_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_core_perio() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
  
  return core_perio_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_core_perio(::std::string* core_perio) {
  if (core_perio != NULL) {
    
  } else {
    
  }
  core_perio_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), core_perio);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.core_perio)
}

// optional string publish_cycle = 6;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_publish_cycle() {
  publish_cycle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::publish_cycle() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
  return publish_cycle_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_publish_cycle(const ::std::string& value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_publish_cycle(const char* value) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_publish_cycle(const char* value, size_t size) {
  
  publish_cycle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_publish_cycle() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
  return publish_cycle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_publish_cycle() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
  
  return publish_cycle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_publish_cycle(::std::string* publish_cycle) {
  if (publish_cycle != NULL) {
    
  } else {
    
  }
  publish_cycle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_cycle);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.publish_cycle)
}

// optional string subscribe_id = 7;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_subscribe_id() {
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListSearchResponse_PerioListSearchMessage::subscribe_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
  return subscribe_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_subscribe_id(const ::std::string& value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_subscribe_id(const char* value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_subscribe_id(const char* value, size_t size) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::mutable_subscribe_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
  return subscribe_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListSearchResponse_PerioListSearchMessage::release_subscribe_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
  
  return subscribe_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_allocated_subscribe_id(::std::string* subscribe_id) {
  if (subscribe_id != NULL) {
    
  } else {
    
  }
  subscribe_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscribe_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.subscribe_id)
}

// optional bool is_subscribed = 8;
void SubscribePerioListSearchResponse_PerioListSearchMessage::clear_is_subscribed() {
  is_subscribed_ = false;
}
bool SubscribePerioListSearchResponse_PerioListSearchMessage::is_subscribed() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.is_subscribed)
  return is_subscribed_;
}
void SubscribePerioListSearchResponse_PerioListSearchMessage::set_is_subscribed(bool value) {
  
  is_subscribed_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage.is_subscribed)
}

inline const SubscribePerioListSearchResponse_PerioListSearchMessage* SubscribePerioListSearchResponse_PerioListSearchMessage::internal_default_instance() {
  return &SubscribePerioListSearchResponse_PerioListSearchMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// SubscribePerioListSearchResponse

// optional .grpcCommon.GrpcError error = 1;
bool SubscribePerioListSearchResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubscribePerioListSearchResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubscribePerioListSearchResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubscribePerioListSearchResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubscribePerioListSearchResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListSearchResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubscribePerioListSearchResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListSearchResponse.error)
}

// optional bool has_more = 2;
void SubscribePerioListSearchResponse::clear_has_more() {
  has_more_ = false;
}
bool SubscribePerioListSearchResponse::has_more() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.has_more)
  return has_more_;
}
void SubscribePerioListSearchResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListSearchResponse.has_more)
}

// repeated .subscribe.SubscribePerioListSearchResponse.PerioListSearchMessage search_perios = 3;
int SubscribePerioListSearchResponse::search_perios_size() const {
  return search_perios_.size();
}
void SubscribePerioListSearchResponse::clear_search_perios() {
  search_perios_.Clear();
}
const ::subscribe::SubscribePerioListSearchResponse_PerioListSearchMessage& SubscribePerioListSearchResponse::search_perios(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListSearchResponse.search_perios)
  return search_perios_.Get(index);
}
::subscribe::SubscribePerioListSearchResponse_PerioListSearchMessage* SubscribePerioListSearchResponse::mutable_search_perios(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListSearchResponse.search_perios)
  return search_perios_.Mutable(index);
}
::subscribe::SubscribePerioListSearchResponse_PerioListSearchMessage* SubscribePerioListSearchResponse::add_search_perios() {
  // @@protoc_insertion_point(field_add:subscribe.SubscribePerioListSearchResponse.search_perios)
  return search_perios_.Add();
}
::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListSearchResponse_PerioListSearchMessage >*
SubscribePerioListSearchResponse::mutable_search_perios() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.SubscribePerioListSearchResponse.search_perios)
  return &search_perios_;
}
const ::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListSearchResponse_PerioListSearchMessage >&
SubscribePerioListSearchResponse::search_perios() const {
  // @@protoc_insertion_point(field_list:subscribe.SubscribePerioListSearchResponse.search_perios)
  return search_perios_;
}

inline const SubscribePerioListSearchResponse* SubscribePerioListSearchResponse::internal_default_instance() {
  return &SubscribePerioListSearchResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace subscribe

// @@protoc_insertion_point(global_scope)
