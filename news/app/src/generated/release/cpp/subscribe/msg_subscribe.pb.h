// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscribe/msg_subscribe.proto

#ifndef PROTOBUF_subscribe_2fmsg_5fsubscribe_2eproto__INCLUDED
#define PROTOBUF_subscribe_2fmsg_5fsubscribe_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace subscribe {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto();
void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto();
void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto();

class CancelSubscribeRequest;
class CancelSubscribeResponse;
class UpdateSubscribePushEmailRequest;
class UpdateSubscribePushEmailResponse;

enum CancelSubscribeType {
  DeleteKeyWord = 0,
  DeletePerio = 1,
  CancelSubscribeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  CancelSubscribeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool CancelSubscribeType_IsValid(int value);
const CancelSubscribeType CancelSubscribeType_MIN = DeleteKeyWord;
const CancelSubscribeType CancelSubscribeType_MAX = DeletePerio;
const int CancelSubscribeType_ARRAYSIZE = CancelSubscribeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* CancelSubscribeType_descriptor();
inline const ::std::string& CancelSubscribeType_Name(CancelSubscribeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    CancelSubscribeType_descriptor(), value);
}
inline bool CancelSubscribeType_Parse(
    const ::std::string& name, CancelSubscribeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CancelSubscribeType>(
    CancelSubscribeType_descriptor(), name, value);
}
// ===================================================================

class CancelSubscribeRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:subscribe.CancelSubscribeRequest) */ {
 public:
  CancelSubscribeRequest();
  virtual ~CancelSubscribeRequest();

  CancelSubscribeRequest(const CancelSubscribeRequest& from);

  inline CancelSubscribeRequest& operator=(const CancelSubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelSubscribeRequest& default_instance();

  static const CancelSubscribeRequest* internal_default_instance();

  void Swap(CancelSubscribeRequest* other);

  // implements Message ----------------------------------------------

  inline CancelSubscribeRequest* New() const { return New(NULL); }

  CancelSubscribeRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelSubscribeRequest& from);
  void MergeFrom(const CancelSubscribeRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CancelSubscribeRequest* other);
  void UnsafeMergeFrom(const CancelSubscribeRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string subscribe_id = 1;
  void clear_subscribe_id();
  static const int kSubscribeIdFieldNumber = 1;
  const ::std::string& subscribe_id() const;
  void set_subscribe_id(const ::std::string& value);
  void set_subscribe_id(const char* value);
  void set_subscribe_id(const char* value, size_t size);
  ::std::string* mutable_subscribe_id();
  ::std::string* release_subscribe_id();
  void set_allocated_subscribe_id(::std::string* subscribe_id);

  // optional .subscribe.CancelSubscribeType cancel_type = 2;
  void clear_cancel_type();
  static const int kCancelTypeFieldNumber = 2;
  ::subscribe::CancelSubscribeType cancel_type() const;
  void set_cancel_type(::subscribe::CancelSubscribeType value);

  // @@protoc_insertion_point(class_scope:subscribe.CancelSubscribeRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr subscribe_id_;
  int cancel_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  friend void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CancelSubscribeRequest> CancelSubscribeRequest_default_instance_;

// -------------------------------------------------------------------

class CancelSubscribeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:subscribe.CancelSubscribeResponse) */ {
 public:
  CancelSubscribeResponse();
  virtual ~CancelSubscribeResponse();

  CancelSubscribeResponse(const CancelSubscribeResponse& from);

  inline CancelSubscribeResponse& operator=(const CancelSubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelSubscribeResponse& default_instance();

  static const CancelSubscribeResponse* internal_default_instance();

  void Swap(CancelSubscribeResponse* other);

  // implements Message ----------------------------------------------

  inline CancelSubscribeResponse* New() const { return New(NULL); }

  CancelSubscribeResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CancelSubscribeResponse& from);
  void MergeFrom(const CancelSubscribeResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CancelSubscribeResponse* other);
  void UnsafeMergeFrom(const CancelSubscribeResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool cancel_subscribe_success = 1;
  void clear_cancel_subscribe_success();
  static const int kCancelSubscribeSuccessFieldNumber = 1;
  bool cancel_subscribe_success() const;
  void set_cancel_subscribe_success(bool value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:subscribe.CancelSubscribeResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  bool cancel_subscribe_success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  friend void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CancelSubscribeResponse> CancelSubscribeResponse_default_instance_;

// -------------------------------------------------------------------

class UpdateSubscribePushEmailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:subscribe.UpdateSubscribePushEmailRequest) */ {
 public:
  UpdateSubscribePushEmailRequest();
  virtual ~UpdateSubscribePushEmailRequest();

  UpdateSubscribePushEmailRequest(const UpdateSubscribePushEmailRequest& from);

  inline UpdateSubscribePushEmailRequest& operator=(const UpdateSubscribePushEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSubscribePushEmailRequest& default_instance();

  static const UpdateSubscribePushEmailRequest* internal_default_instance();

  void Swap(UpdateSubscribePushEmailRequest* other);

  // implements Message ----------------------------------------------

  inline UpdateSubscribePushEmailRequest* New() const { return New(NULL); }

  UpdateSubscribePushEmailRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSubscribePushEmailRequest& from);
  void MergeFrom(const UpdateSubscribePushEmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateSubscribePushEmailRequest* other);
  void UnsafeMergeFrom(const UpdateSubscribePushEmailRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string email = 2;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional bool should_update_email = 3;
  void clear_should_update_email();
  static const int kShouldUpdateEmailFieldNumber = 3;
  bool should_update_email() const;
  void set_should_update_email(bool value);

  // @@protoc_insertion_point(class_scope:subscribe.UpdateSubscribePushEmailRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  bool should_update_email_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  friend void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateSubscribePushEmailRequest> UpdateSubscribePushEmailRequest_default_instance_;

// -------------------------------------------------------------------

class UpdateSubscribePushEmailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:subscribe.UpdateSubscribePushEmailResponse) */ {
 public:
  UpdateSubscribePushEmailResponse();
  virtual ~UpdateSubscribePushEmailResponse();

  UpdateSubscribePushEmailResponse(const UpdateSubscribePushEmailResponse& from);

  inline UpdateSubscribePushEmailResponse& operator=(const UpdateSubscribePushEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSubscribePushEmailResponse& default_instance();

  static const UpdateSubscribePushEmailResponse* internal_default_instance();

  void Swap(UpdateSubscribePushEmailResponse* other);

  // implements Message ----------------------------------------------

  inline UpdateSubscribePushEmailResponse* New() const { return New(NULL); }

  UpdateSubscribePushEmailResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UpdateSubscribePushEmailResponse& from);
  void MergeFrom(const UpdateSubscribePushEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UpdateSubscribePushEmailResponse* other);
  void UnsafeMergeFrom(const UpdateSubscribePushEmailResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool update_success = 1;
  void clear_update_success();
  static const int kUpdateSuccessFieldNumber = 1;
  bool update_success() const;
  void set_update_success(bool value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:subscribe.UpdateSubscribePushEmailResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  bool update_success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl();
  friend void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  friend void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UpdateSubscribePushEmailResponse> UpdateSubscribePushEmailResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSubscribeRequest

// optional string subscribe_id = 1;
inline void CancelSubscribeRequest::clear_subscribe_id() {
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelSubscribeRequest::subscribe_id() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeRequest.subscribe_id)
  return subscribe_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelSubscribeRequest::set_subscribe_id(const ::std::string& value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeRequest.subscribe_id)
}
inline void CancelSubscribeRequest::set_subscribe_id(const char* value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.CancelSubscribeRequest.subscribe_id)
}
inline void CancelSubscribeRequest::set_subscribe_id(const char* value, size_t size) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.CancelSubscribeRequest.subscribe_id)
}
inline ::std::string* CancelSubscribeRequest::mutable_subscribe_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.CancelSubscribeRequest.subscribe_id)
  return subscribe_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelSubscribeRequest::release_subscribe_id() {
  // @@protoc_insertion_point(field_release:subscribe.CancelSubscribeRequest.subscribe_id)
  
  return subscribe_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelSubscribeRequest::set_allocated_subscribe_id(::std::string* subscribe_id) {
  if (subscribe_id != NULL) {
    
  } else {
    
  }
  subscribe_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscribe_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.CancelSubscribeRequest.subscribe_id)
}

// optional .subscribe.CancelSubscribeType cancel_type = 2;
inline void CancelSubscribeRequest::clear_cancel_type() {
  cancel_type_ = 0;
}
inline ::subscribe::CancelSubscribeType CancelSubscribeRequest::cancel_type() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeRequest.cancel_type)
  return static_cast< ::subscribe::CancelSubscribeType >(cancel_type_);
}
inline void CancelSubscribeRequest::set_cancel_type(::subscribe::CancelSubscribeType value) {
  
  cancel_type_ = value;
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeRequest.cancel_type)
}

inline const CancelSubscribeRequest* CancelSubscribeRequest::internal_default_instance() {
  return &CancelSubscribeRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CancelSubscribeResponse

// optional bool cancel_subscribe_success = 1;
inline void CancelSubscribeResponse::clear_cancel_subscribe_success() {
  cancel_subscribe_success_ = false;
}
inline bool CancelSubscribeResponse::cancel_subscribe_success() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeResponse.cancel_subscribe_success)
  return cancel_subscribe_success_;
}
inline void CancelSubscribeResponse::set_cancel_subscribe_success(bool value) {
  
  cancel_subscribe_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeResponse.cancel_subscribe_success)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool CancelSubscribeResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void CancelSubscribeResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& CancelSubscribeResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* CancelSubscribeResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.CancelSubscribeResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* CancelSubscribeResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.CancelSubscribeResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CancelSubscribeResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.CancelSubscribeResponse.error)
}

inline const CancelSubscribeResponse* CancelSubscribeResponse::internal_default_instance() {
  return &CancelSubscribeResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateSubscribePushEmailRequest

// optional string user_id = 1;
inline void UpdateSubscribePushEmailRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateSubscribePushEmailRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSubscribePushEmailRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
inline void UpdateSubscribePushEmailRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
inline void UpdateSubscribePushEmailRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
inline ::std::string* UpdateSubscribePushEmailRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateSubscribePushEmailRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSubscribePushEmailRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailRequest.user_id)
}

// optional string email = 2;
inline void UpdateSubscribePushEmailRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpdateSubscribePushEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSubscribePushEmailRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.email)
}
inline void UpdateSubscribePushEmailRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.UpdateSubscribePushEmailRequest.email)
}
inline void UpdateSubscribePushEmailRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.UpdateSubscribePushEmailRequest.email)
}
inline ::std::string* UpdateSubscribePushEmailRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpdateSubscribePushEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpdateSubscribePushEmailRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailRequest.email)
}

// optional bool should_update_email = 3;
inline void UpdateSubscribePushEmailRequest::clear_should_update_email() {
  should_update_email_ = false;
}
inline bool UpdateSubscribePushEmailRequest::should_update_email() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.should_update_email)
  return should_update_email_;
}
inline void UpdateSubscribePushEmailRequest::set_should_update_email(bool value) {
  
  should_update_email_ = value;
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.should_update_email)
}

inline const UpdateSubscribePushEmailRequest* UpdateSubscribePushEmailRequest::internal_default_instance() {
  return &UpdateSubscribePushEmailRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UpdateSubscribePushEmailResponse

// optional bool update_success = 1;
inline void UpdateSubscribePushEmailResponse::clear_update_success() {
  update_success_ = false;
}
inline bool UpdateSubscribePushEmailResponse::update_success() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailResponse.update_success)
  return update_success_;
}
inline void UpdateSubscribePushEmailResponse::set_update_success(bool value) {
  
  update_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailResponse.update_success)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool UpdateSubscribePushEmailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void UpdateSubscribePushEmailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& UpdateSubscribePushEmailResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* UpdateSubscribePushEmailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* UpdateSubscribePushEmailResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void UpdateSubscribePushEmailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailResponse.error)
}

inline const UpdateSubscribePushEmailResponse* UpdateSubscribePushEmailResponse::internal_default_instance() {
  return &UpdateSubscribePushEmailResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace subscribe

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::subscribe::CancelSubscribeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::subscribe::CancelSubscribeType>() {
  return ::subscribe::CancelSubscribeType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_subscribe_2fmsg_5fsubscribe_2eproto__INCLUDED
