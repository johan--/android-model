// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mainPage/meeting_message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "mainPage/meeting_message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace main {

namespace {

const ::google::protobuf::Descriptor* MeetingRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MeetingRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MeetingReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MeetingReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* Meeting_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Meeting_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_mainPage_2fmeeting_5fmessage_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_mainPage_2fmeeting_5fmessage_2eproto() {
  protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "mainPage/meeting_message.proto");
  GOOGLE_CHECK(file != NULL);
  MeetingRequest_descriptor_ = file->message_type(0);
  static const int MeetingRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetingRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetingRequest, page_size_),
  };
  MeetingRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MeetingRequest_descriptor_,
      MeetingRequest::internal_default_instance(),
      MeetingRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MeetingRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetingRequest, _internal_metadata_));
  MeetingReply_descriptor_ = file->message_type(1);
  static const int MeetingReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetingReply, meeting_),
  };
  MeetingReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MeetingReply_descriptor_,
      MeetingReply::internal_default_instance(),
      MeetingReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(MeetingReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MeetingReply, _internal_metadata_));
  Meeting_descriptor_ = file->message_type(2);
  static const int Meeting_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meeting, meeting_link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meeting, meeting_title_),
  };
  Meeting_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Meeting_descriptor_,
      Meeting::internal_default_instance(),
      Meeting_offsets_,
      -1,
      -1,
      -1,
      sizeof(Meeting),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meeting, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_mainPage_2fmeeting_5fmessage_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MeetingRequest_descriptor_, MeetingRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MeetingReply_descriptor_, MeetingReply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Meeting_descriptor_, Meeting::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_mainPage_2fmeeting_5fmessage_2eproto() {
  MeetingRequest_default_instance_.Shutdown();
  delete MeetingRequest_reflection_;
  MeetingReply_default_instance_.Shutdown();
  delete MeetingReply_reflection_;
  Meeting_default_instance_.Shutdown();
  delete Meeting_reflection_;
}

void protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  MeetingRequest_default_instance_.DefaultConstruct();
  MeetingReply_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Meeting_default_instance_.DefaultConstruct();
  MeetingRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MeetingReply_default_instance_.get_mutable()->InitAsDefaultInstance();
  Meeting_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto_once_);
void protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto_once_,
                 &protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto_impl);
}
void protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036mainPage/meeting_message.proto\022\004main\"8"
    "\n\016MeetingRequest\022\023\n\013page_number\030\001 \001(\t\022\021\n"
    "\tpage_size\030\002 \001(\t\".\n\014MeetingReply\022\036\n\007meet"
    "ing\030\001 \003(\0132\r.main.Meeting\"6\n\007Meeting\022\024\n\014m"
    "eeting_link\030\001 \001(\t\022\025\n\rmeeting_title\030\002 \001(\t"
    "B\022\n\020com.wanfang.mainb\006proto3", 228);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mainPage/meeting_message.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_mainPage_2fmeeting_5fmessage_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto_once_);
void protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto_once_,
                 &protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_mainPage_2fmeeting_5fmessage_2eproto {
  StaticDescriptorInitializer_mainPage_2fmeeting_5fmessage_2eproto() {
    protobuf_AddDesc_mainPage_2fmeeting_5fmessage_2eproto();
  }
} static_descriptor_initializer_mainPage_2fmeeting_5fmessage_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeetingRequest::kPageNumberFieldNumber;
const int MeetingRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeetingRequest::MeetingRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.MeetingRequest)
}

void MeetingRequest::InitAsDefaultInstance() {
}

MeetingRequest::MeetingRequest(const MeetingRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.MeetingRequest)
}

void MeetingRequest::SharedCtor() {
  page_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MeetingRequest::~MeetingRequest() {
  // @@protoc_insertion_point(destructor:main.MeetingRequest)
  SharedDtor();
}

void MeetingRequest::SharedDtor() {
  page_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MeetingRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeetingRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MeetingRequest_descriptor_;
}

const MeetingRequest& MeetingRequest::default_instance() {
  protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MeetingRequest> MeetingRequest_default_instance_;

MeetingRequest* MeetingRequest::New(::google::protobuf::Arena* arena) const {
  MeetingRequest* n = new MeetingRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeetingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:main.MeetingRequest)
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MeetingRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.MeetingRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string page_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_number().data(), this->page_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.MeetingRequest.page_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_page_size;
        break;
      }

      // optional string page_size = 2;
      case 2: {
        if (tag == 18) {
         parse_page_size:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_size().data(), this->page_size().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.MeetingRequest.page_size"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.MeetingRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.MeetingRequest)
  return false;
#undef DO_
}

void MeetingRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.MeetingRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.MeetingRequest.page_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->page_number(), output);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.MeetingRequest.page_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.MeetingRequest)
}

::google::protobuf::uint8* MeetingRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.MeetingRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.MeetingRequest.page_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->page_number(), target);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.MeetingRequest.page_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.MeetingRequest)
  return target;
}

size_t MeetingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.MeetingRequest)
  size_t total_size = 0;

  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_number());
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeetingRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.MeetingRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MeetingRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeetingRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.MeetingRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.MeetingRequest)
    UnsafeMergeFrom(*source);
  }
}

void MeetingRequest::MergeFrom(const MeetingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.MeetingRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MeetingRequest::UnsafeMergeFrom(const MeetingRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.page_number().size() > 0) {

    page_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_number_);
  }
  if (from.page_size().size() > 0) {

    page_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_size_);
  }
}

void MeetingRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.MeetingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeetingRequest::CopyFrom(const MeetingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.MeetingRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MeetingRequest::IsInitialized() const {

  return true;
}

void MeetingRequest::Swap(MeetingRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeetingRequest::InternalSwap(MeetingRequest* other) {
  page_number_.Swap(&other->page_number_);
  page_size_.Swap(&other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeetingRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MeetingRequest_descriptor_;
  metadata.reflection = MeetingRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeetingRequest

// optional string page_number = 1;
void MeetingRequest::clear_page_number() {
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MeetingRequest::page_number() const {
  // @@protoc_insertion_point(field_get:main.MeetingRequest.page_number)
  return page_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeetingRequest::set_page_number(const ::std::string& value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.MeetingRequest.page_number)
}
void MeetingRequest::set_page_number(const char* value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.MeetingRequest.page_number)
}
void MeetingRequest::set_page_number(const char* value, size_t size) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.MeetingRequest.page_number)
}
::std::string* MeetingRequest::mutable_page_number() {
  
  // @@protoc_insertion_point(field_mutable:main.MeetingRequest.page_number)
  return page_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeetingRequest::release_page_number() {
  // @@protoc_insertion_point(field_release:main.MeetingRequest.page_number)
  
  return page_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeetingRequest::set_allocated_page_number(::std::string* page_number) {
  if (page_number != NULL) {
    
  } else {
    
  }
  page_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_number);
  // @@protoc_insertion_point(field_set_allocated:main.MeetingRequest.page_number)
}

// optional string page_size = 2;
void MeetingRequest::clear_page_size() {
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MeetingRequest::page_size() const {
  // @@protoc_insertion_point(field_get:main.MeetingRequest.page_size)
  return page_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeetingRequest::set_page_size(const ::std::string& value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.MeetingRequest.page_size)
}
void MeetingRequest::set_page_size(const char* value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.MeetingRequest.page_size)
}
void MeetingRequest::set_page_size(const char* value, size_t size) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.MeetingRequest.page_size)
}
::std::string* MeetingRequest::mutable_page_size() {
  
  // @@protoc_insertion_point(field_mutable:main.MeetingRequest.page_size)
  return page_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MeetingRequest::release_page_size() {
  // @@protoc_insertion_point(field_release:main.MeetingRequest.page_size)
  
  return page_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MeetingRequest::set_allocated_page_size(::std::string* page_size) {
  if (page_size != NULL) {
    
  } else {
    
  }
  page_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_size);
  // @@protoc_insertion_point(field_set_allocated:main.MeetingRequest.page_size)
}

inline const MeetingRequest* MeetingRequest::internal_default_instance() {
  return &MeetingRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MeetingReply::kMeetingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MeetingReply::MeetingReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.MeetingReply)
}

void MeetingReply::InitAsDefaultInstance() {
}

MeetingReply::MeetingReply(const MeetingReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.MeetingReply)
}

void MeetingReply::SharedCtor() {
  _cached_size_ = 0;
}

MeetingReply::~MeetingReply() {
  // @@protoc_insertion_point(destructor:main.MeetingReply)
  SharedDtor();
}

void MeetingReply::SharedDtor() {
}

void MeetingReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MeetingReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MeetingReply_descriptor_;
}

const MeetingReply& MeetingReply::default_instance() {
  protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MeetingReply> MeetingReply_default_instance_;

MeetingReply* MeetingReply::New(::google::protobuf::Arena* arena) const {
  MeetingReply* n = new MeetingReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MeetingReply::Clear() {
// @@protoc_insertion_point(message_clear_start:main.MeetingReply)
  meeting_.Clear();
}

bool MeetingReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.MeetingReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .main.Meeting meeting = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_meeting:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_meeting()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_meeting;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.MeetingReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.MeetingReply)
  return false;
#undef DO_
}

void MeetingReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.MeetingReply)
  // repeated .main.Meeting meeting = 1;
  for (unsigned int i = 0, n = this->meeting_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->meeting(i), output);
  }

  // @@protoc_insertion_point(serialize_end:main.MeetingReply)
}

::google::protobuf::uint8* MeetingReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.MeetingReply)
  // repeated .main.Meeting meeting = 1;
  for (unsigned int i = 0, n = this->meeting_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->meeting(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.MeetingReply)
  return target;
}

size_t MeetingReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.MeetingReply)
  size_t total_size = 0;

  // repeated .main.Meeting meeting = 1;
  {
    unsigned int count = this->meeting_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->meeting(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MeetingReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.MeetingReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MeetingReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MeetingReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.MeetingReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.MeetingReply)
    UnsafeMergeFrom(*source);
  }
}

void MeetingReply::MergeFrom(const MeetingReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.MeetingReply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MeetingReply::UnsafeMergeFrom(const MeetingReply& from) {
  GOOGLE_DCHECK(&from != this);
  meeting_.MergeFrom(from.meeting_);
}

void MeetingReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.MeetingReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MeetingReply::CopyFrom(const MeetingReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.MeetingReply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MeetingReply::IsInitialized() const {

  return true;
}

void MeetingReply::Swap(MeetingReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MeetingReply::InternalSwap(MeetingReply* other) {
  meeting_.UnsafeArenaSwap(&other->meeting_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MeetingReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MeetingReply_descriptor_;
  metadata.reflection = MeetingReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MeetingReply

// repeated .main.Meeting meeting = 1;
int MeetingReply::meeting_size() const {
  return meeting_.size();
}
void MeetingReply::clear_meeting() {
  meeting_.Clear();
}
const ::main::Meeting& MeetingReply::meeting(int index) const {
  // @@protoc_insertion_point(field_get:main.MeetingReply.meeting)
  return meeting_.Get(index);
}
::main::Meeting* MeetingReply::mutable_meeting(int index) {
  // @@protoc_insertion_point(field_mutable:main.MeetingReply.meeting)
  return meeting_.Mutable(index);
}
::main::Meeting* MeetingReply::add_meeting() {
  // @@protoc_insertion_point(field_add:main.MeetingReply.meeting)
  return meeting_.Add();
}
::google::protobuf::RepeatedPtrField< ::main::Meeting >*
MeetingReply::mutable_meeting() {
  // @@protoc_insertion_point(field_mutable_list:main.MeetingReply.meeting)
  return &meeting_;
}
const ::google::protobuf::RepeatedPtrField< ::main::Meeting >&
MeetingReply::meeting() const {
  // @@protoc_insertion_point(field_list:main.MeetingReply.meeting)
  return meeting_;
}

inline const MeetingReply* MeetingReply::internal_default_instance() {
  return &MeetingReply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meeting::kMeetingLinkFieldNumber;
const int Meeting::kMeetingTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meeting::Meeting()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.Meeting)
}

void Meeting::InitAsDefaultInstance() {
}

Meeting::Meeting(const Meeting& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.Meeting)
}

void Meeting::SharedCtor() {
  meeting_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meeting_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Meeting::~Meeting() {
  // @@protoc_insertion_point(destructor:main.Meeting)
  SharedDtor();
}

void Meeting::SharedDtor() {
  meeting_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meeting_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Meeting::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Meeting::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Meeting_descriptor_;
}

const Meeting& Meeting::default_instance() {
  protobuf_InitDefaults_mainPage_2fmeeting_5fmessage_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Meeting> Meeting_default_instance_;

Meeting* Meeting::New(::google::protobuf::Arena* arena) const {
  Meeting* n = new Meeting;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Meeting::Clear() {
// @@protoc_insertion_point(message_clear_start:main.Meeting)
  meeting_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  meeting_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Meeting::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.Meeting)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string meeting_link = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meeting_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->meeting_link().data(), this->meeting_link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.Meeting.meeting_link"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_meeting_title;
        break;
      }

      // optional string meeting_title = 2;
      case 2: {
        if (tag == 18) {
         parse_meeting_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_meeting_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->meeting_title().data(), this->meeting_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.Meeting.meeting_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.Meeting)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.Meeting)
  return false;
#undef DO_
}

void Meeting::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.Meeting)
  // optional string meeting_link = 1;
  if (this->meeting_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meeting_link().data(), this->meeting_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Meeting.meeting_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->meeting_link(), output);
  }

  // optional string meeting_title = 2;
  if (this->meeting_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meeting_title().data(), this->meeting_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Meeting.meeting_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->meeting_title(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.Meeting)
}

::google::protobuf::uint8* Meeting::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.Meeting)
  // optional string meeting_link = 1;
  if (this->meeting_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meeting_link().data(), this->meeting_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Meeting.meeting_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->meeting_link(), target);
  }

  // optional string meeting_title = 2;
  if (this->meeting_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->meeting_title().data(), this->meeting_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Meeting.meeting_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->meeting_title(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.Meeting)
  return target;
}

size_t Meeting::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.Meeting)
  size_t total_size = 0;

  // optional string meeting_link = 1;
  if (this->meeting_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meeting_link());
  }

  // optional string meeting_title = 2;
  if (this->meeting_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->meeting_title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Meeting::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.Meeting)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Meeting* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Meeting>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.Meeting)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.Meeting)
    UnsafeMergeFrom(*source);
  }
}

void Meeting::MergeFrom(const Meeting& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.Meeting)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Meeting::UnsafeMergeFrom(const Meeting& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.meeting_link().size() > 0) {

    meeting_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meeting_link_);
  }
  if (from.meeting_title().size() > 0) {

    meeting_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.meeting_title_);
  }
}

void Meeting::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.Meeting)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Meeting::CopyFrom(const Meeting& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.Meeting)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Meeting::IsInitialized() const {

  return true;
}

void Meeting::Swap(Meeting* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Meeting::InternalSwap(Meeting* other) {
  meeting_link_.Swap(&other->meeting_link_);
  meeting_title_.Swap(&other->meeting_title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Meeting::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Meeting_descriptor_;
  metadata.reflection = Meeting_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Meeting

// optional string meeting_link = 1;
void Meeting::clear_meeting_link() {
  meeting_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Meeting::meeting_link() const {
  // @@protoc_insertion_point(field_get:main.Meeting.meeting_link)
  return meeting_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meeting::set_meeting_link(const ::std::string& value) {
  
  meeting_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Meeting.meeting_link)
}
void Meeting::set_meeting_link(const char* value) {
  
  meeting_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Meeting.meeting_link)
}
void Meeting::set_meeting_link(const char* value, size_t size) {
  
  meeting_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Meeting.meeting_link)
}
::std::string* Meeting::mutable_meeting_link() {
  
  // @@protoc_insertion_point(field_mutable:main.Meeting.meeting_link)
  return meeting_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Meeting::release_meeting_link() {
  // @@protoc_insertion_point(field_release:main.Meeting.meeting_link)
  
  return meeting_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meeting::set_allocated_meeting_link(::std::string* meeting_link) {
  if (meeting_link != NULL) {
    
  } else {
    
  }
  meeting_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meeting_link);
  // @@protoc_insertion_point(field_set_allocated:main.Meeting.meeting_link)
}

// optional string meeting_title = 2;
void Meeting::clear_meeting_title() {
  meeting_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Meeting::meeting_title() const {
  // @@protoc_insertion_point(field_get:main.Meeting.meeting_title)
  return meeting_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meeting::set_meeting_title(const ::std::string& value) {
  
  meeting_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Meeting.meeting_title)
}
void Meeting::set_meeting_title(const char* value) {
  
  meeting_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Meeting.meeting_title)
}
void Meeting::set_meeting_title(const char* value, size_t size) {
  
  meeting_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Meeting.meeting_title)
}
::std::string* Meeting::mutable_meeting_title() {
  
  // @@protoc_insertion_point(field_mutable:main.Meeting.meeting_title)
  return meeting_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Meeting::release_meeting_title() {
  // @@protoc_insertion_point(field_release:main.Meeting.meeting_title)
  
  return meeting_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meeting::set_allocated_meeting_title(::std::string* meeting_title) {
  if (meeting_title != NULL) {
    
  } else {
    
  }
  meeting_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), meeting_title);
  // @@protoc_insertion_point(field_set_allocated:main.Meeting.meeting_title)
}

inline const Meeting* Meeting::internal_default_instance() {
  return &Meeting_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)
