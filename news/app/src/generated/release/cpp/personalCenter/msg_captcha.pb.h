// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_captcha.proto

#ifndef PROTOBUF_personalCenter_2fmsg_5fcaptcha_2eproto__INCLUDED
#define PROTOBUF_personalCenter_2fmsg_5fcaptcha_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
void protobuf_InitDefaults_personalCenter_2fmsg_5fcaptcha_2eproto();
void protobuf_AssignDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
void protobuf_ShutdownFile_personalCenter_2fmsg_5fcaptcha_2eproto();

class CheckPhoneCaptchaRequest;
class CheckPhoneCaptchaResponse;
class GetPhoneCaptchaRequest;
class GetPhoneCaptchaResponse;

// ===================================================================

class GetPhoneCaptchaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.GetPhoneCaptchaRequest) */ {
 public:
  GetPhoneCaptchaRequest();
  virtual ~GetPhoneCaptchaRequest();

  GetPhoneCaptchaRequest(const GetPhoneCaptchaRequest& from);

  inline GetPhoneCaptchaRequest& operator=(const GetPhoneCaptchaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhoneCaptchaRequest& default_instance();

  static const GetPhoneCaptchaRequest* internal_default_instance();

  void Swap(GetPhoneCaptchaRequest* other);

  // implements Message ----------------------------------------------

  inline GetPhoneCaptchaRequest* New() const { return New(NULL); }

  GetPhoneCaptchaRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPhoneCaptchaRequest& from);
  void MergeFrom(const GetPhoneCaptchaRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPhoneCaptchaRequest* other);
  void UnsafeMergeFrom(const GetPhoneCaptchaRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // optional string nation = 2;
  void clear_nation();
  static const int kNationFieldNumber = 2;
  const ::std::string& nation() const;
  void set_nation(const ::std::string& value);
  void set_nation(const char* value);
  void set_nation(const char* value, size_t size);
  ::std::string* mutable_nation();
  ::std::string* release_nation();
  void set_allocated_nation(::std::string* nation);

  // optional string message_type = 3;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 3;
  const ::std::string& message_type() const;
  void set_message_type(const ::std::string& value);
  void set_message_type(const char* value);
  void set_message_type(const char* value, size_t size);
  ::std::string* mutable_message_type();
  ::std::string* release_message_type();
  void set_allocated_message_type(::std::string* message_type);

  // @@protoc_insertion_point(class_scope:personal.GetPhoneCaptchaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr nation_;
  ::google::protobuf::internal::ArenaStringPtr message_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcaptcha_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetPhoneCaptchaRequest> GetPhoneCaptchaRequest_default_instance_;

// -------------------------------------------------------------------

class GetPhoneCaptchaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.GetPhoneCaptchaResponse) */ {
 public:
  GetPhoneCaptchaResponse();
  virtual ~GetPhoneCaptchaResponse();

  GetPhoneCaptchaResponse(const GetPhoneCaptchaResponse& from);

  inline GetPhoneCaptchaResponse& operator=(const GetPhoneCaptchaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetPhoneCaptchaResponse& default_instance();

  static const GetPhoneCaptchaResponse* internal_default_instance();

  void Swap(GetPhoneCaptchaResponse* other);

  // implements Message ----------------------------------------------

  inline GetPhoneCaptchaResponse* New() const { return New(NULL); }

  GetPhoneCaptchaResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetPhoneCaptchaResponse& from);
  void MergeFrom(const GetPhoneCaptchaResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(GetPhoneCaptchaResponse* other);
  void UnsafeMergeFrom(const GetPhoneCaptchaResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.GetPhoneCaptchaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcaptcha_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<GetPhoneCaptchaResponse> GetPhoneCaptchaResponse_default_instance_;

// -------------------------------------------------------------------

class CheckPhoneCaptchaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.CheckPhoneCaptchaRequest) */ {
 public:
  CheckPhoneCaptchaRequest();
  virtual ~CheckPhoneCaptchaRequest();

  CheckPhoneCaptchaRequest(const CheckPhoneCaptchaRequest& from);

  inline CheckPhoneCaptchaRequest& operator=(const CheckPhoneCaptchaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPhoneCaptchaRequest& default_instance();

  static const CheckPhoneCaptchaRequest* internal_default_instance();

  void Swap(CheckPhoneCaptchaRequest* other);

  // implements Message ----------------------------------------------

  inline CheckPhoneCaptchaRequest* New() const { return New(NULL); }

  CheckPhoneCaptchaRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPhoneCaptchaRequest& from);
  void MergeFrom(const CheckPhoneCaptchaRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckPhoneCaptchaRequest* other);
  void UnsafeMergeFrom(const CheckPhoneCaptchaRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // optional string phone_captcha = 2;
  void clear_phone_captcha();
  static const int kPhoneCaptchaFieldNumber = 2;
  const ::std::string& phone_captcha() const;
  void set_phone_captcha(const ::std::string& value);
  void set_phone_captcha(const char* value);
  void set_phone_captcha(const char* value, size_t size);
  ::std::string* mutable_phone_captcha();
  ::std::string* release_phone_captcha();
  void set_allocated_phone_captcha(::std::string* phone_captcha);

  // optional string nation = 3;
  void clear_nation();
  static const int kNationFieldNumber = 3;
  const ::std::string& nation() const;
  void set_nation(const ::std::string& value);
  void set_nation(const char* value);
  void set_nation(const char* value, size_t size);
  ::std::string* mutable_nation();
  ::std::string* release_nation();
  void set_allocated_nation(::std::string* nation);

  // optional string message_type = 4;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 4;
  const ::std::string& message_type() const;
  void set_message_type(const ::std::string& value);
  void set_message_type(const char* value);
  void set_message_type(const char* value, size_t size);
  ::std::string* mutable_message_type();
  ::std::string* release_message_type();
  void set_allocated_message_type(::std::string* message_type);

  // @@protoc_insertion_point(class_scope:personal.CheckPhoneCaptchaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_captcha_;
  ::google::protobuf::internal::ArenaStringPtr nation_;
  ::google::protobuf::internal::ArenaStringPtr message_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcaptcha_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CheckPhoneCaptchaRequest> CheckPhoneCaptchaRequest_default_instance_;

// -------------------------------------------------------------------

class CheckPhoneCaptchaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.CheckPhoneCaptchaResponse) */ {
 public:
  CheckPhoneCaptchaResponse();
  virtual ~CheckPhoneCaptchaResponse();

  CheckPhoneCaptchaResponse(const CheckPhoneCaptchaResponse& from);

  inline CheckPhoneCaptchaResponse& operator=(const CheckPhoneCaptchaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPhoneCaptchaResponse& default_instance();

  static const CheckPhoneCaptchaResponse* internal_default_instance();

  void Swap(CheckPhoneCaptchaResponse* other);

  // implements Message ----------------------------------------------

  inline CheckPhoneCaptchaResponse* New() const { return New(NULL); }

  CheckPhoneCaptchaResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPhoneCaptchaResponse& from);
  void MergeFrom(const CheckPhoneCaptchaResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckPhoneCaptchaResponse* other);
  void UnsafeMergeFrom(const CheckPhoneCaptchaResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.CheckPhoneCaptchaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  ::google::protobuf::int32 status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcaptcha_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcaptcha_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcaptcha_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CheckPhoneCaptchaResponse> CheckPhoneCaptchaResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GetPhoneCaptchaRequest

// optional string phone_number = 1;
inline void GetPhoneCaptchaRequest::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPhoneCaptchaRequest::phone_number() const {
  // @@protoc_insertion_point(field_get:personal.GetPhoneCaptchaRequest.phone_number)
  return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.GetPhoneCaptchaRequest.phone_number)
}
inline void GetPhoneCaptchaRequest::set_phone_number(const char* value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.GetPhoneCaptchaRequest.phone_number)
}
inline void GetPhoneCaptchaRequest::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.GetPhoneCaptchaRequest.phone_number)
}
inline ::std::string* GetPhoneCaptchaRequest::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.GetPhoneCaptchaRequest.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPhoneCaptchaRequest::release_phone_number() {
  // @@protoc_insertion_point(field_release:personal.GetPhoneCaptchaRequest.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:personal.GetPhoneCaptchaRequest.phone_number)
}

// optional string nation = 2;
inline void GetPhoneCaptchaRequest::clear_nation() {
  nation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPhoneCaptchaRequest::nation() const {
  // @@protoc_insertion_point(field_get:personal.GetPhoneCaptchaRequest.nation)
  return nation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_nation(const ::std::string& value) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.GetPhoneCaptchaRequest.nation)
}
inline void GetPhoneCaptchaRequest::set_nation(const char* value) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.GetPhoneCaptchaRequest.nation)
}
inline void GetPhoneCaptchaRequest::set_nation(const char* value, size_t size) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.GetPhoneCaptchaRequest.nation)
}
inline ::std::string* GetPhoneCaptchaRequest::mutable_nation() {
  
  // @@protoc_insertion_point(field_mutable:personal.GetPhoneCaptchaRequest.nation)
  return nation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPhoneCaptchaRequest::release_nation() {
  // @@protoc_insertion_point(field_release:personal.GetPhoneCaptchaRequest.nation)
  
  return nation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_allocated_nation(::std::string* nation) {
  if (nation != NULL) {
    
  } else {
    
  }
  nation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nation);
  // @@protoc_insertion_point(field_set_allocated:personal.GetPhoneCaptchaRequest.nation)
}

// optional string message_type = 3;
inline void GetPhoneCaptchaRequest::clear_message_type() {
  message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetPhoneCaptchaRequest::message_type() const {
  // @@protoc_insertion_point(field_get:personal.GetPhoneCaptchaRequest.message_type)
  return message_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_message_type(const ::std::string& value) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.GetPhoneCaptchaRequest.message_type)
}
inline void GetPhoneCaptchaRequest::set_message_type(const char* value) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.GetPhoneCaptchaRequest.message_type)
}
inline void GetPhoneCaptchaRequest::set_message_type(const char* value, size_t size) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.GetPhoneCaptchaRequest.message_type)
}
inline ::std::string* GetPhoneCaptchaRequest::mutable_message_type() {
  
  // @@protoc_insertion_point(field_mutable:personal.GetPhoneCaptchaRequest.message_type)
  return message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetPhoneCaptchaRequest::release_message_type() {
  // @@protoc_insertion_point(field_release:personal.GetPhoneCaptchaRequest.message_type)
  
  return message_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetPhoneCaptchaRequest::set_allocated_message_type(::std::string* message_type) {
  if (message_type != NULL) {
    
  } else {
    
  }
  message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_type);
  // @@protoc_insertion_point(field_set_allocated:personal.GetPhoneCaptchaRequest.message_type)
}

inline const GetPhoneCaptchaRequest* GetPhoneCaptchaRequest::internal_default_instance() {
  return &GetPhoneCaptchaRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// GetPhoneCaptchaResponse

// optional int32 status = 1;
inline void GetPhoneCaptchaResponse::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 GetPhoneCaptchaResponse::status() const {
  // @@protoc_insertion_point(field_get:personal.GetPhoneCaptchaResponse.status)
  return status_;
}
inline void GetPhoneCaptchaResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:personal.GetPhoneCaptchaResponse.status)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool GetPhoneCaptchaResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void GetPhoneCaptchaResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& GetPhoneCaptchaResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.GetPhoneCaptchaResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* GetPhoneCaptchaResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.GetPhoneCaptchaResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* GetPhoneCaptchaResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.GetPhoneCaptchaResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void GetPhoneCaptchaResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.GetPhoneCaptchaResponse.error)
}

inline const GetPhoneCaptchaResponse* GetPhoneCaptchaResponse::internal_default_instance() {
  return &GetPhoneCaptchaResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CheckPhoneCaptchaRequest

// optional string phone_number = 1;
inline void CheckPhoneCaptchaRequest::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckPhoneCaptchaRequest::phone_number() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaRequest.phone_number)
  return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CheckPhoneCaptchaRequest.phone_number)
}
inline void CheckPhoneCaptchaRequest::set_phone_number(const char* value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CheckPhoneCaptchaRequest.phone_number)
}
inline void CheckPhoneCaptchaRequest::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CheckPhoneCaptchaRequest.phone_number)
}
inline ::std::string* CheckPhoneCaptchaRequest::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.CheckPhoneCaptchaRequest.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPhoneCaptchaRequest::release_phone_number() {
  // @@protoc_insertion_point(field_release:personal.CheckPhoneCaptchaRequest.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:personal.CheckPhoneCaptchaRequest.phone_number)
}

// optional string phone_captcha = 2;
inline void CheckPhoneCaptchaRequest::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckPhoneCaptchaRequest::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaRequest.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CheckPhoneCaptchaRequest.phone_captcha)
}
inline void CheckPhoneCaptchaRequest::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CheckPhoneCaptchaRequest.phone_captcha)
}
inline void CheckPhoneCaptchaRequest::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CheckPhoneCaptchaRequest.phone_captcha)
}
inline ::std::string* CheckPhoneCaptchaRequest::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.CheckPhoneCaptchaRequest.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPhoneCaptchaRequest::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.CheckPhoneCaptchaRequest.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.CheckPhoneCaptchaRequest.phone_captcha)
}

// optional string nation = 3;
inline void CheckPhoneCaptchaRequest::clear_nation() {
  nation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckPhoneCaptchaRequest::nation() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaRequest.nation)
  return nation_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_nation(const ::std::string& value) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CheckPhoneCaptchaRequest.nation)
}
inline void CheckPhoneCaptchaRequest::set_nation(const char* value) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CheckPhoneCaptchaRequest.nation)
}
inline void CheckPhoneCaptchaRequest::set_nation(const char* value, size_t size) {
  
  nation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CheckPhoneCaptchaRequest.nation)
}
inline ::std::string* CheckPhoneCaptchaRequest::mutable_nation() {
  
  // @@protoc_insertion_point(field_mutable:personal.CheckPhoneCaptchaRequest.nation)
  return nation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPhoneCaptchaRequest::release_nation() {
  // @@protoc_insertion_point(field_release:personal.CheckPhoneCaptchaRequest.nation)
  
  return nation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_allocated_nation(::std::string* nation) {
  if (nation != NULL) {
    
  } else {
    
  }
  nation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nation);
  // @@protoc_insertion_point(field_set_allocated:personal.CheckPhoneCaptchaRequest.nation)
}

// optional string message_type = 4;
inline void CheckPhoneCaptchaRequest::clear_message_type() {
  message_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckPhoneCaptchaRequest::message_type() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaRequest.message_type)
  return message_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_message_type(const ::std::string& value) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CheckPhoneCaptchaRequest.message_type)
}
inline void CheckPhoneCaptchaRequest::set_message_type(const char* value) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CheckPhoneCaptchaRequest.message_type)
}
inline void CheckPhoneCaptchaRequest::set_message_type(const char* value, size_t size) {
  
  message_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CheckPhoneCaptchaRequest.message_type)
}
inline ::std::string* CheckPhoneCaptchaRequest::mutable_message_type() {
  
  // @@protoc_insertion_point(field_mutable:personal.CheckPhoneCaptchaRequest.message_type)
  return message_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckPhoneCaptchaRequest::release_message_type() {
  // @@protoc_insertion_point(field_release:personal.CheckPhoneCaptchaRequest.message_type)
  
  return message_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckPhoneCaptchaRequest::set_allocated_message_type(::std::string* message_type) {
  if (message_type != NULL) {
    
  } else {
    
  }
  message_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_type);
  // @@protoc_insertion_point(field_set_allocated:personal.CheckPhoneCaptchaRequest.message_type)
}

inline const CheckPhoneCaptchaRequest* CheckPhoneCaptchaRequest::internal_default_instance() {
  return &CheckPhoneCaptchaRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CheckPhoneCaptchaResponse

// optional int32 status = 1;
inline void CheckPhoneCaptchaResponse::clear_status() {
  status_ = 0;
}
inline ::google::protobuf::int32 CheckPhoneCaptchaResponse::status() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaResponse.status)
  return status_;
}
inline void CheckPhoneCaptchaResponse::set_status(::google::protobuf::int32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:personal.CheckPhoneCaptchaResponse.status)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool CheckPhoneCaptchaResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void CheckPhoneCaptchaResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& CheckPhoneCaptchaResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.CheckPhoneCaptchaResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* CheckPhoneCaptchaResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.CheckPhoneCaptchaResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* CheckPhoneCaptchaResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.CheckPhoneCaptchaResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CheckPhoneCaptchaResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.CheckPhoneCaptchaResponse.error)
}

inline const CheckPhoneCaptchaResponse* CheckPhoneCaptchaResponse::internal_default_instance() {
  return &CheckPhoneCaptchaResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personalCenter_2fmsg_5fcaptcha_2eproto__INCLUDED
