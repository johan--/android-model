// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_login.proto

#ifndef PROTOBUF_personalCenter_2fmsg_5flogin_2eproto__INCLUDED
#define PROTOBUF_personalCenter_2fmsg_5flogin_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto();
void protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

class BindExistAccountRequest;
class BindNewRegistRequest;
class LoginOutRequest;
class LoginOutResponse;
class LoginRequest;
class LoginResponse;
class QuickLoginRequest;
class ThirdPartyBindRequest;
class ThirdPartyBindResponse;
class ThirdPartyLoginRequest;

enum ThirdPartyType {
  WECHAT = 0,
  QQ = 1,
  SINA = 3,
  ThirdPartyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ThirdPartyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ThirdPartyType_IsValid(int value);
const ThirdPartyType ThirdPartyType_MIN = WECHAT;
const ThirdPartyType ThirdPartyType_MAX = SINA;
const int ThirdPartyType_ARRAYSIZE = ThirdPartyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ThirdPartyType_descriptor();
inline const ::std::string& ThirdPartyType_Name(ThirdPartyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ThirdPartyType_descriptor(), value);
}
inline bool ThirdPartyType_Parse(
    const ::std::string& name, ThirdPartyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ThirdPartyType>(
    ThirdPartyType_descriptor(), name, value);
}
enum LoginDeviceType {
  ANDROID = 0,
  IOS = 1,
  LoginDeviceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  LoginDeviceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool LoginDeviceType_IsValid(int value);
const LoginDeviceType LoginDeviceType_MIN = ANDROID;
const LoginDeviceType LoginDeviceType_MAX = IOS;
const int LoginDeviceType_ARRAYSIZE = LoginDeviceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginDeviceType_descriptor();
inline const ::std::string& LoginDeviceType_Name(LoginDeviceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginDeviceType_descriptor(), value);
}
inline bool LoginDeviceType_Parse(
    const ::std::string& name, LoginDeviceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginDeviceType>(
    LoginDeviceType_descriptor(), name, value);
}
// ===================================================================

class LoginOutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.LoginOutRequest) */ {
 public:
  LoginOutRequest();
  virtual ~LoginOutRequest();

  LoginOutRequest(const LoginOutRequest& from);

  inline LoginOutRequest& operator=(const LoginOutRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginOutRequest& default_instance();

  static const LoginOutRequest* internal_default_instance();

  void Swap(LoginOutRequest* other);

  // implements Message ----------------------------------------------

  inline LoginOutRequest* New() const { return New(NULL); }

  LoginOutRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginOutRequest& from);
  void MergeFrom(const LoginOutRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginOutRequest* other);
  void UnsafeMergeFrom(const LoginOutRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string login_token = 2;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 2;
  const ::std::string& login_token() const;
  void set_login_token(const ::std::string& value);
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  ::std::string* mutable_login_token();
  ::std::string* release_login_token();
  void set_allocated_login_token(::std::string* login_token);

  // @@protoc_insertion_point(class_scope:personal.LoginOutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr login_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginOutRequest> LoginOutRequest_default_instance_;

// -------------------------------------------------------------------

class LoginOutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.LoginOutResponse) */ {
 public:
  LoginOutResponse();
  virtual ~LoginOutResponse();

  LoginOutResponse(const LoginOutResponse& from);

  inline LoginOutResponse& operator=(const LoginOutResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginOutResponse& default_instance();

  static const LoginOutResponse* internal_default_instance();

  void Swap(LoginOutResponse* other);

  // implements Message ----------------------------------------------

  inline LoginOutResponse* New() const { return New(NULL); }

  LoginOutResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginOutResponse& from);
  void MergeFrom(const LoginOutResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginOutResponse* other);
  void UnsafeMergeFrom(const LoginOutResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.LoginOutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginOutResponse> LoginOutResponse_default_instance_;

// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static const LoginRequest* internal_default_instance();

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginRequest* other);
  void UnsafeMergeFrom(const LoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string password = 1;
  void clear_password();
  static const int kPasswordFieldNumber = 1;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string device_id = 3;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 3;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // optional .personal.LoginDeviceType device_type = 4;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 4;
  ::personal::LoginDeviceType device_type() const;
  void set_device_type(::personal::LoginDeviceType value);

  // @@protoc_insertion_point(class_scope:personal.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  int device_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static const LoginResponse* internal_default_instance();

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LoginResponse* other);
  void UnsafeMergeFrom(const LoginResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string user_nick_name = 2;
  void clear_user_nick_name();
  static const int kUserNickNameFieldNumber = 2;
  const ::std::string& user_nick_name() const;
  void set_user_nick_name(const ::std::string& value);
  void set_user_nick_name(const char* value);
  void set_user_nick_name(const char* value, size_t size);
  ::std::string* mutable_user_nick_name();
  ::std::string* release_user_nick_name();
  void set_allocated_user_nick_name(::std::string* user_nick_name);

  // optional string user_real_name = 3;
  void clear_user_real_name();
  static const int kUserRealNameFieldNumber = 3;
  const ::std::string& user_real_name() const;
  void set_user_real_name(const ::std::string& value);
  void set_user_real_name(const char* value);
  void set_user_real_name(const char* value, size_t size);
  ::std::string* mutable_user_real_name();
  ::std::string* release_user_real_name();
  void set_allocated_user_real_name(::std::string* user_real_name);

  // optional string user_used_name = 4;
  void clear_user_used_name();
  static const int kUserUsedNameFieldNumber = 4;
  const ::std::string& user_used_name() const;
  void set_user_used_name(const ::std::string& value);
  void set_user_used_name(const char* value);
  void set_user_used_name(const char* value, size_t size);
  ::std::string* mutable_user_used_name();
  ::std::string* release_user_used_name();
  void set_allocated_user_used_name(::std::string* user_used_name);

  // optional string user_avatar_url = 5;
  void clear_user_avatar_url();
  static const int kUserAvatarUrlFieldNumber = 5;
  const ::std::string& user_avatar_url() const;
  void set_user_avatar_url(const ::std::string& value);
  void set_user_avatar_url(const char* value);
  void set_user_avatar_url(const char* value, size_t size);
  ::std::string* mutable_user_avatar_url();
  ::std::string* release_user_avatar_url();
  void set_allocated_user_avatar_url(::std::string* user_avatar_url);

  // optional string login_token = 6;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 6;
  const ::std::string& login_token() const;
  void set_login_token(const ::std::string& value);
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  ::std::string* mutable_login_token();
  ::std::string* release_login_token();
  void set_allocated_login_token(::std::string* login_token);

  // optional .grpcCommon.GrpcError error = 7;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 7;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr user_nick_name_;
  ::google::protobuf::internal::ArenaStringPtr user_real_name_;
  ::google::protobuf::internal::ArenaStringPtr user_used_name_;
  ::google::protobuf::internal::ArenaStringPtr user_avatar_url_;
  ::google::protobuf::internal::ArenaStringPtr login_token_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

// -------------------------------------------------------------------

class QuickLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.QuickLoginRequest) */ {
 public:
  QuickLoginRequest();
  virtual ~QuickLoginRequest();

  QuickLoginRequest(const QuickLoginRequest& from);

  inline QuickLoginRequest& operator=(const QuickLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QuickLoginRequest& default_instance();

  static const QuickLoginRequest* internal_default_instance();

  void Swap(QuickLoginRequest* other);

  // implements Message ----------------------------------------------

  inline QuickLoginRequest* New() const { return New(NULL); }

  QuickLoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QuickLoginRequest& from);
  void MergeFrom(const QuickLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(QuickLoginRequest* other);
  void UnsafeMergeFrom(const QuickLoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // optional string phone_captcha = 2;
  void clear_phone_captcha();
  static const int kPhoneCaptchaFieldNumber = 2;
  const ::std::string& phone_captcha() const;
  void set_phone_captcha(const ::std::string& value);
  void set_phone_captcha(const char* value);
  void set_phone_captcha(const char* value, size_t size);
  ::std::string* mutable_phone_captcha();
  ::std::string* release_phone_captcha();
  void set_allocated_phone_captcha(::std::string* phone_captcha);

  // @@protoc_insertion_point(class_scope:personal.QuickLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  ::google::protobuf::internal::ArenaStringPtr phone_captcha_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<QuickLoginRequest> QuickLoginRequest_default_instance_;

// -------------------------------------------------------------------

class ThirdPartyLoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.ThirdPartyLoginRequest) */ {
 public:
  ThirdPartyLoginRequest();
  virtual ~ThirdPartyLoginRequest();

  ThirdPartyLoginRequest(const ThirdPartyLoginRequest& from);

  inline ThirdPartyLoginRequest& operator=(const ThirdPartyLoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThirdPartyLoginRequest& default_instance();

  static const ThirdPartyLoginRequest* internal_default_instance();

  void Swap(ThirdPartyLoginRequest* other);

  // implements Message ----------------------------------------------

  inline ThirdPartyLoginRequest* New() const { return New(NULL); }

  ThirdPartyLoginRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThirdPartyLoginRequest& from);
  void MergeFrom(const ThirdPartyLoginRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ThirdPartyLoginRequest* other);
  void UnsafeMergeFrom(const ThirdPartyLoginRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional int32 third_party_code = 2;
  void clear_third_party_code();
  static const int kThirdPartyCodeFieldNumber = 2;
  ::google::protobuf::int32 third_party_code() const;
  void set_third_party_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.ThirdPartyLoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::int32 third_party_code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyLoginRequest> ThirdPartyLoginRequest_default_instance_;

// -------------------------------------------------------------------

class ThirdPartyBindRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.ThirdPartyBindRequest) */ {
 public:
  ThirdPartyBindRequest();
  virtual ~ThirdPartyBindRequest();

  ThirdPartyBindRequest(const ThirdPartyBindRequest& from);

  inline ThirdPartyBindRequest& operator=(const ThirdPartyBindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThirdPartyBindRequest& default_instance();

  static const ThirdPartyBindRequest* internal_default_instance();

  void Swap(ThirdPartyBindRequest* other);

  // implements Message ----------------------------------------------

  inline ThirdPartyBindRequest* New() const { return New(NULL); }

  ThirdPartyBindRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThirdPartyBindRequest& from);
  void MergeFrom(const ThirdPartyBindRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ThirdPartyBindRequest* other);
  void UnsafeMergeFrom(const ThirdPartyBindRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional int32 third_party_code = 3;
  void clear_third_party_code();
  static const int kThirdPartyCodeFieldNumber = 3;
  ::google::protobuf::int32 third_party_code() const;
  void set_third_party_code(::google::protobuf::int32 value);

  // optional int32 user_status = 4;
  void clear_user_status();
  static const int kUserStatusFieldNumber = 4;
  ::google::protobuf::int32 user_status() const;
  void set_user_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.ThirdPartyBindRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::int32 third_party_code_;
  ::google::protobuf::int32 user_status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyBindRequest> ThirdPartyBindRequest_default_instance_;

// -------------------------------------------------------------------

class ThirdPartyBindResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.ThirdPartyBindResponse) */ {
 public:
  ThirdPartyBindResponse();
  virtual ~ThirdPartyBindResponse();

  ThirdPartyBindResponse(const ThirdPartyBindResponse& from);

  inline ThirdPartyBindResponse& operator=(const ThirdPartyBindResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ThirdPartyBindResponse& default_instance();

  static const ThirdPartyBindResponse* internal_default_instance();

  void Swap(ThirdPartyBindResponse* other);

  // implements Message ----------------------------------------------

  inline ThirdPartyBindResponse* New() const { return New(NULL); }

  ThirdPartyBindResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ThirdPartyBindResponse& from);
  void MergeFrom(const ThirdPartyBindResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ThirdPartyBindResponse* other);
  void UnsafeMergeFrom(const ThirdPartyBindResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 bind_status = 1;
  void clear_bind_status();
  static const int kBindStatusFieldNumber = 1;
  ::google::protobuf::int32 bind_status() const;
  void set_bind_status(::google::protobuf::int32 value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.ThirdPartyBindResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  ::google::protobuf::int32 bind_status_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyBindResponse> ThirdPartyBindResponse_default_instance_;

// -------------------------------------------------------------------

class BindExistAccountRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.BindExistAccountRequest) */ {
 public:
  BindExistAccountRequest();
  virtual ~BindExistAccountRequest();

  BindExistAccountRequest(const BindExistAccountRequest& from);

  inline BindExistAccountRequest& operator=(const BindExistAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindExistAccountRequest& default_instance();

  static const BindExistAccountRequest* internal_default_instance();

  void Swap(BindExistAccountRequest* other);

  // implements Message ----------------------------------------------

  inline BindExistAccountRequest* New() const { return New(NULL); }

  BindExistAccountRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindExistAccountRequest& from);
  void MergeFrom(const BindExistAccountRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindExistAccountRequest* other);
  void UnsafeMergeFrom(const BindExistAccountRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  const ::std::string& uid() const;
  void set_uid(const ::std::string& value);
  void set_uid(const char* value);
  void set_uid(const char* value, size_t size);
  ::std::string* mutable_uid();
  ::std::string* release_uid();
  void set_allocated_uid(::std::string* uid);

  // optional string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional string device_id = 4;
  void clear_device_id();
  static const int kDeviceIdFieldNumber = 4;
  const ::std::string& device_id() const;
  void set_device_id(const ::std::string& value);
  void set_device_id(const char* value);
  void set_device_id(const char* value, size_t size);
  ::std::string* mutable_device_id();
  ::std::string* release_device_id();
  void set_allocated_device_id(::std::string* device_id);

  // optional .personal.LoginDeviceType device_type = 5;
  void clear_device_type();
  static const int kDeviceTypeFieldNumber = 5;
  ::personal::LoginDeviceType device_type() const;
  void set_device_type(::personal::LoginDeviceType value);

  // optional .personal.ThirdPartyType third_party_type = 6;
  void clear_third_party_type();
  static const int kThirdPartyTypeFieldNumber = 6;
  ::personal::ThirdPartyType third_party_type() const;
  void set_third_party_type(::personal::ThirdPartyType value);

  // @@protoc_insertion_point(class_scope:personal.BindExistAccountRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr uid_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr device_id_;
  int device_type_;
  int third_party_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindExistAccountRequest> BindExistAccountRequest_default_instance_;

// -------------------------------------------------------------------

class BindNewRegistRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.BindNewRegistRequest) */ {
 public:
  BindNewRegistRequest();
  virtual ~BindNewRegistRequest();

  BindNewRegistRequest(const BindNewRegistRequest& from);

  inline BindNewRegistRequest& operator=(const BindNewRegistRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BindNewRegistRequest& default_instance();

  static const BindNewRegistRequest* internal_default_instance();

  void Swap(BindNewRegistRequest* other);

  // implements Message ----------------------------------------------

  inline BindNewRegistRequest* New() const { return New(NULL); }

  BindNewRegistRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BindNewRegistRequest& from);
  void MergeFrom(const BindNewRegistRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(BindNewRegistRequest* other);
  void UnsafeMergeFrom(const BindNewRegistRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 1;
  void clear_user_name();
  static const int kUserNameFieldNumber = 1;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string email = 2;
  void clear_email();
  static const int kEmailFieldNumber = 2;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string password = 3;
  void clear_password();
  static const int kPasswordFieldNumber = 3;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // optional .personal.ThirdPartyType third_party_type = 4;
  void clear_third_party_type();
  static const int kThirdPartyTypeFieldNumber = 4;
  ::personal::ThirdPartyType third_party_type() const;
  void set_third_party_type(::personal::ThirdPartyType value);

  // @@protoc_insertion_point(class_scope:personal.BindNewRegistRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  int third_party_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<BindNewRegistRequest> BindNewRegistRequest_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginOutRequest

// optional string user_id = 1;
inline void LoginOutRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginOutRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginOutRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginOutRequest.user_id)
}
inline void LoginOutRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginOutRequest.user_id)
}
inline void LoginOutRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginOutRequest.user_id)
}
inline ::std::string* LoginOutRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginOutRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginOutRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.LoginOutRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginOutRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutRequest.user_id)
}

// optional string login_token = 2;
inline void LoginOutRequest::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginOutRequest::login_token() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutRequest.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginOutRequest::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginOutRequest.login_token)
}
inline void LoginOutRequest::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginOutRequest.login_token)
}
inline void LoginOutRequest::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginOutRequest.login_token)
}
inline ::std::string* LoginOutRequest::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginOutRequest.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginOutRequest::release_login_token() {
  // @@protoc_insertion_point(field_release:personal.LoginOutRequest.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginOutRequest::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutRequest.login_token)
}

inline const LoginOutRequest* LoginOutRequest::internal_default_instance() {
  return &LoginOutRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginOutResponse

// optional .grpcCommon.GrpcError error = 2;
inline bool LoginOutResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void LoginOutResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& LoginOutResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* LoginOutResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.LoginOutResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* LoginOutResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.LoginOutResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void LoginOutResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutResponse.error)
}

inline const LoginOutResponse* LoginOutResponse::internal_default_instance() {
  return &LoginOutResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginRequest

// optional string password = 1;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.password)
}

// optional string user_name = 2;
inline void LoginRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.user_name)
}
inline void LoginRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.user_name)
}
inline void LoginRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.user_name)
}
inline ::std::string* LoginRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.user_name)
}

// optional string device_id = 3;
inline void LoginRequest::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::device_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.device_id)
}
inline void LoginRequest::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.device_id)
}
inline void LoginRequest::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.device_id)
}
inline ::std::string* LoginRequest::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_device_id() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.device_id)
}

// optional .personal.LoginDeviceType device_type = 4;
inline void LoginRequest::clear_device_type() {
  device_type_ = 0;
}
inline ::personal::LoginDeviceType LoginRequest::device_type() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.device_type)
  return static_cast< ::personal::LoginDeviceType >(device_type_);
}
inline void LoginRequest::set_device_type(::personal::LoginDeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:personal.LoginRequest.device_type)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// LoginResponse

// optional string user_id = 1;
inline void LoginResponse::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::user_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_id)
}
inline void LoginResponse::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_id)
}
inline void LoginResponse::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_id)
}
inline ::std::string* LoginResponse::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_id)
}

// optional string user_nick_name = 2;
inline void LoginResponse::clear_user_nick_name() {
  user_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::user_nick_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_nick_name)
  return user_nick_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_user_nick_name(const ::std::string& value) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_nick_name)
}
inline void LoginResponse::set_user_nick_name(const char* value) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_nick_name)
}
inline void LoginResponse::set_user_nick_name(const char* value, size_t size) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_nick_name)
}
inline ::std::string* LoginResponse::mutable_user_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_nick_name)
  return user_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_user_nick_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_nick_name)
  
  return user_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_user_nick_name(::std::string* user_nick_name) {
  if (user_nick_name != NULL) {
    
  } else {
    
  }
  user_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_nick_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_nick_name)
}

// optional string user_real_name = 3;
inline void LoginResponse::clear_user_real_name() {
  user_real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::user_real_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_real_name)
  return user_real_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_user_real_name(const ::std::string& value) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_real_name)
}
inline void LoginResponse::set_user_real_name(const char* value) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_real_name)
}
inline void LoginResponse::set_user_real_name(const char* value, size_t size) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_real_name)
}
inline ::std::string* LoginResponse::mutable_user_real_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_real_name)
  return user_real_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_user_real_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_real_name)
  
  return user_real_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_user_real_name(::std::string* user_real_name) {
  if (user_real_name != NULL) {
    
  } else {
    
  }
  user_real_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_real_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_real_name)
}

// optional string user_used_name = 4;
inline void LoginResponse::clear_user_used_name() {
  user_used_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::user_used_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_used_name)
  return user_used_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_user_used_name(const ::std::string& value) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_used_name)
}
inline void LoginResponse::set_user_used_name(const char* value) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_used_name)
}
inline void LoginResponse::set_user_used_name(const char* value, size_t size) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_used_name)
}
inline ::std::string* LoginResponse::mutable_user_used_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_used_name)
  return user_used_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_user_used_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_used_name)
  
  return user_used_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_user_used_name(::std::string* user_used_name) {
  if (user_used_name != NULL) {
    
  } else {
    
  }
  user_used_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_used_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_used_name)
}

// optional string user_avatar_url = 5;
inline void LoginResponse::clear_user_avatar_url() {
  user_avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::user_avatar_url() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_avatar_url)
  return user_avatar_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_user_avatar_url(const ::std::string& value) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_avatar_url)
}
inline void LoginResponse::set_user_avatar_url(const char* value) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_avatar_url)
}
inline void LoginResponse::set_user_avatar_url(const char* value, size_t size) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_avatar_url)
}
inline ::std::string* LoginResponse::mutable_user_avatar_url() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_avatar_url)
  return user_avatar_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_user_avatar_url() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_avatar_url)
  
  return user_avatar_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_user_avatar_url(::std::string* user_avatar_url) {
  if (user_avatar_url != NULL) {
    
  } else {
    
  }
  user_avatar_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_avatar_url);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_avatar_url)
}

// optional string login_token = 6;
inline void LoginResponse::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginResponse::login_token() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.login_token)
}
inline void LoginResponse::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.login_token)
}
inline void LoginResponse::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.login_token)
}
inline ::std::string* LoginResponse::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_login_token() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.login_token)
}

// optional .grpcCommon.GrpcError error = 7;
inline bool LoginResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void LoginResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& LoginResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* LoginResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* LoginResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void LoginResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.error)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// QuickLoginRequest

// optional string phone_number = 1;
inline void QuickLoginRequest::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuickLoginRequest::phone_number() const {
  // @@protoc_insertion_point(field_get:personal.QuickLoginRequest.phone_number)
  return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuickLoginRequest::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.QuickLoginRequest.phone_number)
}
inline void QuickLoginRequest::set_phone_number(const char* value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.QuickLoginRequest.phone_number)
}
inline void QuickLoginRequest::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.QuickLoginRequest.phone_number)
}
inline ::std::string* QuickLoginRequest::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.QuickLoginRequest.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuickLoginRequest::release_phone_number() {
  // @@protoc_insertion_point(field_release:personal.QuickLoginRequest.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuickLoginRequest::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:personal.QuickLoginRequest.phone_number)
}

// optional string phone_captcha = 2;
inline void QuickLoginRequest::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QuickLoginRequest::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.QuickLoginRequest.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuickLoginRequest::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.QuickLoginRequest.phone_captcha)
}
inline void QuickLoginRequest::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.QuickLoginRequest.phone_captcha)
}
inline void QuickLoginRequest::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.QuickLoginRequest.phone_captcha)
}
inline ::std::string* QuickLoginRequest::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.QuickLoginRequest.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QuickLoginRequest::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.QuickLoginRequest.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QuickLoginRequest::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.QuickLoginRequest.phone_captcha)
}

inline const QuickLoginRequest* QuickLoginRequest::internal_default_instance() {
  return &QuickLoginRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ThirdPartyLoginRequest

// optional string uid = 1;
inline void ThirdPartyLoginRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ThirdPartyLoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyLoginRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyLoginRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyLoginRequest.uid)
}
inline void ThirdPartyLoginRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyLoginRequest.uid)
}
inline void ThirdPartyLoginRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyLoginRequest.uid)
}
inline ::std::string* ThirdPartyLoginRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyLoginRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThirdPartyLoginRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyLoginRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyLoginRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyLoginRequest.uid)
}

// optional int32 third_party_code = 2;
inline void ThirdPartyLoginRequest::clear_third_party_code() {
  third_party_code_ = 0;
}
inline ::google::protobuf::int32 ThirdPartyLoginRequest::third_party_code() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyLoginRequest.third_party_code)
  return third_party_code_;
}
inline void ThirdPartyLoginRequest::set_third_party_code(::google::protobuf::int32 value) {
  
  third_party_code_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyLoginRequest.third_party_code)
}

inline const ThirdPartyLoginRequest* ThirdPartyLoginRequest::internal_default_instance() {
  return &ThirdPartyLoginRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ThirdPartyBindRequest

// optional string uid = 1;
inline void ThirdPartyBindRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ThirdPartyBindRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyBindRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.uid)
}
inline void ThirdPartyBindRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyBindRequest.uid)
}
inline void ThirdPartyBindRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyBindRequest.uid)
}
inline ::std::string* ThirdPartyBindRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThirdPartyBindRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyBindRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindRequest.uid)
}

// optional string user_id = 2;
inline void ThirdPartyBindRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ThirdPartyBindRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyBindRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.user_id)
}
inline void ThirdPartyBindRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyBindRequest.user_id)
}
inline void ThirdPartyBindRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyBindRequest.user_id)
}
inline ::std::string* ThirdPartyBindRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ThirdPartyBindRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ThirdPartyBindRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindRequest.user_id)
}

// optional int32 third_party_code = 3;
inline void ThirdPartyBindRequest::clear_third_party_code() {
  third_party_code_ = 0;
}
inline ::google::protobuf::int32 ThirdPartyBindRequest::third_party_code() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.third_party_code)
  return third_party_code_;
}
inline void ThirdPartyBindRequest::set_third_party_code(::google::protobuf::int32 value) {
  
  third_party_code_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.third_party_code)
}

// optional int32 user_status = 4;
inline void ThirdPartyBindRequest::clear_user_status() {
  user_status_ = 0;
}
inline ::google::protobuf::int32 ThirdPartyBindRequest::user_status() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.user_status)
  return user_status_;
}
inline void ThirdPartyBindRequest::set_user_status(::google::protobuf::int32 value) {
  
  user_status_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.user_status)
}

inline const ThirdPartyBindRequest* ThirdPartyBindRequest::internal_default_instance() {
  return &ThirdPartyBindRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// ThirdPartyBindResponse

// optional int32 bind_status = 1;
inline void ThirdPartyBindResponse::clear_bind_status() {
  bind_status_ = 0;
}
inline ::google::protobuf::int32 ThirdPartyBindResponse::bind_status() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindResponse.bind_status)
  return bind_status_;
}
inline void ThirdPartyBindResponse::set_bind_status(::google::protobuf::int32 value) {
  
  bind_status_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindResponse.bind_status)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool ThirdPartyBindResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void ThirdPartyBindResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& ThirdPartyBindResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* ThirdPartyBindResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* ThirdPartyBindResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void ThirdPartyBindResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindResponse.error)
}

inline const ThirdPartyBindResponse* ThirdPartyBindResponse::internal_default_instance() {
  return &ThirdPartyBindResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// BindExistAccountRequest

// optional string uid = 1;
inline void BindExistAccountRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindExistAccountRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.uid)
}
inline void BindExistAccountRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.uid)
}
inline void BindExistAccountRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.uid)
}
inline ::std::string* BindExistAccountRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindExistAccountRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.uid)
}

// optional string user_name = 2;
inline void BindExistAccountRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindExistAccountRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.user_name)
}
inline void BindExistAccountRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.user_name)
}
inline void BindExistAccountRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.user_name)
}
inline ::std::string* BindExistAccountRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindExistAccountRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.user_name)
}

// optional string password = 3;
inline void BindExistAccountRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindExistAccountRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.password)
}
inline void BindExistAccountRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.password)
}
inline void BindExistAccountRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.password)
}
inline ::std::string* BindExistAccountRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindExistAccountRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.password)
}

// optional string device_id = 4;
inline void BindExistAccountRequest::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindExistAccountRequest::device_id() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.device_id)
}
inline void BindExistAccountRequest::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.device_id)
}
inline void BindExistAccountRequest::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.device_id)
}
inline ::std::string* BindExistAccountRequest::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindExistAccountRequest::release_device_id() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindExistAccountRequest::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.device_id)
}

// optional .personal.LoginDeviceType device_type = 5;
inline void BindExistAccountRequest::clear_device_type() {
  device_type_ = 0;
}
inline ::personal::LoginDeviceType BindExistAccountRequest::device_type() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.device_type)
  return static_cast< ::personal::LoginDeviceType >(device_type_);
}
inline void BindExistAccountRequest::set_device_type(::personal::LoginDeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.device_type)
}

// optional .personal.ThirdPartyType third_party_type = 6;
inline void BindExistAccountRequest::clear_third_party_type() {
  third_party_type_ = 0;
}
inline ::personal::ThirdPartyType BindExistAccountRequest::third_party_type() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.third_party_type)
  return static_cast< ::personal::ThirdPartyType >(third_party_type_);
}
inline void BindExistAccountRequest::set_third_party_type(::personal::ThirdPartyType value) {
  
  third_party_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.third_party_type)
}

inline const BindExistAccountRequest* BindExistAccountRequest::internal_default_instance() {
  return &BindExistAccountRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// BindNewRegistRequest

// optional string user_name = 1;
inline void BindNewRegistRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindNewRegistRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.user_name)
}
inline void BindNewRegistRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.user_name)
}
inline void BindNewRegistRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.user_name)
}
inline ::std::string* BindNewRegistRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindNewRegistRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.user_name)
}

// optional string email = 2;
inline void BindNewRegistRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindNewRegistRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.email)
}
inline void BindNewRegistRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.email)
}
inline void BindNewRegistRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.email)
}
inline ::std::string* BindNewRegistRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindNewRegistRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.email)
}

// optional string password = 3;
inline void BindNewRegistRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BindNewRegistRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.password)
}
inline void BindNewRegistRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.password)
}
inline void BindNewRegistRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.password)
}
inline ::std::string* BindNewRegistRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BindNewRegistRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BindNewRegistRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.password)
}

// optional .personal.ThirdPartyType third_party_type = 4;
inline void BindNewRegistRequest::clear_third_party_type() {
  third_party_type_ = 0;
}
inline ::personal::ThirdPartyType BindNewRegistRequest::third_party_type() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.third_party_type)
  return static_cast< ::personal::ThirdPartyType >(third_party_type_);
}
inline void BindNewRegistRequest::set_third_party_type(::personal::ThirdPartyType value) {
  
  third_party_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.third_party_type)
}

inline const BindNewRegistRequest* BindNewRegistRequest::internal_default_instance() {
  return &BindNewRegistRequest_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::personal::ThirdPartyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::personal::ThirdPartyType>() {
  return ::personal::ThirdPartyType_descriptor();
}
template <> struct is_proto_enum< ::personal::LoginDeviceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::personal::LoginDeviceType>() {
  return ::personal::LoginDeviceType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personalCenter_2fmsg_5flogin_2eproto__INCLUDED
