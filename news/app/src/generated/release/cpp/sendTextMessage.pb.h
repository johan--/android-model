// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sendTextMessage.proto

#ifndef PROTOBUF_sendTextMessage_2eproto__INCLUDED
#define PROTOBUF_sendTextMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_sendTextMessage_2eproto();
void protobuf_InitDefaults_sendTextMessage_2eproto();
void protobuf_AssignDesc_sendTextMessage_2eproto();
void protobuf_ShutdownFile_sendTextMessage_2eproto();

class SendTextMessageRequest;
class SendTextMessageResponse;

// ===================================================================

class SendTextMessageRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendTextMessageRequest) */ {
 public:
  SendTextMessageRequest();
  virtual ~SendTextMessageRequest();

  SendTextMessageRequest(const SendTextMessageRequest& from);

  inline SendTextMessageRequest& operator=(const SendTextMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTextMessageRequest& default_instance();

  static const SendTextMessageRequest* internal_default_instance();

  void Swap(SendTextMessageRequest* other);

  // implements Message ----------------------------------------------

  inline SendTextMessageRequest* New() const { return New(NULL); }

  SendTextMessageRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendTextMessageRequest& from);
  void MergeFrom(const SendTextMessageRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendTextMessageRequest* other);
  void UnsafeMergeFrom(const SendTextMessageRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string app_key = 1;
  void clear_app_key();
  static const int kAppKeyFieldNumber = 1;
  const ::std::string& app_key() const;
  void set_app_key(const ::std::string& value);
  void set_app_key(const char* value);
  void set_app_key(const char* value, size_t size);
  ::std::string* mutable_app_key();
  ::std::string* release_app_key();
  void set_allocated_app_key(::std::string* app_key);

  // optional string master_secret = 2;
  void clear_master_secret();
  static const int kMasterSecretFieldNumber = 2;
  const ::std::string& master_secret() const;
  void set_master_secret(const ::std::string& value);
  void set_master_secret(const char* value);
  void set_master_secret(const char* value, size_t size);
  ::std::string* mutable_master_secret();
  ::std::string* release_master_secret();
  void set_allocated_master_secret(::std::string* master_secret);

  // optional string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string alert = 4;
  void clear_alert();
  static const int kAlertFieldNumber = 4;
  const ::std::string& alert() const;
  void set_alert(const ::std::string& value);
  void set_alert(const char* value);
  void set_alert(const char* value, size_t size);
  ::std::string* mutable_alert();
  ::std::string* release_alert();
  void set_allocated_alert(::std::string* alert);

  // optional string text = 5;
  void clear_text();
  static const int kTextFieldNumber = 5;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional string target_type = 6;
  void clear_target_type();
  static const int kTargetTypeFieldNumber = 6;
  const ::std::string& target_type() const;
  void set_target_type(const ::std::string& value);
  void set_target_type(const char* value);
  void set_target_type(const char* value, size_t size);
  ::std::string* mutable_target_type();
  ::std::string* release_target_type();
  void set_allocated_target_type(::std::string* target_type);

  // optional string target_id = 7;
  void clear_target_id();
  static const int kTargetIdFieldNumber = 7;
  const ::std::string& target_id() const;
  void set_target_id(const ::std::string& value);
  void set_target_id(const char* value);
  void set_target_id(const char* value, size_t size);
  ::std::string* mutable_target_id();
  ::std::string* release_target_id();
  void set_allocated_target_id(::std::string* target_id);

  // optional string from_type = 8;
  void clear_from_type();
  static const int kFromTypeFieldNumber = 8;
  const ::std::string& from_type() const;
  void set_from_type(const ::std::string& value);
  void set_from_type(const char* value);
  void set_from_type(const char* value, size_t size);
  ::std::string* mutable_from_type();
  ::std::string* release_from_type();
  void set_allocated_from_type(::std::string* from_type);

  // optional string from_id = 9;
  void clear_from_id();
  static const int kFromIdFieldNumber = 9;
  const ::std::string& from_id() const;
  void set_from_id(const ::std::string& value);
  void set_from_id(const char* value);
  void set_from_id(const char* value, size_t size);
  ::std::string* mutable_from_id();
  ::std::string* release_from_id();
  void set_allocated_from_id(::std::string* from_id);

  // optional bool no_notification = 10;
  void clear_no_notification();
  static const int kNoNotificationFieldNumber = 10;
  bool no_notification() const;
  void set_no_notification(bool value);

  // @@protoc_insertion_point(class_scope:SendTextMessageRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr app_key_;
  ::google::protobuf::internal::ArenaStringPtr master_secret_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr alert_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::internal::ArenaStringPtr target_type_;
  ::google::protobuf::internal::ArenaStringPtr target_id_;
  ::google::protobuf::internal::ArenaStringPtr from_type_;
  ::google::protobuf::internal::ArenaStringPtr from_id_;
  bool no_notification_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_sendTextMessage_2eproto_impl();
  friend void  protobuf_AddDesc_sendTextMessage_2eproto_impl();
  friend void protobuf_AssignDesc_sendTextMessage_2eproto();
  friend void protobuf_ShutdownFile_sendTextMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendTextMessageRequest> SendTextMessageRequest_default_instance_;

// -------------------------------------------------------------------

class SendTextMessageResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendTextMessageResponse) */ {
 public:
  SendTextMessageResponse();
  virtual ~SendTextMessageResponse();

  SendTextMessageResponse(const SendTextMessageResponse& from);

  inline SendTextMessageResponse& operator=(const SendTextMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendTextMessageResponse& default_instance();

  static const SendTextMessageResponse* internal_default_instance();

  void Swap(SendTextMessageResponse* other);

  // implements Message ----------------------------------------------

  inline SendTextMessageResponse* New() const { return New(NULL); }

  SendTextMessageResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SendTextMessageResponse& from);
  void MergeFrom(const SendTextMessageResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SendTextMessageResponse* other);
  void UnsafeMergeFrom(const SendTextMessageResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message_id = 1;
  void clear_message_id();
  static const int kMessageIdFieldNumber = 1;
  const ::std::string& message_id() const;
  void set_message_id(const ::std::string& value);
  void set_message_id(const char* value);
  void set_message_id(const char* value, size_t size);
  ::std::string* mutable_message_id();
  ::std::string* release_message_id();
  void set_allocated_message_id(::std::string* message_id);

  // optional int64 code = 2;
  void clear_code();
  static const int kCodeFieldNumber = 2;
  ::google::protobuf::int64 code() const;
  void set_code(::google::protobuf::int64 value);

  // optional string msg = 3;
  void clear_msg();
  static const int kMsgFieldNumber = 3;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:SendTextMessageResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr message_id_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  ::google::protobuf::int64 code_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_sendTextMessage_2eproto_impl();
  friend void  protobuf_AddDesc_sendTextMessage_2eproto_impl();
  friend void protobuf_AssignDesc_sendTextMessage_2eproto();
  friend void protobuf_ShutdownFile_sendTextMessage_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SendTextMessageResponse> SendTextMessageResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SendTextMessageRequest

// optional string app_key = 1;
inline void SendTextMessageRequest::clear_app_key() {
  app_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::app_key() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.app_key)
  return app_key_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_app_key(const ::std::string& value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.app_key)
}
inline void SendTextMessageRequest::set_app_key(const char* value) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.app_key)
}
inline void SendTextMessageRequest::set_app_key(const char* value, size_t size) {
  
  app_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.app_key)
}
inline ::std::string* SendTextMessageRequest::mutable_app_key() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.app_key)
  return app_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_app_key() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.app_key)
  
  return app_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_app_key(::std::string* app_key) {
  if (app_key != NULL) {
    
  } else {
    
  }
  app_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_key);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.app_key)
}

// optional string master_secret = 2;
inline void SendTextMessageRequest::clear_master_secret() {
  master_secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::master_secret() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.master_secret)
  return master_secret_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_master_secret(const ::std::string& value) {
  
  master_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.master_secret)
}
inline void SendTextMessageRequest::set_master_secret(const char* value) {
  
  master_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.master_secret)
}
inline void SendTextMessageRequest::set_master_secret(const char* value, size_t size) {
  
  master_secret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.master_secret)
}
inline ::std::string* SendTextMessageRequest::mutable_master_secret() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.master_secret)
  return master_secret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_master_secret() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.master_secret)
  
  return master_secret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_master_secret(::std::string* master_secret) {
  if (master_secret != NULL) {
    
  } else {
    
  }
  master_secret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), master_secret);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.master_secret)
}

// optional string title = 3;
inline void SendTextMessageRequest::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::title() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.title)
}
inline void SendTextMessageRequest::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.title)
}
inline void SendTextMessageRequest::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.title)
}
inline ::std::string* SendTextMessageRequest::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_title() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.title)
}

// optional string alert = 4;
inline void SendTextMessageRequest::clear_alert() {
  alert_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::alert() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.alert)
  return alert_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_alert(const ::std::string& value) {
  
  alert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.alert)
}
inline void SendTextMessageRequest::set_alert(const char* value) {
  
  alert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.alert)
}
inline void SendTextMessageRequest::set_alert(const char* value, size_t size) {
  
  alert_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.alert)
}
inline ::std::string* SendTextMessageRequest::mutable_alert() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.alert)
  return alert_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_alert() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.alert)
  
  return alert_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_alert(::std::string* alert) {
  if (alert != NULL) {
    
  } else {
    
  }
  alert_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), alert);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.alert)
}

// optional string text = 5;
inline void SendTextMessageRequest::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::text() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.text)
  return text_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.text)
}
inline void SendTextMessageRequest::set_text(const char* value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.text)
}
inline void SendTextMessageRequest::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.text)
}
inline ::std::string* SendTextMessageRequest::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_text() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.text)
}

// optional string target_type = 6;
inline void SendTextMessageRequest::clear_target_type() {
  target_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::target_type() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.target_type)
  return target_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_target_type(const ::std::string& value) {
  
  target_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.target_type)
}
inline void SendTextMessageRequest::set_target_type(const char* value) {
  
  target_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.target_type)
}
inline void SendTextMessageRequest::set_target_type(const char* value, size_t size) {
  
  target_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.target_type)
}
inline ::std::string* SendTextMessageRequest::mutable_target_type() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.target_type)
  return target_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_target_type() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.target_type)
  
  return target_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_target_type(::std::string* target_type) {
  if (target_type != NULL) {
    
  } else {
    
  }
  target_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_type);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.target_type)
}

// optional string target_id = 7;
inline void SendTextMessageRequest::clear_target_id() {
  target_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::target_id() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.target_id)
  return target_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_target_id(const ::std::string& value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.target_id)
}
inline void SendTextMessageRequest::set_target_id(const char* value) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.target_id)
}
inline void SendTextMessageRequest::set_target_id(const char* value, size_t size) {
  
  target_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.target_id)
}
inline ::std::string* SendTextMessageRequest::mutable_target_id() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.target_id)
  return target_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_target_id() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.target_id)
  
  return target_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_target_id(::std::string* target_id) {
  if (target_id != NULL) {
    
  } else {
    
  }
  target_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_id);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.target_id)
}

// optional string from_type = 8;
inline void SendTextMessageRequest::clear_from_type() {
  from_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::from_type() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.from_type)
  return from_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_from_type(const ::std::string& value) {
  
  from_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.from_type)
}
inline void SendTextMessageRequest::set_from_type(const char* value) {
  
  from_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.from_type)
}
inline void SendTextMessageRequest::set_from_type(const char* value, size_t size) {
  
  from_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.from_type)
}
inline ::std::string* SendTextMessageRequest::mutable_from_type() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.from_type)
  return from_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_from_type() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.from_type)
  
  return from_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_from_type(::std::string* from_type) {
  if (from_type != NULL) {
    
  } else {
    
  }
  from_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_type);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.from_type)
}

// optional string from_id = 9;
inline void SendTextMessageRequest::clear_from_id() {
  from_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageRequest::from_id() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.from_id)
  return from_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_from_id(const ::std::string& value) {
  
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.from_id)
}
inline void SendTextMessageRequest::set_from_id(const char* value) {
  
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageRequest.from_id)
}
inline void SendTextMessageRequest::set_from_id(const char* value, size_t size) {
  
  from_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageRequest.from_id)
}
inline ::std::string* SendTextMessageRequest::mutable_from_id() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageRequest.from_id)
  return from_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageRequest::release_from_id() {
  // @@protoc_insertion_point(field_release:SendTextMessageRequest.from_id)
  
  return from_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageRequest::set_allocated_from_id(::std::string* from_id) {
  if (from_id != NULL) {
    
  } else {
    
  }
  from_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from_id);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageRequest.from_id)
}

// optional bool no_notification = 10;
inline void SendTextMessageRequest::clear_no_notification() {
  no_notification_ = false;
}
inline bool SendTextMessageRequest::no_notification() const {
  // @@protoc_insertion_point(field_get:SendTextMessageRequest.no_notification)
  return no_notification_;
}
inline void SendTextMessageRequest::set_no_notification(bool value) {
  
  no_notification_ = value;
  // @@protoc_insertion_point(field_set:SendTextMessageRequest.no_notification)
}

inline const SendTextMessageRequest* SendTextMessageRequest::internal_default_instance() {
  return &SendTextMessageRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SendTextMessageResponse

// optional string message_id = 1;
inline void SendTextMessageResponse::clear_message_id() {
  message_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageResponse::message_id() const {
  // @@protoc_insertion_point(field_get:SendTextMessageResponse.message_id)
  return message_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageResponse::set_message_id(const ::std::string& value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageResponse.message_id)
}
inline void SendTextMessageResponse::set_message_id(const char* value) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageResponse.message_id)
}
inline void SendTextMessageResponse::set_message_id(const char* value, size_t size) {
  
  message_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageResponse.message_id)
}
inline ::std::string* SendTextMessageResponse::mutable_message_id() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageResponse.message_id)
  return message_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageResponse::release_message_id() {
  // @@protoc_insertion_point(field_release:SendTextMessageResponse.message_id)
  
  return message_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageResponse::set_allocated_message_id(::std::string* message_id) {
  if (message_id != NULL) {
    
  } else {
    
  }
  message_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_id);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageResponse.message_id)
}

// optional int64 code = 2;
inline void SendTextMessageResponse::clear_code() {
  code_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 SendTextMessageResponse::code() const {
  // @@protoc_insertion_point(field_get:SendTextMessageResponse.code)
  return code_;
}
inline void SendTextMessageResponse::set_code(::google::protobuf::int64 value) {
  
  code_ = value;
  // @@protoc_insertion_point(field_set:SendTextMessageResponse.code)
}

// optional string msg = 3;
inline void SendTextMessageResponse::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SendTextMessageResponse::msg() const {
  // @@protoc_insertion_point(field_get:SendTextMessageResponse.msg)
  return msg_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageResponse::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendTextMessageResponse.msg)
}
inline void SendTextMessageResponse::set_msg(const char* value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendTextMessageResponse.msg)
}
inline void SendTextMessageResponse::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendTextMessageResponse.msg)
}
inline ::std::string* SendTextMessageResponse::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:SendTextMessageResponse.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendTextMessageResponse::release_msg() {
  // @@protoc_insertion_point(field_release:SendTextMessageResponse.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendTextMessageResponse::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:SendTextMessageResponse.msg)
}

inline const SendTextMessageResponse* SendTextMessageResponse::internal_default_instance() {
  return &SendTextMessageResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_sendTextMessage_2eproto__INCLUDED
