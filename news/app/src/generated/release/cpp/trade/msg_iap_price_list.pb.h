// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade/msg_iap_price_list.proto

#ifndef PROTOBUF_trade_2fmsg_5fiap_5fprice_5flist_2eproto__INCLUDED
#define PROTOBUF_trade_2fmsg_5fiap_5fprice_5flist_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace trade {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
void protobuf_InitDefaults_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
void protobuf_AssignDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
void protobuf_ShutdownFile_trade_2fmsg_5fiap_5fprice_5flist_2eproto();

class IAPPrice;
class IAPPriceListRequest;
class IAPPriceListResponse;

// ===================================================================

class IAPPriceListRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trade.IAPPriceListRequest) */ {
 public:
  IAPPriceListRequest();
  virtual ~IAPPriceListRequest();

  IAPPriceListRequest(const IAPPriceListRequest& from);

  inline IAPPriceListRequest& operator=(const IAPPriceListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IAPPriceListRequest& default_instance();

  static const IAPPriceListRequest* internal_default_instance();

  void Swap(IAPPriceListRequest* other);

  // implements Message ----------------------------------------------

  inline IAPPriceListRequest* New() const { return New(NULL); }

  IAPPriceListRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IAPPriceListRequest& from);
  void MergeFrom(const IAPPriceListRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IAPPriceListRequest* other);
  void UnsafeMergeFrom(const IAPPriceListRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:trade.IAPPriceListRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void  protobuf_AddDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void protobuf_AssignDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
  friend void protobuf_ShutdownFile_trade_2fmsg_5fiap_5fprice_5flist_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IAPPriceListRequest> IAPPriceListRequest_default_instance_;

// -------------------------------------------------------------------

class IAPPriceListResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trade.IAPPriceListResponse) */ {
 public:
  IAPPriceListResponse();
  virtual ~IAPPriceListResponse();

  IAPPriceListResponse(const IAPPriceListResponse& from);

  inline IAPPriceListResponse& operator=(const IAPPriceListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IAPPriceListResponse& default_instance();

  static const IAPPriceListResponse* internal_default_instance();

  void Swap(IAPPriceListResponse* other);

  // implements Message ----------------------------------------------

  inline IAPPriceListResponse* New() const { return New(NULL); }

  IAPPriceListResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IAPPriceListResponse& from);
  void MergeFrom(const IAPPriceListResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IAPPriceListResponse* other);
  void UnsafeMergeFrom(const IAPPriceListResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .trade.IAPPrice iap_price = 1;
  int iap_price_size() const;
  void clear_iap_price();
  static const int kIapPriceFieldNumber = 1;
  const ::trade::IAPPrice& iap_price(int index) const;
  ::trade::IAPPrice* mutable_iap_price(int index);
  ::trade::IAPPrice* add_iap_price();
  ::google::protobuf::RepeatedPtrField< ::trade::IAPPrice >*
      mutable_iap_price();
  const ::google::protobuf::RepeatedPtrField< ::trade::IAPPrice >&
      iap_price() const;

  // @@protoc_insertion_point(class_scope:trade.IAPPriceListResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::trade::IAPPrice > iap_price_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void  protobuf_AddDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void protobuf_AssignDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
  friend void protobuf_ShutdownFile_trade_2fmsg_5fiap_5fprice_5flist_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IAPPriceListResponse> IAPPriceListResponse_default_instance_;

// -------------------------------------------------------------------

class IAPPrice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:trade.IAPPrice) */ {
 public:
  IAPPrice();
  virtual ~IAPPrice();

  IAPPrice(const IAPPrice& from);

  inline IAPPrice& operator=(const IAPPrice& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IAPPrice& default_instance();

  static const IAPPrice* internal_default_instance();

  void Swap(IAPPrice* other);

  // implements Message ----------------------------------------------

  inline IAPPrice* New() const { return New(NULL); }

  IAPPrice* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IAPPrice& from);
  void MergeFrom(const IAPPrice& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(IAPPrice* other);
  void UnsafeMergeFrom(const IAPPrice& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string price = 1;
  void clear_price();
  static const int kPriceFieldNumber = 1;
  const ::std::string& price() const;
  void set_price(const ::std::string& value);
  void set_price(const char* value);
  void set_price(const char* value, size_t size);
  ::std::string* mutable_price();
  ::std::string* release_price();
  void set_allocated_price(::std::string* price);

  // optional string virtual_price = 2;
  void clear_virtual_price();
  static const int kVirtualPriceFieldNumber = 2;
  const ::std::string& virtual_price() const;
  void set_virtual_price(const ::std::string& value);
  void set_virtual_price(const char* value);
  void set_virtual_price(const char* value, size_t size);
  ::std::string* mutable_virtual_price();
  ::std::string* release_virtual_price();
  void set_allocated_virtual_price(::std::string* virtual_price);

  // optional string product_id = 3;
  void clear_product_id();
  static const int kProductIdFieldNumber = 3;
  const ::std::string& product_id() const;
  void set_product_id(const ::std::string& value);
  void set_product_id(const char* value);
  void set_product_id(const char* value, size_t size);
  ::std::string* mutable_product_id();
  ::std::string* release_product_id();
  void set_allocated_product_id(::std::string* product_id);

  // @@protoc_insertion_point(class_scope:trade.IAPPrice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr price_;
  ::google::protobuf::internal::ArenaStringPtr virtual_price_;
  ::google::protobuf::internal::ArenaStringPtr product_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void  protobuf_AddDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto_impl();
  friend void protobuf_AssignDesc_trade_2fmsg_5fiap_5fprice_5flist_2eproto();
  friend void protobuf_ShutdownFile_trade_2fmsg_5fiap_5fprice_5flist_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<IAPPrice> IAPPrice_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// IAPPriceListRequest

// optional string user_id = 1;
inline void IAPPriceListRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IAPPriceListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:trade.IAPPriceListRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPriceListRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPPriceListRequest.user_id)
}
inline void IAPPriceListRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPPriceListRequest.user_id)
}
inline void IAPPriceListRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPPriceListRequest.user_id)
}
inline ::std::string* IAPPriceListRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPPriceListRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IAPPriceListRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:trade.IAPPriceListRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPriceListRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPPriceListRequest.user_id)
}

inline const IAPPriceListRequest* IAPPriceListRequest::internal_default_instance() {
  return &IAPPriceListRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// IAPPriceListResponse

// repeated .trade.IAPPrice iap_price = 1;
inline int IAPPriceListResponse::iap_price_size() const {
  return iap_price_.size();
}
inline void IAPPriceListResponse::clear_iap_price() {
  iap_price_.Clear();
}
inline const ::trade::IAPPrice& IAPPriceListResponse::iap_price(int index) const {
  // @@protoc_insertion_point(field_get:trade.IAPPriceListResponse.iap_price)
  return iap_price_.Get(index);
}
inline ::trade::IAPPrice* IAPPriceListResponse::mutable_iap_price(int index) {
  // @@protoc_insertion_point(field_mutable:trade.IAPPriceListResponse.iap_price)
  return iap_price_.Mutable(index);
}
inline ::trade::IAPPrice* IAPPriceListResponse::add_iap_price() {
  // @@protoc_insertion_point(field_add:trade.IAPPriceListResponse.iap_price)
  return iap_price_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::trade::IAPPrice >*
IAPPriceListResponse::mutable_iap_price() {
  // @@protoc_insertion_point(field_mutable_list:trade.IAPPriceListResponse.iap_price)
  return &iap_price_;
}
inline const ::google::protobuf::RepeatedPtrField< ::trade::IAPPrice >&
IAPPriceListResponse::iap_price() const {
  // @@protoc_insertion_point(field_list:trade.IAPPriceListResponse.iap_price)
  return iap_price_;
}

inline const IAPPriceListResponse* IAPPriceListResponse::internal_default_instance() {
  return &IAPPriceListResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// IAPPrice

// optional string price = 1;
inline void IAPPrice::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IAPPrice::price() const {
  // @@protoc_insertion_point(field_get:trade.IAPPrice.price)
  return price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_price(const ::std::string& value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPPrice.price)
}
inline void IAPPrice::set_price(const char* value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPPrice.price)
}
inline void IAPPrice::set_price(const char* value, size_t size) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPPrice.price)
}
inline ::std::string* IAPPrice::mutable_price() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPPrice.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IAPPrice::release_price() {
  // @@protoc_insertion_point(field_release:trade.IAPPrice.price)
  
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    
  } else {
    
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPPrice.price)
}

// optional string virtual_price = 2;
inline void IAPPrice::clear_virtual_price() {
  virtual_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IAPPrice::virtual_price() const {
  // @@protoc_insertion_point(field_get:trade.IAPPrice.virtual_price)
  return virtual_price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_virtual_price(const ::std::string& value) {
  
  virtual_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPPrice.virtual_price)
}
inline void IAPPrice::set_virtual_price(const char* value) {
  
  virtual_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPPrice.virtual_price)
}
inline void IAPPrice::set_virtual_price(const char* value, size_t size) {
  
  virtual_price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPPrice.virtual_price)
}
inline ::std::string* IAPPrice::mutable_virtual_price() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPPrice.virtual_price)
  return virtual_price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IAPPrice::release_virtual_price() {
  // @@protoc_insertion_point(field_release:trade.IAPPrice.virtual_price)
  
  return virtual_price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_allocated_virtual_price(::std::string* virtual_price) {
  if (virtual_price != NULL) {
    
  } else {
    
  }
  virtual_price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), virtual_price);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPPrice.virtual_price)
}

// optional string product_id = 3;
inline void IAPPrice::clear_product_id() {
  product_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IAPPrice::product_id() const {
  // @@protoc_insertion_point(field_get:trade.IAPPrice.product_id)
  return product_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_product_id(const ::std::string& value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPPrice.product_id)
}
inline void IAPPrice::set_product_id(const char* value) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPPrice.product_id)
}
inline void IAPPrice::set_product_id(const char* value, size_t size) {
  
  product_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPPrice.product_id)
}
inline ::std::string* IAPPrice::mutable_product_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPPrice.product_id)
  return product_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IAPPrice::release_product_id() {
  // @@protoc_insertion_point(field_release:trade.IAPPrice.product_id)
  
  return product_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IAPPrice::set_allocated_product_id(::std::string* product_id) {
  if (product_id != NULL) {
    
  } else {
    
  }
  product_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product_id);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPPrice.product_id)
}

inline const IAPPrice* IAPPrice::internal_default_instance() {
  return &IAPPrice_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace trade

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_trade_2fmsg_5fiap_5fprice_5flist_2eproto__INCLUDED
