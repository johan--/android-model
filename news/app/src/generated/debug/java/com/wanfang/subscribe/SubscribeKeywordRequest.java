// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscribe/msg_subscribe_keyword.proto

package com.wanfang.subscribe;

/**
 * <pre>
 * 订阅关键词
 * </pre>
 *
 * Protobuf type {@code subscribe.SubscribeKeywordRequest}
 */
public  final class SubscribeKeywordRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:subscribe.SubscribeKeywordRequest)
    SubscribeKeywordRequestOrBuilder {
  // Use SubscribeKeywordRequest.newBuilder() to construct.
  private SubscribeKeywordRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private SubscribeKeywordRequest() {
    userId_ = "";
    keyword_ = "";
    docType_ = java.util.Collections.emptyList();
    sourceType_ = java.util.Collections.emptyList();
    email_ = "";
    shouldUpdateEmail_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private SubscribeKeywordRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            userId_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            keyword_ = s;
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              docType_ = new java.util.ArrayList<com.wanfang.subscribe.DocType>();
              mutable_bitField0_ |= 0x00000004;
            }
            docType_.add(
                input.readMessage(com.wanfang.subscribe.DocType.parser(), extensionRegistry));
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              sourceType_ = new java.util.ArrayList<com.wanfang.subscribe.SourceType>();
              mutable_bitField0_ |= 0x00000008;
            }
            sourceType_.add(
                input.readMessage(com.wanfang.subscribe.SourceType.parser(), extensionRegistry));
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();

            email_ = s;
            break;
          }
          case 48: {

            shouldUpdateEmail_ = input.readBool();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        docType_ = java.util.Collections.unmodifiableList(docType_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        sourceType_ = java.util.Collections.unmodifiableList(sourceType_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.wanfang.subscribe.MsgSubscribeKeyword.internal_static_subscribe_SubscribeKeywordRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.wanfang.subscribe.MsgSubscribeKeyword.internal_static_subscribe_SubscribeKeywordRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.wanfang.subscribe.SubscribeKeywordRequest.class, com.wanfang.subscribe.SubscribeKeywordRequest.Builder.class);
  }

  private int bitField0_;
  public static final int USER_ID_FIELD_NUMBER = 1;
  private volatile java.lang.Object userId_;
  /**
   * <code>optional string user_id = 1;</code>
   */
  public java.lang.String getUserId() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      userId_ = s;
      return s;
    }
  }
  /**
   * <code>optional string user_id = 1;</code>
   */
  public com.google.protobuf.ByteString
      getUserIdBytes() {
    java.lang.Object ref = userId_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      userId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int KEYWORD_FIELD_NUMBER = 2;
  private volatile java.lang.Object keyword_;
  /**
   * <pre>
   * 要订阅的关键词
   * </pre>
   *
   * <code>optional string keyword = 2;</code>
   */
  public java.lang.String getKeyword() {
    java.lang.Object ref = keyword_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      keyword_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 要订阅的关键词
   * </pre>
   *
   * <code>optional string keyword = 2;</code>
   */
  public com.google.protobuf.ByteString
      getKeywordBytes() {
    java.lang.Object ref = keyword_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      keyword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DOC_TYPE_FIELD_NUMBER = 3;
  private java.util.List<com.wanfang.subscribe.DocType> docType_;
  /**
   * <pre>
   * 订阅关键词选取的文献类型
   * </pre>
   *
   * <code>repeated .subscribe.DocType doc_type = 3;</code>
   */
  public java.util.List<com.wanfang.subscribe.DocType> getDocTypeList() {
    return docType_;
  }
  /**
   * <pre>
   * 订阅关键词选取的文献类型
   * </pre>
   *
   * <code>repeated .subscribe.DocType doc_type = 3;</code>
   */
  public java.util.List<? extends com.wanfang.subscribe.DocTypeOrBuilder> 
      getDocTypeOrBuilderList() {
    return docType_;
  }
  /**
   * <pre>
   * 订阅关键词选取的文献类型
   * </pre>
   *
   * <code>repeated .subscribe.DocType doc_type = 3;</code>
   */
  public int getDocTypeCount() {
    return docType_.size();
  }
  /**
   * <pre>
   * 订阅关键词选取的文献类型
   * </pre>
   *
   * <code>repeated .subscribe.DocType doc_type = 3;</code>
   */
  public com.wanfang.subscribe.DocType getDocType(int index) {
    return docType_.get(index);
  }
  /**
   * <pre>
   * 订阅关键词选取的文献类型
   * </pre>
   *
   * <code>repeated .subscribe.DocType doc_type = 3;</code>
   */
  public com.wanfang.subscribe.DocTypeOrBuilder getDocTypeOrBuilder(
      int index) {
    return docType_.get(index);
  }

  public static final int SOURCE_TYPE_FIELD_NUMBER = 4;
  private java.util.List<com.wanfang.subscribe.SourceType> sourceType_;
  /**
   * <pre>
   * 订阅关键词选取的来源类别
   * </pre>
   *
   * <code>repeated .subscribe.SourceType source_type = 4;</code>
   */
  public java.util.List<com.wanfang.subscribe.SourceType> getSourceTypeList() {
    return sourceType_;
  }
  /**
   * <pre>
   * 订阅关键词选取的来源类别
   * </pre>
   *
   * <code>repeated .subscribe.SourceType source_type = 4;</code>
   */
  public java.util.List<? extends com.wanfang.subscribe.SourceTypeOrBuilder> 
      getSourceTypeOrBuilderList() {
    return sourceType_;
  }
  /**
   * <pre>
   * 订阅关键词选取的来源类别
   * </pre>
   *
   * <code>repeated .subscribe.SourceType source_type = 4;</code>
   */
  public int getSourceTypeCount() {
    return sourceType_.size();
  }
  /**
   * <pre>
   * 订阅关键词选取的来源类别
   * </pre>
   *
   * <code>repeated .subscribe.SourceType source_type = 4;</code>
   */
  public com.wanfang.subscribe.SourceType getSourceType(int index) {
    return sourceType_.get(index);
  }
  /**
   * <pre>
   * 订阅关键词选取的来源类别
   * </pre>
   *
   * <code>repeated .subscribe.SourceType source_type = 4;</code>
   */
  public com.wanfang.subscribe.SourceTypeOrBuilder getSourceTypeOrBuilder(
      int index) {
    return sourceType_.get(index);
  }

  public static final int EMAIL_FIELD_NUMBER = 5;
  private volatile java.lang.Object email_;
  /**
   * <pre>
   * 邮箱地址 nullable
   * </pre>
   *
   * <code>optional string email = 5;</code>
   */
  public java.lang.String getEmail() {
    java.lang.Object ref = email_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      email_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 邮箱地址 nullable
   * </pre>
   *
   * <code>optional string email = 5;</code>
   */
  public com.google.protobuf.ByteString
      getEmailBytes() {
    java.lang.Object ref = email_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      email_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SHOULD_UPDATE_EMAIL_FIELD_NUMBER = 6;
  private boolean shouldUpdateEmail_;
  /**
   * <code>optional bool should_update_email = 6;</code>
   */
  public boolean getShouldUpdateEmail() {
    return shouldUpdateEmail_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getUserIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, userId_);
    }
    if (!getKeywordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, keyword_);
    }
    for (int i = 0; i < docType_.size(); i++) {
      output.writeMessage(3, docType_.get(i));
    }
    for (int i = 0; i < sourceType_.size(); i++) {
      output.writeMessage(4, sourceType_.get(i));
    }
    if (!getEmailBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, email_);
    }
    if (shouldUpdateEmail_ != false) {
      output.writeBool(6, shouldUpdateEmail_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getUserIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, userId_);
    }
    if (!getKeywordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, keyword_);
    }
    for (int i = 0; i < docType_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, docType_.get(i));
    }
    for (int i = 0; i < sourceType_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, sourceType_.get(i));
    }
    if (!getEmailBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, email_);
    }
    if (shouldUpdateEmail_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, shouldUpdateEmail_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.wanfang.subscribe.SubscribeKeywordRequest)) {
      return super.equals(obj);
    }
    com.wanfang.subscribe.SubscribeKeywordRequest other = (com.wanfang.subscribe.SubscribeKeywordRequest) obj;

    boolean result = true;
    result = result && getUserId()
        .equals(other.getUserId());
    result = result && getKeyword()
        .equals(other.getKeyword());
    result = result && getDocTypeList()
        .equals(other.getDocTypeList());
    result = result && getSourceTypeList()
        .equals(other.getSourceTypeList());
    result = result && getEmail()
        .equals(other.getEmail());
    result = result && (getShouldUpdateEmail()
        == other.getShouldUpdateEmail());
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + USER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getUserId().hashCode();
    hash = (37 * hash) + KEYWORD_FIELD_NUMBER;
    hash = (53 * hash) + getKeyword().hashCode();
    if (getDocTypeCount() > 0) {
      hash = (37 * hash) + DOC_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getDocTypeList().hashCode();
    }
    if (getSourceTypeCount() > 0) {
      hash = (37 * hash) + SOURCE_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getSourceTypeList().hashCode();
    }
    hash = (37 * hash) + EMAIL_FIELD_NUMBER;
    hash = (53 * hash) + getEmail().hashCode();
    hash = (37 * hash) + SHOULD_UPDATE_EMAIL_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getShouldUpdateEmail());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.wanfang.subscribe.SubscribeKeywordRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.wanfang.subscribe.SubscribeKeywordRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 订阅关键词
   * </pre>
   *
   * Protobuf type {@code subscribe.SubscribeKeywordRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:subscribe.SubscribeKeywordRequest)
      com.wanfang.subscribe.SubscribeKeywordRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.wanfang.subscribe.MsgSubscribeKeyword.internal_static_subscribe_SubscribeKeywordRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.wanfang.subscribe.MsgSubscribeKeyword.internal_static_subscribe_SubscribeKeywordRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.wanfang.subscribe.SubscribeKeywordRequest.class, com.wanfang.subscribe.SubscribeKeywordRequest.Builder.class);
    }

    // Construct using com.wanfang.subscribe.SubscribeKeywordRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDocTypeFieldBuilder();
        getSourceTypeFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      userId_ = "";

      keyword_ = "";

      if (docTypeBuilder_ == null) {
        docType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        docTypeBuilder_.clear();
      }
      if (sourceTypeBuilder_ == null) {
        sourceType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        sourceTypeBuilder_.clear();
      }
      email_ = "";

      shouldUpdateEmail_ = false;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.wanfang.subscribe.MsgSubscribeKeyword.internal_static_subscribe_SubscribeKeywordRequest_descriptor;
    }

    public com.wanfang.subscribe.SubscribeKeywordRequest getDefaultInstanceForType() {
      return com.wanfang.subscribe.SubscribeKeywordRequest.getDefaultInstance();
    }

    public com.wanfang.subscribe.SubscribeKeywordRequest build() {
      com.wanfang.subscribe.SubscribeKeywordRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.wanfang.subscribe.SubscribeKeywordRequest buildPartial() {
      com.wanfang.subscribe.SubscribeKeywordRequest result = new com.wanfang.subscribe.SubscribeKeywordRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.userId_ = userId_;
      result.keyword_ = keyword_;
      if (docTypeBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          docType_ = java.util.Collections.unmodifiableList(docType_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.docType_ = docType_;
      } else {
        result.docType_ = docTypeBuilder_.build();
      }
      if (sourceTypeBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          sourceType_ = java.util.Collections.unmodifiableList(sourceType_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.sourceType_ = sourceType_;
      } else {
        result.sourceType_ = sourceTypeBuilder_.build();
      }
      result.email_ = email_;
      result.shouldUpdateEmail_ = shouldUpdateEmail_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.wanfang.subscribe.SubscribeKeywordRequest) {
        return mergeFrom((com.wanfang.subscribe.SubscribeKeywordRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.wanfang.subscribe.SubscribeKeywordRequest other) {
      if (other == com.wanfang.subscribe.SubscribeKeywordRequest.getDefaultInstance()) return this;
      if (!other.getUserId().isEmpty()) {
        userId_ = other.userId_;
        onChanged();
      }
      if (!other.getKeyword().isEmpty()) {
        keyword_ = other.keyword_;
        onChanged();
      }
      if (docTypeBuilder_ == null) {
        if (!other.docType_.isEmpty()) {
          if (docType_.isEmpty()) {
            docType_ = other.docType_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureDocTypeIsMutable();
            docType_.addAll(other.docType_);
          }
          onChanged();
        }
      } else {
        if (!other.docType_.isEmpty()) {
          if (docTypeBuilder_.isEmpty()) {
            docTypeBuilder_.dispose();
            docTypeBuilder_ = null;
            docType_ = other.docType_;
            bitField0_ = (bitField0_ & ~0x00000004);
            docTypeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDocTypeFieldBuilder() : null;
          } else {
            docTypeBuilder_.addAllMessages(other.docType_);
          }
        }
      }
      if (sourceTypeBuilder_ == null) {
        if (!other.sourceType_.isEmpty()) {
          if (sourceType_.isEmpty()) {
            sourceType_ = other.sourceType_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSourceTypeIsMutable();
            sourceType_.addAll(other.sourceType_);
          }
          onChanged();
        }
      } else {
        if (!other.sourceType_.isEmpty()) {
          if (sourceTypeBuilder_.isEmpty()) {
            sourceTypeBuilder_.dispose();
            sourceTypeBuilder_ = null;
            sourceType_ = other.sourceType_;
            bitField0_ = (bitField0_ & ~0x00000008);
            sourceTypeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getSourceTypeFieldBuilder() : null;
          } else {
            sourceTypeBuilder_.addAllMessages(other.sourceType_);
          }
        }
      }
      if (!other.getEmail().isEmpty()) {
        email_ = other.email_;
        onChanged();
      }
      if (other.getShouldUpdateEmail() != false) {
        setShouldUpdateEmail(other.getShouldUpdateEmail());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.wanfang.subscribe.SubscribeKeywordRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.wanfang.subscribe.SubscribeKeywordRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object userId_ = "";
    /**
     * <code>optional string user_id = 1;</code>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        userId_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string user_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string user_id = 1;</code>
     */
    public Builder setUserId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      userId_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string user_id = 1;</code>
     */
    public Builder clearUserId() {
      
      userId_ = getDefaultInstance().getUserId();
      onChanged();
      return this;
    }
    /**
     * <code>optional string user_id = 1;</code>
     */
    public Builder setUserIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      userId_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object keyword_ = "";
    /**
     * <pre>
     * 要订阅的关键词
     * </pre>
     *
     * <code>optional string keyword = 2;</code>
     */
    public java.lang.String getKeyword() {
      java.lang.Object ref = keyword_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        keyword_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 要订阅的关键词
     * </pre>
     *
     * <code>optional string keyword = 2;</code>
     */
    public com.google.protobuf.ByteString
        getKeywordBytes() {
      java.lang.Object ref = keyword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        keyword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 要订阅的关键词
     * </pre>
     *
     * <code>optional string keyword = 2;</code>
     */
    public Builder setKeyword(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      keyword_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 要订阅的关键词
     * </pre>
     *
     * <code>optional string keyword = 2;</code>
     */
    public Builder clearKeyword() {
      
      keyword_ = getDefaultInstance().getKeyword();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 要订阅的关键词
     * </pre>
     *
     * <code>optional string keyword = 2;</code>
     */
    public Builder setKeywordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      keyword_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.wanfang.subscribe.DocType> docType_ =
      java.util.Collections.emptyList();
    private void ensureDocTypeIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        docType_ = new java.util.ArrayList<com.wanfang.subscribe.DocType>(docType_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wanfang.subscribe.DocType, com.wanfang.subscribe.DocType.Builder, com.wanfang.subscribe.DocTypeOrBuilder> docTypeBuilder_;

    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public java.util.List<com.wanfang.subscribe.DocType> getDocTypeList() {
      if (docTypeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(docType_);
      } else {
        return docTypeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public int getDocTypeCount() {
      if (docTypeBuilder_ == null) {
        return docType_.size();
      } else {
        return docTypeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public com.wanfang.subscribe.DocType getDocType(int index) {
      if (docTypeBuilder_ == null) {
        return docType_.get(index);
      } else {
        return docTypeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder setDocType(
        int index, com.wanfang.subscribe.DocType value) {
      if (docTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDocTypeIsMutable();
        docType_.set(index, value);
        onChanged();
      } else {
        docTypeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder setDocType(
        int index, com.wanfang.subscribe.DocType.Builder builderForValue) {
      if (docTypeBuilder_ == null) {
        ensureDocTypeIsMutable();
        docType_.set(index, builderForValue.build());
        onChanged();
      } else {
        docTypeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder addDocType(com.wanfang.subscribe.DocType value) {
      if (docTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDocTypeIsMutable();
        docType_.add(value);
        onChanged();
      } else {
        docTypeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder addDocType(
        int index, com.wanfang.subscribe.DocType value) {
      if (docTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDocTypeIsMutable();
        docType_.add(index, value);
        onChanged();
      } else {
        docTypeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder addDocType(
        com.wanfang.subscribe.DocType.Builder builderForValue) {
      if (docTypeBuilder_ == null) {
        ensureDocTypeIsMutable();
        docType_.add(builderForValue.build());
        onChanged();
      } else {
        docTypeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder addDocType(
        int index, com.wanfang.subscribe.DocType.Builder builderForValue) {
      if (docTypeBuilder_ == null) {
        ensureDocTypeIsMutable();
        docType_.add(index, builderForValue.build());
        onChanged();
      } else {
        docTypeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder addAllDocType(
        java.lang.Iterable<? extends com.wanfang.subscribe.DocType> values) {
      if (docTypeBuilder_ == null) {
        ensureDocTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, docType_);
        onChanged();
      } else {
        docTypeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder clearDocType() {
      if (docTypeBuilder_ == null) {
        docType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        docTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public Builder removeDocType(int index) {
      if (docTypeBuilder_ == null) {
        ensureDocTypeIsMutable();
        docType_.remove(index);
        onChanged();
      } else {
        docTypeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public com.wanfang.subscribe.DocType.Builder getDocTypeBuilder(
        int index) {
      return getDocTypeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public com.wanfang.subscribe.DocTypeOrBuilder getDocTypeOrBuilder(
        int index) {
      if (docTypeBuilder_ == null) {
        return docType_.get(index);  } else {
        return docTypeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public java.util.List<? extends com.wanfang.subscribe.DocTypeOrBuilder> 
         getDocTypeOrBuilderList() {
      if (docTypeBuilder_ != null) {
        return docTypeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(docType_);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public com.wanfang.subscribe.DocType.Builder addDocTypeBuilder() {
      return getDocTypeFieldBuilder().addBuilder(
          com.wanfang.subscribe.DocType.getDefaultInstance());
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public com.wanfang.subscribe.DocType.Builder addDocTypeBuilder(
        int index) {
      return getDocTypeFieldBuilder().addBuilder(
          index, com.wanfang.subscribe.DocType.getDefaultInstance());
    }
    /**
     * <pre>
     * 订阅关键词选取的文献类型
     * </pre>
     *
     * <code>repeated .subscribe.DocType doc_type = 3;</code>
     */
    public java.util.List<com.wanfang.subscribe.DocType.Builder> 
         getDocTypeBuilderList() {
      return getDocTypeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wanfang.subscribe.DocType, com.wanfang.subscribe.DocType.Builder, com.wanfang.subscribe.DocTypeOrBuilder> 
        getDocTypeFieldBuilder() {
      if (docTypeBuilder_ == null) {
        docTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.wanfang.subscribe.DocType, com.wanfang.subscribe.DocType.Builder, com.wanfang.subscribe.DocTypeOrBuilder>(
                docType_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        docType_ = null;
      }
      return docTypeBuilder_;
    }

    private java.util.List<com.wanfang.subscribe.SourceType> sourceType_ =
      java.util.Collections.emptyList();
    private void ensureSourceTypeIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        sourceType_ = new java.util.ArrayList<com.wanfang.subscribe.SourceType>(sourceType_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wanfang.subscribe.SourceType, com.wanfang.subscribe.SourceType.Builder, com.wanfang.subscribe.SourceTypeOrBuilder> sourceTypeBuilder_;

    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public java.util.List<com.wanfang.subscribe.SourceType> getSourceTypeList() {
      if (sourceTypeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(sourceType_);
      } else {
        return sourceTypeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public int getSourceTypeCount() {
      if (sourceTypeBuilder_ == null) {
        return sourceType_.size();
      } else {
        return sourceTypeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public com.wanfang.subscribe.SourceType getSourceType(int index) {
      if (sourceTypeBuilder_ == null) {
        return sourceType_.get(index);
      } else {
        return sourceTypeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder setSourceType(
        int index, com.wanfang.subscribe.SourceType value) {
      if (sourceTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceTypeIsMutable();
        sourceType_.set(index, value);
        onChanged();
      } else {
        sourceTypeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder setSourceType(
        int index, com.wanfang.subscribe.SourceType.Builder builderForValue) {
      if (sourceTypeBuilder_ == null) {
        ensureSourceTypeIsMutable();
        sourceType_.set(index, builderForValue.build());
        onChanged();
      } else {
        sourceTypeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder addSourceType(com.wanfang.subscribe.SourceType value) {
      if (sourceTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceTypeIsMutable();
        sourceType_.add(value);
        onChanged();
      } else {
        sourceTypeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder addSourceType(
        int index, com.wanfang.subscribe.SourceType value) {
      if (sourceTypeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureSourceTypeIsMutable();
        sourceType_.add(index, value);
        onChanged();
      } else {
        sourceTypeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder addSourceType(
        com.wanfang.subscribe.SourceType.Builder builderForValue) {
      if (sourceTypeBuilder_ == null) {
        ensureSourceTypeIsMutable();
        sourceType_.add(builderForValue.build());
        onChanged();
      } else {
        sourceTypeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder addSourceType(
        int index, com.wanfang.subscribe.SourceType.Builder builderForValue) {
      if (sourceTypeBuilder_ == null) {
        ensureSourceTypeIsMutable();
        sourceType_.add(index, builderForValue.build());
        onChanged();
      } else {
        sourceTypeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder addAllSourceType(
        java.lang.Iterable<? extends com.wanfang.subscribe.SourceType> values) {
      if (sourceTypeBuilder_ == null) {
        ensureSourceTypeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, sourceType_);
        onChanged();
      } else {
        sourceTypeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder clearSourceType() {
      if (sourceTypeBuilder_ == null) {
        sourceType_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        sourceTypeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public Builder removeSourceType(int index) {
      if (sourceTypeBuilder_ == null) {
        ensureSourceTypeIsMutable();
        sourceType_.remove(index);
        onChanged();
      } else {
        sourceTypeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public com.wanfang.subscribe.SourceType.Builder getSourceTypeBuilder(
        int index) {
      return getSourceTypeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public com.wanfang.subscribe.SourceTypeOrBuilder getSourceTypeOrBuilder(
        int index) {
      if (sourceTypeBuilder_ == null) {
        return sourceType_.get(index);  } else {
        return sourceTypeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public java.util.List<? extends com.wanfang.subscribe.SourceTypeOrBuilder> 
         getSourceTypeOrBuilderList() {
      if (sourceTypeBuilder_ != null) {
        return sourceTypeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(sourceType_);
      }
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public com.wanfang.subscribe.SourceType.Builder addSourceTypeBuilder() {
      return getSourceTypeFieldBuilder().addBuilder(
          com.wanfang.subscribe.SourceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public com.wanfang.subscribe.SourceType.Builder addSourceTypeBuilder(
        int index) {
      return getSourceTypeFieldBuilder().addBuilder(
          index, com.wanfang.subscribe.SourceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 订阅关键词选取的来源类别
     * </pre>
     *
     * <code>repeated .subscribe.SourceType source_type = 4;</code>
     */
    public java.util.List<com.wanfang.subscribe.SourceType.Builder> 
         getSourceTypeBuilderList() {
      return getSourceTypeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.wanfang.subscribe.SourceType, com.wanfang.subscribe.SourceType.Builder, com.wanfang.subscribe.SourceTypeOrBuilder> 
        getSourceTypeFieldBuilder() {
      if (sourceTypeBuilder_ == null) {
        sourceTypeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.wanfang.subscribe.SourceType, com.wanfang.subscribe.SourceType.Builder, com.wanfang.subscribe.SourceTypeOrBuilder>(
                sourceType_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        sourceType_ = null;
      }
      return sourceTypeBuilder_;
    }

    private java.lang.Object email_ = "";
    /**
     * <pre>
     * 邮箱地址 nullable
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public java.lang.String getEmail() {
      java.lang.Object ref = email_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        email_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 邮箱地址 nullable
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public com.google.protobuf.ByteString
        getEmailBytes() {
      java.lang.Object ref = email_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        email_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 邮箱地址 nullable
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public Builder setEmail(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      email_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 邮箱地址 nullable
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public Builder clearEmail() {
      
      email_ = getDefaultInstance().getEmail();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 邮箱地址 nullable
     * </pre>
     *
     * <code>optional string email = 5;</code>
     */
    public Builder setEmailBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      email_ = value;
      onChanged();
      return this;
    }

    private boolean shouldUpdateEmail_ ;
    /**
     * <code>optional bool should_update_email = 6;</code>
     */
    public boolean getShouldUpdateEmail() {
      return shouldUpdateEmail_;
    }
    /**
     * <code>optional bool should_update_email = 6;</code>
     */
    public Builder setShouldUpdateEmail(boolean value) {
      
      shouldUpdateEmail_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional bool should_update_email = 6;</code>
     */
    public Builder clearShouldUpdateEmail() {
      
      shouldUpdateEmail_ = false;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:subscribe.SubscribeKeywordRequest)
  }

  // @@protoc_insertion_point(class_scope:subscribe.SubscribeKeywordRequest)
  private static final com.wanfang.subscribe.SubscribeKeywordRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.wanfang.subscribe.SubscribeKeywordRequest();
  }

  public static com.wanfang.subscribe.SubscribeKeywordRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<SubscribeKeywordRequest>
      PARSER = new com.google.protobuf.AbstractParser<SubscribeKeywordRequest>() {
    public SubscribeKeywordRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new SubscribeKeywordRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<SubscribeKeywordRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<SubscribeKeywordRequest> getParserForType() {
    return PARSER;
  }

  public com.wanfang.subscribe.SubscribeKeywordRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

