// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all_hot_doc.proto

package com.wanfang.main;

public final class AllHotDoc {
  private AllHotDoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface HotDocRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.HotDocRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string page_number = 1;</code>
     */
    java.lang.String getPageNumber();
    /**
     * <code>optional string page_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getPageNumberBytes();

    /**
     * <code>optional string page_size = 2;</code>
     */
    java.lang.String getPageSize();
    /**
     * <code>optional string page_size = 2;</code>
     */
    com.google.protobuf.ByteString
        getPageSizeBytes();
  }
  /**
   * Protobuf type {@code main.HotDocRequest}
   */
  public  static final class HotDocRequest extends
      com.google.protobuf.GeneratedMessageLite<
          HotDocRequest, HotDocRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:main.HotDocRequest)
      HotDocRequestOrBuilder {
    private HotDocRequest() {
      pageNumber_ = "";
      pageSize_ = "";
    }
    public static final int PAGE_NUMBER_FIELD_NUMBER = 1;
    private java.lang.String pageNumber_;
    /**
     * <code>optional string page_number = 1;</code>
     */
    public java.lang.String getPageNumber() {
      return pageNumber_;
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPageNumberBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageNumber_);
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void setPageNumber(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageNumber_ = value;
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void clearPageNumber() {
      
      pageNumber_ = getDefaultInstance().getPageNumber();
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void setPageNumberBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageNumber_ = value.toStringUtf8();
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private java.lang.String pageSize_;
    /**
     * <code>optional string page_size = 2;</code>
     */
    public java.lang.String getPageSize() {
      return pageSize_;
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPageSizeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageSize_);
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void setPageSize(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageSize_ = value;
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = getDefaultInstance().getPageSize();
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void setPageSizeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageSize_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pageNumber_.isEmpty()) {
        output.writeString(1, getPageNumber());
      }
      if (!pageSize_.isEmpty()) {
        output.writeString(2, getPageSize());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!pageNumber_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPageNumber());
      }
      if (!pageSize_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPageSize());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.AllHotDoc.HotDocRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.HotDocRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.AllHotDoc.HotDocRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.HotDocRequest)
        com.wanfang.main.AllHotDoc.HotDocRequestOrBuilder {
      // Construct using com.wanfang.main.AllHotDoc.HotDocRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string page_number = 1;</code>
       */
      public java.lang.String getPageNumber() {
        return instance.getPageNumber();
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPageNumberBytes() {
        return instance.getPageNumberBytes();
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder setPageNumber(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageNumber(value);
        return this;
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder clearPageNumber() {
        copyOnWrite();
        instance.clearPageNumber();
        return this;
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder setPageNumberBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageNumberBytes(value);
        return this;
      }

      /**
       * <code>optional string page_size = 2;</code>
       */
      public java.lang.String getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPageSizeBytes() {
        return instance.getPageSizeBytes();
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder setPageSize(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder setPageSizeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageSizeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.HotDocRequest)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.AllHotDoc.HotDocRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.AllHotDoc.HotDocRequest other = (com.wanfang.main.AllHotDoc.HotDocRequest) arg1;
          pageNumber_ = visitor.visitString(!pageNumber_.isEmpty(), pageNumber_,
              !other.pageNumber_.isEmpty(), other.pageNumber_);
          pageSize_ = visitor.visitString(!pageSize_.isEmpty(), pageSize_,
              !other.pageSize_.isEmpty(), other.pageSize_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  pageNumber_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  pageSize_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.AllHotDoc.HotDocRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.HotDocRequest)
    private static final com.wanfang.main.AllHotDoc.HotDocRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HotDocRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.AllHotDoc.HotDocRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HotDocRequest> PARSER;

    public static com.google.protobuf.Parser<HotDocRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HotDocReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.HotDocReply)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    java.util.List<com.wanfang.main.AllHotDoc.HotDoc> 
        getHotDocList();
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    com.wanfang.main.AllHotDoc.HotDoc getHotDoc(int index);
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    int getHotDocCount();
  }
  /**
   * Protobuf type {@code main.HotDocReply}
   */
  public  static final class HotDocReply extends
      com.google.protobuf.GeneratedMessageLite<
          HotDocReply, HotDocReply.Builder> implements
      // @@protoc_insertion_point(message_implements:main.HotDocReply)
      HotDocReplyOrBuilder {
    private HotDocReply() {
      hotDoc_ = emptyProtobufList();
    }
    public static final int HOT_DOC_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.wanfang.main.AllHotDoc.HotDoc> hotDoc_;
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    public java.util.List<com.wanfang.main.AllHotDoc.HotDoc> getHotDocList() {
      return hotDoc_;
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    public java.util.List<? extends com.wanfang.main.AllHotDoc.HotDocOrBuilder> 
        getHotDocOrBuilderList() {
      return hotDoc_;
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    public int getHotDocCount() {
      return hotDoc_.size();
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    public com.wanfang.main.AllHotDoc.HotDoc getHotDoc(int index) {
      return hotDoc_.get(index);
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    public com.wanfang.main.AllHotDoc.HotDocOrBuilder getHotDocOrBuilder(
        int index) {
      return hotDoc_.get(index);
    }
    private void ensureHotDocIsMutable() {
      if (!hotDoc_.isModifiable()) {
        hotDoc_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(hotDoc_);
       }
    }

    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void setHotDoc(
        int index, com.wanfang.main.AllHotDoc.HotDoc value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHotDocIsMutable();
      hotDoc_.set(index, value);
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void setHotDoc(
        int index, com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
      ensureHotDocIsMutable();
      hotDoc_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void addHotDoc(com.wanfang.main.AllHotDoc.HotDoc value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHotDocIsMutable();
      hotDoc_.add(value);
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void addHotDoc(
        int index, com.wanfang.main.AllHotDoc.HotDoc value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureHotDocIsMutable();
      hotDoc_.add(index, value);
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void addHotDoc(
        com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
      ensureHotDocIsMutable();
      hotDoc_.add(builderForValue.build());
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void addHotDoc(
        int index, com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
      ensureHotDocIsMutable();
      hotDoc_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void addAllHotDoc(
        java.lang.Iterable<? extends com.wanfang.main.AllHotDoc.HotDoc> values) {
      ensureHotDocIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, hotDoc_);
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void clearHotDoc() {
      hotDoc_ = emptyProtobufList();
    }
    /**
     * <code>repeated .main.HotDoc hot_doc = 1;</code>
     */
    private void removeHotDoc(int index) {
      ensureHotDocIsMutable();
      hotDoc_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < hotDoc_.size(); i++) {
        output.writeMessage(1, hotDoc_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < hotDoc_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, hotDoc_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDocReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.AllHotDoc.HotDocReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.HotDocReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.AllHotDoc.HotDocReply, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.HotDocReply)
        com.wanfang.main.AllHotDoc.HotDocReplyOrBuilder {
      // Construct using com.wanfang.main.AllHotDoc.HotDocReply.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public java.util.List<com.wanfang.main.AllHotDoc.HotDoc> getHotDocList() {
        return java.util.Collections.unmodifiableList(
            instance.getHotDocList());
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public int getHotDocCount() {
        return instance.getHotDocCount();
      }/**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public com.wanfang.main.AllHotDoc.HotDoc getHotDoc(int index) {
        return instance.getHotDoc(index);
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder setHotDoc(
          int index, com.wanfang.main.AllHotDoc.HotDoc value) {
        copyOnWrite();
        instance.setHotDoc(index, value);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder setHotDoc(
          int index, com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
        copyOnWrite();
        instance.setHotDoc(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder addHotDoc(com.wanfang.main.AllHotDoc.HotDoc value) {
        copyOnWrite();
        instance.addHotDoc(value);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder addHotDoc(
          int index, com.wanfang.main.AllHotDoc.HotDoc value) {
        copyOnWrite();
        instance.addHotDoc(index, value);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder addHotDoc(
          com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
        copyOnWrite();
        instance.addHotDoc(builderForValue);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder addHotDoc(
          int index, com.wanfang.main.AllHotDoc.HotDoc.Builder builderForValue) {
        copyOnWrite();
        instance.addHotDoc(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder addAllHotDoc(
          java.lang.Iterable<? extends com.wanfang.main.AllHotDoc.HotDoc> values) {
        copyOnWrite();
        instance.addAllHotDoc(values);
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder clearHotDoc() {
        copyOnWrite();
        instance.clearHotDoc();
        return this;
      }
      /**
       * <code>repeated .main.HotDoc hot_doc = 1;</code>
       */
      public Builder removeHotDoc(int index) {
        copyOnWrite();
        instance.removeHotDoc(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.HotDocReply)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.AllHotDoc.HotDocReply();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          hotDoc_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.AllHotDoc.HotDocReply other = (com.wanfang.main.AllHotDoc.HotDocReply) arg1;
          hotDoc_= visitor.visitList(hotDoc_, other.hotDoc_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!hotDoc_.isModifiable()) {
                    hotDoc_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(hotDoc_);
                  }
                  hotDoc_.add(
                      input.readMessage(com.wanfang.main.AllHotDoc.HotDoc.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.AllHotDoc.HotDocReply.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.HotDocReply)
    private static final com.wanfang.main.AllHotDoc.HotDocReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HotDocReply();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.AllHotDoc.HotDocReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HotDocReply> PARSER;

    public static com.google.protobuf.Parser<HotDocReply> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface HotDocOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.HotDoc)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string docu_id = 1;</code>
     */
    java.lang.String getDocuId();
    /**
     * <code>optional string docu_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getDocuIdBytes();

    /**
     * <code>optional string docu_title = 2;</code>
     */
    java.lang.String getDocuTitle();
    /**
     * <code>optional string docu_title = 2;</code>
     */
    com.google.protobuf.ByteString
        getDocuTitleBytes();
  }
  /**
   * Protobuf type {@code main.HotDoc}
   */
  public  static final class HotDoc extends
      com.google.protobuf.GeneratedMessageLite<
          HotDoc, HotDoc.Builder> implements
      // @@protoc_insertion_point(message_implements:main.HotDoc)
      HotDocOrBuilder {
    private HotDoc() {
      docuId_ = "";
      docuTitle_ = "";
    }
    public static final int DOCU_ID_FIELD_NUMBER = 1;
    private java.lang.String docuId_;
    /**
     * <code>optional string docu_id = 1;</code>
     */
    public java.lang.String getDocuId() {
      return docuId_;
    }
    /**
     * <code>optional string docu_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDocuIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(docuId_);
    }
    /**
     * <code>optional string docu_id = 1;</code>
     */
    private void setDocuId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      docuId_ = value;
    }
    /**
     * <code>optional string docu_id = 1;</code>
     */
    private void clearDocuId() {
      
      docuId_ = getDefaultInstance().getDocuId();
    }
    /**
     * <code>optional string docu_id = 1;</code>
     */
    private void setDocuIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      docuId_ = value.toStringUtf8();
    }

    public static final int DOCU_TITLE_FIELD_NUMBER = 2;
    private java.lang.String docuTitle_;
    /**
     * <code>optional string docu_title = 2;</code>
     */
    public java.lang.String getDocuTitle() {
      return docuTitle_;
    }
    /**
     * <code>optional string docu_title = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDocuTitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(docuTitle_);
    }
    /**
     * <code>optional string docu_title = 2;</code>
     */
    private void setDocuTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      docuTitle_ = value;
    }
    /**
     * <code>optional string docu_title = 2;</code>
     */
    private void clearDocuTitle() {
      
      docuTitle_ = getDefaultInstance().getDocuTitle();
    }
    /**
     * <code>optional string docu_title = 2;</code>
     */
    private void setDocuTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      docuTitle_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!docuId_.isEmpty()) {
        output.writeString(1, getDocuId());
      }
      if (!docuTitle_.isEmpty()) {
        output.writeString(2, getDocuTitle());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!docuId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getDocuId());
      }
      if (!docuTitle_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getDocuTitle());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.AllHotDoc.HotDoc parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.AllHotDoc.HotDoc prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.HotDoc}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.AllHotDoc.HotDoc, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.HotDoc)
        com.wanfang.main.AllHotDoc.HotDocOrBuilder {
      // Construct using com.wanfang.main.AllHotDoc.HotDoc.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string docu_id = 1;</code>
       */
      public java.lang.String getDocuId() {
        return instance.getDocuId();
      }
      /**
       * <code>optional string docu_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getDocuIdBytes() {
        return instance.getDocuIdBytes();
      }
      /**
       * <code>optional string docu_id = 1;</code>
       */
      public Builder setDocuId(
          java.lang.String value) {
        copyOnWrite();
        instance.setDocuId(value);
        return this;
      }
      /**
       * <code>optional string docu_id = 1;</code>
       */
      public Builder clearDocuId() {
        copyOnWrite();
        instance.clearDocuId();
        return this;
      }
      /**
       * <code>optional string docu_id = 1;</code>
       */
      public Builder setDocuIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDocuIdBytes(value);
        return this;
      }

      /**
       * <code>optional string docu_title = 2;</code>
       */
      public java.lang.String getDocuTitle() {
        return instance.getDocuTitle();
      }
      /**
       * <code>optional string docu_title = 2;</code>
       */
      public com.google.protobuf.ByteString
          getDocuTitleBytes() {
        return instance.getDocuTitleBytes();
      }
      /**
       * <code>optional string docu_title = 2;</code>
       */
      public Builder setDocuTitle(
          java.lang.String value) {
        copyOnWrite();
        instance.setDocuTitle(value);
        return this;
      }
      /**
       * <code>optional string docu_title = 2;</code>
       */
      public Builder clearDocuTitle() {
        copyOnWrite();
        instance.clearDocuTitle();
        return this;
      }
      /**
       * <code>optional string docu_title = 2;</code>
       */
      public Builder setDocuTitleBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setDocuTitleBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.HotDoc)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.AllHotDoc.HotDoc();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.AllHotDoc.HotDoc other = (com.wanfang.main.AllHotDoc.HotDoc) arg1;
          docuId_ = visitor.visitString(!docuId_.isEmpty(), docuId_,
              !other.docuId_.isEmpty(), other.docuId_);
          docuTitle_ = visitor.visitString(!docuTitle_.isEmpty(), docuTitle_,
              !other.docuTitle_.isEmpty(), other.docuTitle_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  docuId_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  docuTitle_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.AllHotDoc.HotDoc.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.HotDoc)
    private static final com.wanfang.main.AllHotDoc.HotDoc DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new HotDoc();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.AllHotDoc.HotDoc getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<HotDoc> PARSER;

    public static com.google.protobuf.Parser<HotDoc> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
