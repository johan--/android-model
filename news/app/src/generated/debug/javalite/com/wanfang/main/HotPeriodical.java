// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: hot_periodical.proto

package com.wanfang.main;

public final class HotPeriodical {
  private HotPeriodical() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface PeriodicalRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.PeriodicalRequest)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>optional string page_number = 1;</code>
     */
    java.lang.String getPageNumber();
    /**
     * <code>optional string page_number = 1;</code>
     */
    com.google.protobuf.ByteString
        getPageNumberBytes();

    /**
     * <code>optional string page_size = 2;</code>
     */
    java.lang.String getPageSize();
    /**
     * <code>optional string page_size = 2;</code>
     */
    com.google.protobuf.ByteString
        getPageSizeBytes();
  }
  /**
   * Protobuf type {@code main.PeriodicalRequest}
   */
  public  static final class PeriodicalRequest extends
      com.google.protobuf.GeneratedMessageLite<
          PeriodicalRequest, PeriodicalRequest.Builder> implements
      // @@protoc_insertion_point(message_implements:main.PeriodicalRequest)
      PeriodicalRequestOrBuilder {
    private PeriodicalRequest() {
      pageNumber_ = "";
      pageSize_ = "";
    }
    public static final int PAGE_NUMBER_FIELD_NUMBER = 1;
    private java.lang.String pageNumber_;
    /**
     * <code>optional string page_number = 1;</code>
     */
    public java.lang.String getPageNumber() {
      return pageNumber_;
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPageNumberBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageNumber_);
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void setPageNumber(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageNumber_ = value;
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void clearPageNumber() {
      
      pageNumber_ = getDefaultInstance().getPageNumber();
    }
    /**
     * <code>optional string page_number = 1;</code>
     */
    private void setPageNumberBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageNumber_ = value.toStringUtf8();
    }

    public static final int PAGE_SIZE_FIELD_NUMBER = 2;
    private java.lang.String pageSize_;
    /**
     * <code>optional string page_size = 2;</code>
     */
    public java.lang.String getPageSize() {
      return pageSize_;
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPageSizeBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(pageSize_);
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void setPageSize(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageSize_ = value;
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void clearPageSize() {
      
      pageSize_ = getDefaultInstance().getPageSize();
    }
    /**
     * <code>optional string page_size = 2;</code>
     */
    private void setPageSizeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageSize_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!pageNumber_.isEmpty()) {
        output.writeString(1, getPageNumber());
      }
      if (!pageSize_.isEmpty()) {
        output.writeString(2, getPageSize());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!pageNumber_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPageNumber());
      }
      if (!pageSize_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPageSize());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.HotPeriodical.PeriodicalRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.PeriodicalRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.HotPeriodical.PeriodicalRequest, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.PeriodicalRequest)
        com.wanfang.main.HotPeriodical.PeriodicalRequestOrBuilder {
      // Construct using com.wanfang.main.HotPeriodical.PeriodicalRequest.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>optional string page_number = 1;</code>
       */
      public java.lang.String getPageNumber() {
        return instance.getPageNumber();
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPageNumberBytes() {
        return instance.getPageNumberBytes();
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder setPageNumber(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageNumber(value);
        return this;
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder clearPageNumber() {
        copyOnWrite();
        instance.clearPageNumber();
        return this;
      }
      /**
       * <code>optional string page_number = 1;</code>
       */
      public Builder setPageNumberBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageNumberBytes(value);
        return this;
      }

      /**
       * <code>optional string page_size = 2;</code>
       */
      public java.lang.String getPageSize() {
        return instance.getPageSize();
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPageSizeBytes() {
        return instance.getPageSizeBytes();
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder setPageSize(
          java.lang.String value) {
        copyOnWrite();
        instance.setPageSize(value);
        return this;
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder clearPageSize() {
        copyOnWrite();
        instance.clearPageSize();
        return this;
      }
      /**
       * <code>optional string page_size = 2;</code>
       */
      public Builder setPageSizeBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPageSizeBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.PeriodicalRequest)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.HotPeriodical.PeriodicalRequest();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.HotPeriodical.PeriodicalRequest other = (com.wanfang.main.HotPeriodical.PeriodicalRequest) arg1;
          pageNumber_ = visitor.visitString(!pageNumber_.isEmpty(), pageNumber_,
              !other.pageNumber_.isEmpty(), other.pageNumber_);
          pageSize_ = visitor.visitString(!pageSize_.isEmpty(), pageSize_,
              !other.pageSize_.isEmpty(), other.pageSize_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  pageNumber_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  pageSize_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.HotPeriodical.PeriodicalRequest.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.PeriodicalRequest)
    private static final com.wanfang.main.HotPeriodical.PeriodicalRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PeriodicalRequest();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.HotPeriodical.PeriodicalRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PeriodicalRequest> PARSER;

    public static com.google.protobuf.Parser<PeriodicalRequest> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PeriodicalReplyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.PeriodicalReply)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    java.util.List<com.wanfang.main.HotPeriodical.Periodical> 
        getPeriodicalList();
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    com.wanfang.main.HotPeriodical.Periodical getPeriodical(int index);
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    int getPeriodicalCount();
  }
  /**
   * Protobuf type {@code main.PeriodicalReply}
   */
  public  static final class PeriodicalReply extends
      com.google.protobuf.GeneratedMessageLite<
          PeriodicalReply, PeriodicalReply.Builder> implements
      // @@protoc_insertion_point(message_implements:main.PeriodicalReply)
      PeriodicalReplyOrBuilder {
    private PeriodicalReply() {
      periodical_ = emptyProtobufList();
    }
    public static final int PERIODICAL_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.ProtobufList<com.wanfang.main.HotPeriodical.Periodical> periodical_;
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    public java.util.List<com.wanfang.main.HotPeriodical.Periodical> getPeriodicalList() {
      return periodical_;
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    public java.util.List<? extends com.wanfang.main.HotPeriodical.PeriodicalOrBuilder> 
        getPeriodicalOrBuilderList() {
      return periodical_;
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    public int getPeriodicalCount() {
      return periodical_.size();
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    public com.wanfang.main.HotPeriodical.Periodical getPeriodical(int index) {
      return periodical_.get(index);
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    public com.wanfang.main.HotPeriodical.PeriodicalOrBuilder getPeriodicalOrBuilder(
        int index) {
      return periodical_.get(index);
    }
    private void ensurePeriodicalIsMutable() {
      if (!periodical_.isModifiable()) {
        periodical_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(periodical_);
       }
    }

    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void setPeriodical(
        int index, com.wanfang.main.HotPeriodical.Periodical value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePeriodicalIsMutable();
      periodical_.set(index, value);
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void setPeriodical(
        int index, com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
      ensurePeriodicalIsMutable();
      periodical_.set(index, builderForValue.build());
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void addPeriodical(com.wanfang.main.HotPeriodical.Periodical value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePeriodicalIsMutable();
      periodical_.add(value);
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void addPeriodical(
        int index, com.wanfang.main.HotPeriodical.Periodical value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensurePeriodicalIsMutable();
      periodical_.add(index, value);
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void addPeriodical(
        com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
      ensurePeriodicalIsMutable();
      periodical_.add(builderForValue.build());
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void addPeriodical(
        int index, com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
      ensurePeriodicalIsMutable();
      periodical_.add(index, builderForValue.build());
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void addAllPeriodical(
        java.lang.Iterable<? extends com.wanfang.main.HotPeriodical.Periodical> values) {
      ensurePeriodicalIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, periodical_);
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void clearPeriodical() {
      periodical_ = emptyProtobufList();
    }
    /**
     * <pre>
     *首页热门期刊列表
     * </pre>
     *
     * <code>repeated .main.Periodical periodical = 1;</code>
     */
    private void removePeriodical(int index) {
      ensurePeriodicalIsMutable();
      periodical_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < periodical_.size(); i++) {
        output.writeMessage(1, periodical_.get(i));
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < periodical_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, periodical_.get(i));
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.PeriodicalReply parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.HotPeriodical.PeriodicalReply prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.PeriodicalReply}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.HotPeriodical.PeriodicalReply, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.PeriodicalReply)
        com.wanfang.main.HotPeriodical.PeriodicalReplyOrBuilder {
      // Construct using com.wanfang.main.HotPeriodical.PeriodicalReply.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public java.util.List<com.wanfang.main.HotPeriodical.Periodical> getPeriodicalList() {
        return java.util.Collections.unmodifiableList(
            instance.getPeriodicalList());
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public int getPeriodicalCount() {
        return instance.getPeriodicalCount();
      }/**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public com.wanfang.main.HotPeriodical.Periodical getPeriodical(int index) {
        return instance.getPeriodical(index);
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder setPeriodical(
          int index, com.wanfang.main.HotPeriodical.Periodical value) {
        copyOnWrite();
        instance.setPeriodical(index, value);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder setPeriodical(
          int index, com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
        copyOnWrite();
        instance.setPeriodical(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder addPeriodical(com.wanfang.main.HotPeriodical.Periodical value) {
        copyOnWrite();
        instance.addPeriodical(value);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder addPeriodical(
          int index, com.wanfang.main.HotPeriodical.Periodical value) {
        copyOnWrite();
        instance.addPeriodical(index, value);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder addPeriodical(
          com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
        copyOnWrite();
        instance.addPeriodical(builderForValue);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder addPeriodical(
          int index, com.wanfang.main.HotPeriodical.Periodical.Builder builderForValue) {
        copyOnWrite();
        instance.addPeriodical(index, builderForValue);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder addAllPeriodical(
          java.lang.Iterable<? extends com.wanfang.main.HotPeriodical.Periodical> values) {
        copyOnWrite();
        instance.addAllPeriodical(values);
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder clearPeriodical() {
        copyOnWrite();
        instance.clearPeriodical();
        return this;
      }
      /**
       * <pre>
       *首页热门期刊列表
       * </pre>
       *
       * <code>repeated .main.Periodical periodical = 1;</code>
       */
      public Builder removePeriodical(int index) {
        copyOnWrite();
        instance.removePeriodical(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.PeriodicalReply)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.HotPeriodical.PeriodicalReply();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          periodical_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.HotPeriodical.PeriodicalReply other = (com.wanfang.main.HotPeriodical.PeriodicalReply) arg1;
          periodical_= visitor.visitList(periodical_, other.periodical_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  if (!periodical_.isModifiable()) {
                    periodical_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(periodical_);
                  }
                  periodical_.add(
                      input.readMessage(com.wanfang.main.HotPeriodical.Periodical.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.HotPeriodical.PeriodicalReply.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.PeriodicalReply)
    private static final com.wanfang.main.HotPeriodical.PeriodicalReply DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new PeriodicalReply();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.HotPeriodical.PeriodicalReply getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<PeriodicalReply> PARSER;

    public static com.google.protobuf.Parser<PeriodicalReply> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface PeriodicalOrBuilder extends
      // @@protoc_insertion_point(interface_extends:main.Periodical)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    java.lang.String getPeriodicalCover();
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    com.google.protobuf.ByteString
        getPeriodicalCoverBytes();

    /**
     * <code>optional string periodical_id = 2;</code>
     */
    java.lang.String getPeriodicalId();
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    com.google.protobuf.ByteString
        getPeriodicalIdBytes();

    /**
     * <code>optional string periodical_title = 3;</code>
     */
    java.lang.String getPeriodicalTitle();
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    com.google.protobuf.ByteString
        getPeriodicalTitleBytes();
  }
  /**
   * Protobuf type {@code main.Periodical}
   */
  public  static final class Periodical extends
      com.google.protobuf.GeneratedMessageLite<
          Periodical, Periodical.Builder> implements
      // @@protoc_insertion_point(message_implements:main.Periodical)
      PeriodicalOrBuilder {
    private Periodical() {
      periodicalCover_ = "";
      periodicalId_ = "";
      periodicalTitle_ = "";
    }
    public static final int PERIODICAL_COVER_FIELD_NUMBER = 1;
    private java.lang.String periodicalCover_;
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    public java.lang.String getPeriodicalCover() {
      return periodicalCover_;
    }
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    public com.google.protobuf.ByteString
        getPeriodicalCoverBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(periodicalCover_);
    }
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    private void setPeriodicalCover(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      periodicalCover_ = value;
    }
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    private void clearPeriodicalCover() {
      
      periodicalCover_ = getDefaultInstance().getPeriodicalCover();
    }
    /**
     * <pre>
     *	期刊封面图片
     * </pre>
     *
     * <code>optional string periodical_cover = 1;</code>
     */
    private void setPeriodicalCoverBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      periodicalCover_ = value.toStringUtf8();
    }

    public static final int PERIODICAL_ID_FIELD_NUMBER = 2;
    private java.lang.String periodicalId_;
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    public java.lang.String getPeriodicalId() {
      return periodicalId_;
    }
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    public com.google.protobuf.ByteString
        getPeriodicalIdBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(periodicalId_);
    }
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    private void setPeriodicalId(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      periodicalId_ = value;
    }
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    private void clearPeriodicalId() {
      
      periodicalId_ = getDefaultInstance().getPeriodicalId();
    }
    /**
     * <code>optional string periodical_id = 2;</code>
     */
    private void setPeriodicalIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      periodicalId_ = value.toStringUtf8();
    }

    public static final int PERIODICAL_TITLE_FIELD_NUMBER = 3;
    private java.lang.String periodicalTitle_;
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    public java.lang.String getPeriodicalTitle() {
      return periodicalTitle_;
    }
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    public com.google.protobuf.ByteString
        getPeriodicalTitleBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(periodicalTitle_);
    }
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    private void setPeriodicalTitle(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      periodicalTitle_ = value;
    }
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    private void clearPeriodicalTitle() {
      
      periodicalTitle_ = getDefaultInstance().getPeriodicalTitle();
    }
    /**
     * <code>optional string periodical_title = 3;</code>
     */
    private void setPeriodicalTitleBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      periodicalTitle_ = value.toStringUtf8();
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!periodicalCover_.isEmpty()) {
        output.writeString(1, getPeriodicalCover());
      }
      if (!periodicalId_.isEmpty()) {
        output.writeString(2, getPeriodicalId());
      }
      if (!periodicalTitle_.isEmpty()) {
        output.writeString(3, getPeriodicalTitle());
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (!periodicalCover_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getPeriodicalCover());
      }
      if (!periodicalId_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPeriodicalId());
      }
      if (!periodicalTitle_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPeriodicalTitle());
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.wanfang.main.HotPeriodical.Periodical parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.wanfang.main.HotPeriodical.Periodical prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code main.Periodical}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.wanfang.main.HotPeriodical.Periodical, Builder> implements
        // @@protoc_insertion_point(builder_implements:main.Periodical)
        com.wanfang.main.HotPeriodical.PeriodicalOrBuilder {
      // Construct using com.wanfang.main.HotPeriodical.Periodical.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *	期刊封面图片
       * </pre>
       *
       * <code>optional string periodical_cover = 1;</code>
       */
      public java.lang.String getPeriodicalCover() {
        return instance.getPeriodicalCover();
      }
      /**
       * <pre>
       *	期刊封面图片
       * </pre>
       *
       * <code>optional string periodical_cover = 1;</code>
       */
      public com.google.protobuf.ByteString
          getPeriodicalCoverBytes() {
        return instance.getPeriodicalCoverBytes();
      }
      /**
       * <pre>
       *	期刊封面图片
       * </pre>
       *
       * <code>optional string periodical_cover = 1;</code>
       */
      public Builder setPeriodicalCover(
          java.lang.String value) {
        copyOnWrite();
        instance.setPeriodicalCover(value);
        return this;
      }
      /**
       * <pre>
       *	期刊封面图片
       * </pre>
       *
       * <code>optional string periodical_cover = 1;</code>
       */
      public Builder clearPeriodicalCover() {
        copyOnWrite();
        instance.clearPeriodicalCover();
        return this;
      }
      /**
       * <pre>
       *	期刊封面图片
       * </pre>
       *
       * <code>optional string periodical_cover = 1;</code>
       */
      public Builder setPeriodicalCoverBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPeriodicalCoverBytes(value);
        return this;
      }

      /**
       * <code>optional string periodical_id = 2;</code>
       */
      public java.lang.String getPeriodicalId() {
        return instance.getPeriodicalId();
      }
      /**
       * <code>optional string periodical_id = 2;</code>
       */
      public com.google.protobuf.ByteString
          getPeriodicalIdBytes() {
        return instance.getPeriodicalIdBytes();
      }
      /**
       * <code>optional string periodical_id = 2;</code>
       */
      public Builder setPeriodicalId(
          java.lang.String value) {
        copyOnWrite();
        instance.setPeriodicalId(value);
        return this;
      }
      /**
       * <code>optional string periodical_id = 2;</code>
       */
      public Builder clearPeriodicalId() {
        copyOnWrite();
        instance.clearPeriodicalId();
        return this;
      }
      /**
       * <code>optional string periodical_id = 2;</code>
       */
      public Builder setPeriodicalIdBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPeriodicalIdBytes(value);
        return this;
      }

      /**
       * <code>optional string periodical_title = 3;</code>
       */
      public java.lang.String getPeriodicalTitle() {
        return instance.getPeriodicalTitle();
      }
      /**
       * <code>optional string periodical_title = 3;</code>
       */
      public com.google.protobuf.ByteString
          getPeriodicalTitleBytes() {
        return instance.getPeriodicalTitleBytes();
      }
      /**
       * <code>optional string periodical_title = 3;</code>
       */
      public Builder setPeriodicalTitle(
          java.lang.String value) {
        copyOnWrite();
        instance.setPeriodicalTitle(value);
        return this;
      }
      /**
       * <code>optional string periodical_title = 3;</code>
       */
      public Builder clearPeriodicalTitle() {
        copyOnWrite();
        instance.clearPeriodicalTitle();
        return this;
      }
      /**
       * <code>optional string periodical_title = 3;</code>
       */
      public Builder setPeriodicalTitleBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setPeriodicalTitleBytes(value);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:main.Periodical)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.wanfang.main.HotPeriodical.Periodical();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.wanfang.main.HotPeriodical.Periodical other = (com.wanfang.main.HotPeriodical.Periodical) arg1;
          periodicalCover_ = visitor.visitString(!periodicalCover_.isEmpty(), periodicalCover_,
              !other.periodicalCover_.isEmpty(), other.periodicalCover_);
          periodicalId_ = visitor.visitString(!periodicalId_.isEmpty(), periodicalId_,
              !other.periodicalId_.isEmpty(), other.periodicalId_);
          periodicalTitle_ = visitor.visitString(!periodicalTitle_.isEmpty(), periodicalTitle_,
              !other.periodicalTitle_.isEmpty(), other.periodicalTitle_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readStringRequireUtf8();

                  periodicalCover_ = s;
                  break;
                }
                case 18: {
                  String s = input.readStringRequireUtf8();

                  periodicalId_ = s;
                  break;
                }
                case 26: {
                  String s = input.readStringRequireUtf8();

                  periodicalTitle_ = s;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.wanfang.main.HotPeriodical.Periodical.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:main.Periodical)
    private static final com.wanfang.main.HotPeriodical.Periodical DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Periodical();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.wanfang.main.HotPeriodical.Periodical getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<Periodical> PARSER;

    public static com.google.protobuf.Parser<Periodical> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
