// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all_last_news.proto

#ifndef PROTOBUF_all_5flast_5fnews_2eproto__INCLUDED
#define PROTOBUF_all_5flast_5fnews_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace main {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_all_5flast_5fnews_2eproto();
void protobuf_InitDefaults_all_5flast_5fnews_2eproto();
void protobuf_AssignDesc_all_5flast_5fnews_2eproto();
void protobuf_ShutdownFile_all_5flast_5fnews_2eproto();

class LastNews;
class LastNewsReply;
class LastNewsRequest;

// ===================================================================

class LastNewsRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.LastNewsRequest) */ {
 public:
  LastNewsRequest();
  virtual ~LastNewsRequest();

  LastNewsRequest(const LastNewsRequest& from);

  inline LastNewsRequest& operator=(const LastNewsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastNewsRequest& default_instance();

  static const LastNewsRequest* internal_default_instance();

  void Swap(LastNewsRequest* other);

  // implements Message ----------------------------------------------

  inline LastNewsRequest* New() const { return New(NULL); }

  LastNewsRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastNewsRequest& from);
  void MergeFrom(const LastNewsRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LastNewsRequest* other);
  void UnsafeMergeFrom(const LastNewsRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string page_number = 1;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 1;
  const ::std::string& page_number() const;
  void set_page_number(const ::std::string& value);
  void set_page_number(const char* value);
  void set_page_number(const char* value, size_t size);
  ::std::string* mutable_page_number();
  ::std::string* release_page_number();
  void set_allocated_page_number(::std::string* page_number);

  // optional string page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  const ::std::string& page_size() const;
  void set_page_size(const ::std::string& value);
  void set_page_size(const char* value);
  void set_page_size(const char* value, size_t size);
  ::std::string* mutable_page_size();
  ::std::string* release_page_size();
  void set_allocated_page_size(::std::string* page_size);

  // @@protoc_insertion_point(class_scope:main.LastNewsRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr page_number_;
  ::google::protobuf::internal::ArenaStringPtr page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_all_5flast_5fnews_2eproto_impl();
  friend void  protobuf_AddDesc_all_5flast_5fnews_2eproto_impl();
  friend void protobuf_AssignDesc_all_5flast_5fnews_2eproto();
  friend void protobuf_ShutdownFile_all_5flast_5fnews_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LastNewsRequest> LastNewsRequest_default_instance_;

// -------------------------------------------------------------------

class LastNewsReply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.LastNewsReply) */ {
 public:
  LastNewsReply();
  virtual ~LastNewsReply();

  LastNewsReply(const LastNewsReply& from);

  inline LastNewsReply& operator=(const LastNewsReply& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastNewsReply& default_instance();

  static const LastNewsReply* internal_default_instance();

  void Swap(LastNewsReply* other);

  // implements Message ----------------------------------------------

  inline LastNewsReply* New() const { return New(NULL); }

  LastNewsReply* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastNewsReply& from);
  void MergeFrom(const LastNewsReply& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LastNewsReply* other);
  void UnsafeMergeFrom(const LastNewsReply& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .main.LastNews last_news = 1;
  int last_news_size() const;
  void clear_last_news();
  static const int kLastNewsFieldNumber = 1;
  const ::main::LastNews& last_news(int index) const;
  ::main::LastNews* mutable_last_news(int index);
  ::main::LastNews* add_last_news();
  ::google::protobuf::RepeatedPtrField< ::main::LastNews >*
      mutable_last_news();
  const ::google::protobuf::RepeatedPtrField< ::main::LastNews >&
      last_news() const;

  // @@protoc_insertion_point(class_scope:main.LastNewsReply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::main::LastNews > last_news_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_all_5flast_5fnews_2eproto_impl();
  friend void  protobuf_AddDesc_all_5flast_5fnews_2eproto_impl();
  friend void protobuf_AssignDesc_all_5flast_5fnews_2eproto();
  friend void protobuf_ShutdownFile_all_5flast_5fnews_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LastNewsReply> LastNewsReply_default_instance_;

// -------------------------------------------------------------------

class LastNews : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:main.LastNews) */ {
 public:
  LastNews();
  virtual ~LastNews();

  LastNews(const LastNews& from);

  inline LastNews& operator=(const LastNews& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LastNews& default_instance();

  static const LastNews* internal_default_instance();

  void Swap(LastNews* other);

  // implements Message ----------------------------------------------

  inline LastNews* New() const { return New(NULL); }

  LastNews* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LastNews& from);
  void MergeFrom(const LastNews& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LastNews* other);
  void UnsafeMergeFrom(const LastNews& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string lastNews_link = 1;
  void clear_lastnews_link();
  static const int kLastNewsLinkFieldNumber = 1;
  const ::std::string& lastnews_link() const;
  void set_lastnews_link(const ::std::string& value);
  void set_lastnews_link(const char* value);
  void set_lastnews_link(const char* value, size_t size);
  ::std::string* mutable_lastnews_link();
  ::std::string* release_lastnews_link();
  void set_allocated_lastnews_link(::std::string* lastnews_link);

  // optional string lastNews_title = 2;
  void clear_lastnews_title();
  static const int kLastNewsTitleFieldNumber = 2;
  const ::std::string& lastnews_title() const;
  void set_lastnews_title(const ::std::string& value);
  void set_lastnews_title(const char* value);
  void set_lastnews_title(const char* value, size_t size);
  ::std::string* mutable_lastnews_title();
  ::std::string* release_lastnews_title();
  void set_allocated_lastnews_title(::std::string* lastnews_title);

  // @@protoc_insertion_point(class_scope:main.LastNews)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr lastnews_link_;
  ::google::protobuf::internal::ArenaStringPtr lastnews_title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_all_5flast_5fnews_2eproto_impl();
  friend void  protobuf_AddDesc_all_5flast_5fnews_2eproto_impl();
  friend void protobuf_AssignDesc_all_5flast_5fnews_2eproto();
  friend void protobuf_ShutdownFile_all_5flast_5fnews_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<LastNews> LastNews_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LastNewsRequest

// optional string page_number = 1;
inline void LastNewsRequest::clear_page_number() {
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LastNewsRequest::page_number() const {
  // @@protoc_insertion_point(field_get:main.LastNewsRequest.page_number)
  return page_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNewsRequest::set_page_number(const ::std::string& value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNewsRequest.page_number)
}
inline void LastNewsRequest::set_page_number(const char* value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNewsRequest.page_number)
}
inline void LastNewsRequest::set_page_number(const char* value, size_t size) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNewsRequest.page_number)
}
inline ::std::string* LastNewsRequest::mutable_page_number() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNewsRequest.page_number)
  return page_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LastNewsRequest::release_page_number() {
  // @@protoc_insertion_point(field_release:main.LastNewsRequest.page_number)
  
  return page_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNewsRequest::set_allocated_page_number(::std::string* page_number) {
  if (page_number != NULL) {
    
  } else {
    
  }
  page_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_number);
  // @@protoc_insertion_point(field_set_allocated:main.LastNewsRequest.page_number)
}

// optional string page_size = 2;
inline void LastNewsRequest::clear_page_size() {
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LastNewsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:main.LastNewsRequest.page_size)
  return page_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNewsRequest::set_page_size(const ::std::string& value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNewsRequest.page_size)
}
inline void LastNewsRequest::set_page_size(const char* value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNewsRequest.page_size)
}
inline void LastNewsRequest::set_page_size(const char* value, size_t size) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNewsRequest.page_size)
}
inline ::std::string* LastNewsRequest::mutable_page_size() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNewsRequest.page_size)
  return page_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LastNewsRequest::release_page_size() {
  // @@protoc_insertion_point(field_release:main.LastNewsRequest.page_size)
  
  return page_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNewsRequest::set_allocated_page_size(::std::string* page_size) {
  if (page_size != NULL) {
    
  } else {
    
  }
  page_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_size);
  // @@protoc_insertion_point(field_set_allocated:main.LastNewsRequest.page_size)
}

inline const LastNewsRequest* LastNewsRequest::internal_default_instance() {
  return &LastNewsRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// LastNewsReply

// repeated .main.LastNews last_news = 1;
inline int LastNewsReply::last_news_size() const {
  return last_news_.size();
}
inline void LastNewsReply::clear_last_news() {
  last_news_.Clear();
}
inline const ::main::LastNews& LastNewsReply::last_news(int index) const {
  // @@protoc_insertion_point(field_get:main.LastNewsReply.last_news)
  return last_news_.Get(index);
}
inline ::main::LastNews* LastNewsReply::mutable_last_news(int index) {
  // @@protoc_insertion_point(field_mutable:main.LastNewsReply.last_news)
  return last_news_.Mutable(index);
}
inline ::main::LastNews* LastNewsReply::add_last_news() {
  // @@protoc_insertion_point(field_add:main.LastNewsReply.last_news)
  return last_news_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::main::LastNews >*
LastNewsReply::mutable_last_news() {
  // @@protoc_insertion_point(field_mutable_list:main.LastNewsReply.last_news)
  return &last_news_;
}
inline const ::google::protobuf::RepeatedPtrField< ::main::LastNews >&
LastNewsReply::last_news() const {
  // @@protoc_insertion_point(field_list:main.LastNewsReply.last_news)
  return last_news_;
}

inline const LastNewsReply* LastNewsReply::internal_default_instance() {
  return &LastNewsReply_default_instance_.get();
}
// -------------------------------------------------------------------

// LastNews

// optional string lastNews_link = 1;
inline void LastNews::clear_lastnews_link() {
  lastnews_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LastNews::lastnews_link() const {
  // @@protoc_insertion_point(field_get:main.LastNews.lastNews_link)
  return lastnews_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNews::set_lastnews_link(const ::std::string& value) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNews.lastNews_link)
}
inline void LastNews::set_lastnews_link(const char* value) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNews.lastNews_link)
}
inline void LastNews::set_lastnews_link(const char* value, size_t size) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNews.lastNews_link)
}
inline ::std::string* LastNews::mutable_lastnews_link() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNews.lastNews_link)
  return lastnews_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LastNews::release_lastnews_link() {
  // @@protoc_insertion_point(field_release:main.LastNews.lastNews_link)
  
  return lastnews_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNews::set_allocated_lastnews_link(::std::string* lastnews_link) {
  if (lastnews_link != NULL) {
    
  } else {
    
  }
  lastnews_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastnews_link);
  // @@protoc_insertion_point(field_set_allocated:main.LastNews.lastNews_link)
}

// optional string lastNews_title = 2;
inline void LastNews::clear_lastnews_title() {
  lastnews_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LastNews::lastnews_title() const {
  // @@protoc_insertion_point(field_get:main.LastNews.lastNews_title)
  return lastnews_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNews::set_lastnews_title(const ::std::string& value) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNews.lastNews_title)
}
inline void LastNews::set_lastnews_title(const char* value) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNews.lastNews_title)
}
inline void LastNews::set_lastnews_title(const char* value, size_t size) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNews.lastNews_title)
}
inline ::std::string* LastNews::mutable_lastnews_title() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNews.lastNews_title)
  return lastnews_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LastNews::release_lastnews_title() {
  // @@protoc_insertion_point(field_release:main.LastNews.lastNews_title)
  
  return lastnews_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LastNews::set_allocated_lastnews_title(::std::string* lastnews_title) {
  if (lastnews_title != NULL) {
    
  } else {
    
  }
  lastnews_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastnews_title);
  // @@protoc_insertion_point(field_set_allocated:main.LastNews.lastNews_title)
}

inline const LastNews* LastNews::internal_default_instance() {
  return &LastNews_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_all_5flast_5fnews_2eproto__INCLUDED
