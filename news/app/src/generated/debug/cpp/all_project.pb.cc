// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all_project.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "all_project.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace main {

namespace {

const ::google::protobuf::Descriptor* ProjectRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ProjectReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ProjectReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_all_5fproject_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_all_5fproject_2eproto() {
  protobuf_AddDesc_all_5fproject_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "all_project.proto");
  GOOGLE_CHECK(file != NULL);
  ProjectRequest_descriptor_ = file->message_type(0);
  static const int ProjectRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectRequest, page_size_),
  };
  ProjectRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProjectRequest_descriptor_,
      ProjectRequest::internal_default_instance(),
      ProjectRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProjectRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectRequest, _internal_metadata_));
  ProjectReply_descriptor_ = file->message_type(1);
  static const int ProjectReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectReply, project_),
  };
  ProjectReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ProjectReply_descriptor_,
      ProjectReply::internal_default_instance(),
      ProjectReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(ProjectReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ProjectReply, _internal_metadata_));
  Project_descriptor_ = file->message_type(2);
  static const int Project_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, project_link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, project_title_),
  };
  Project_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Project_descriptor_,
      Project::internal_default_instance(),
      Project_offsets_,
      -1,
      -1,
      -1,
      sizeof(Project),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_all_5fproject_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProjectRequest_descriptor_, ProjectRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ProjectReply_descriptor_, ProjectReply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Project_descriptor_, Project::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_all_5fproject_2eproto() {
  ProjectRequest_default_instance_.Shutdown();
  delete ProjectRequest_reflection_;
  ProjectReply_default_instance_.Shutdown();
  delete ProjectReply_reflection_;
  Project_default_instance_.Shutdown();
  delete Project_reflection_;
}

void protobuf_InitDefaults_all_5fproject_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  ProjectRequest_default_instance_.DefaultConstruct();
  ProjectReply_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  Project_default_instance_.DefaultConstruct();
  ProjectRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ProjectReply_default_instance_.get_mutable()->InitAsDefaultInstance();
  Project_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_all_5fproject_2eproto_once_);
void protobuf_InitDefaults_all_5fproject_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_all_5fproject_2eproto_once_,
                 &protobuf_InitDefaults_all_5fproject_2eproto_impl);
}
void protobuf_AddDesc_all_5fproject_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_all_5fproject_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021all_project.proto\022\004main\"8\n\016ProjectRequ"
    "est\022\023\n\013page_number\030\001 \001(\t\022\021\n\tpage_size\030\002 "
    "\001(\t\".\n\014ProjectReply\022\036\n\007project\030\001 \003(\0132\r.m"
    "ain.Project\"6\n\007Project\022\024\n\014project_link\030\001"
    " \001(\t\022\025\n\rproject_title\030\002 \001(\tB\022\n\020com.wanfa"
    "ng.mainb\006proto3", 215);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "all_project.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_all_5fproject_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_all_5fproject_2eproto_once_);
void protobuf_AddDesc_all_5fproject_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_all_5fproject_2eproto_once_,
                 &protobuf_AddDesc_all_5fproject_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_all_5fproject_2eproto {
  StaticDescriptorInitializer_all_5fproject_2eproto() {
    protobuf_AddDesc_all_5fproject_2eproto();
  }
} static_descriptor_initializer_all_5fproject_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectRequest::kPageNumberFieldNumber;
const int ProjectRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectRequest::ProjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5fproject_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.ProjectRequest)
}

void ProjectRequest::InitAsDefaultInstance() {
}

ProjectRequest::ProjectRequest(const ProjectRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.ProjectRequest)
}

void ProjectRequest::SharedCtor() {
  page_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ProjectRequest::~ProjectRequest() {
  // @@protoc_insertion_point(destructor:main.ProjectRequest)
  SharedDtor();
}

void ProjectRequest::SharedDtor() {
  page_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ProjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectRequest_descriptor_;
}

const ProjectRequest& ProjectRequest::default_instance() {
  protobuf_InitDefaults_all_5fproject_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ProjectRequest> ProjectRequest_default_instance_;

ProjectRequest* ProjectRequest::New(::google::protobuf::Arena* arena) const {
  ProjectRequest* n = new ProjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:main.ProjectRequest)
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ProjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.ProjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string page_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_number().data(), this->page_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.ProjectRequest.page_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_page_size;
        break;
      }

      // optional string page_size = 2;
      case 2: {
        if (tag == 18) {
         parse_page_size:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_size().data(), this->page_size().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.ProjectRequest.page_size"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.ProjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.ProjectRequest)
  return false;
#undef DO_
}

void ProjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.ProjectRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.ProjectRequest.page_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->page_number(), output);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.ProjectRequest.page_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.ProjectRequest)
}

::google::protobuf::uint8* ProjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.ProjectRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.ProjectRequest.page_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->page_number(), target);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.ProjectRequest.page_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.ProjectRequest)
  return target;
}

size_t ProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.ProjectRequest)
  size_t total_size = 0;

  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_number());
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.ProjectRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.ProjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.ProjectRequest)
    UnsafeMergeFrom(*source);
  }
}

void ProjectRequest::MergeFrom(const ProjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.ProjectRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ProjectRequest::UnsafeMergeFrom(const ProjectRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.page_number().size() > 0) {

    page_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_number_);
  }
  if (from.page_size().size() > 0) {

    page_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_size_);
  }
}

void ProjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.ProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectRequest::CopyFrom(const ProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.ProjectRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ProjectRequest::IsInitialized() const {

  return true;
}

void ProjectRequest::Swap(ProjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectRequest::InternalSwap(ProjectRequest* other) {
  page_number_.Swap(&other->page_number_);
  page_size_.Swap(&other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectRequest_descriptor_;
  metadata.reflection = ProjectRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectRequest

// optional string page_number = 1;
void ProjectRequest::clear_page_number() {
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectRequest::page_number() const {
  // @@protoc_insertion_point(field_get:main.ProjectRequest.page_number)
  return page_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectRequest::set_page_number(const ::std::string& value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.ProjectRequest.page_number)
}
void ProjectRequest::set_page_number(const char* value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.ProjectRequest.page_number)
}
void ProjectRequest::set_page_number(const char* value, size_t size) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.ProjectRequest.page_number)
}
::std::string* ProjectRequest::mutable_page_number() {
  
  // @@protoc_insertion_point(field_mutable:main.ProjectRequest.page_number)
  return page_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectRequest::release_page_number() {
  // @@protoc_insertion_point(field_release:main.ProjectRequest.page_number)
  
  return page_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectRequest::set_allocated_page_number(::std::string* page_number) {
  if (page_number != NULL) {
    
  } else {
    
  }
  page_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_number);
  // @@protoc_insertion_point(field_set_allocated:main.ProjectRequest.page_number)
}

// optional string page_size = 2;
void ProjectRequest::clear_page_size() {
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ProjectRequest::page_size() const {
  // @@protoc_insertion_point(field_get:main.ProjectRequest.page_size)
  return page_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectRequest::set_page_size(const ::std::string& value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.ProjectRequest.page_size)
}
void ProjectRequest::set_page_size(const char* value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.ProjectRequest.page_size)
}
void ProjectRequest::set_page_size(const char* value, size_t size) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.ProjectRequest.page_size)
}
::std::string* ProjectRequest::mutable_page_size() {
  
  // @@protoc_insertion_point(field_mutable:main.ProjectRequest.page_size)
  return page_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ProjectRequest::release_page_size() {
  // @@protoc_insertion_point(field_release:main.ProjectRequest.page_size)
  
  return page_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ProjectRequest::set_allocated_page_size(::std::string* page_size) {
  if (page_size != NULL) {
    
  } else {
    
  }
  page_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_size);
  // @@protoc_insertion_point(field_set_allocated:main.ProjectRequest.page_size)
}

inline const ProjectRequest* ProjectRequest::internal_default_instance() {
  return &ProjectRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ProjectReply::kProjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ProjectReply::ProjectReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5fproject_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.ProjectReply)
}

void ProjectReply::InitAsDefaultInstance() {
}

ProjectReply::ProjectReply(const ProjectReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.ProjectReply)
}

void ProjectReply::SharedCtor() {
  _cached_size_ = 0;
}

ProjectReply::~ProjectReply() {
  // @@protoc_insertion_point(destructor:main.ProjectReply)
  SharedDtor();
}

void ProjectReply::SharedDtor() {
}

void ProjectReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ProjectReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ProjectReply_descriptor_;
}

const ProjectReply& ProjectReply::default_instance() {
  protobuf_InitDefaults_all_5fproject_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ProjectReply> ProjectReply_default_instance_;

ProjectReply* ProjectReply::New(::google::protobuf::Arena* arena) const {
  ProjectReply* n = new ProjectReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ProjectReply::Clear() {
// @@protoc_insertion_point(message_clear_start:main.ProjectReply)
  project_.Clear();
}

bool ProjectReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.ProjectReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .main.Project project = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_project:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_project()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_project;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.ProjectReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.ProjectReply)
  return false;
#undef DO_
}

void ProjectReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.ProjectReply)
  // repeated .main.Project project = 1;
  for (unsigned int i = 0, n = this->project_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(i), output);
  }

  // @@protoc_insertion_point(serialize_end:main.ProjectReply)
}

::google::protobuf::uint8* ProjectReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.ProjectReply)
  // repeated .main.Project project = 1;
  for (unsigned int i = 0, n = this->project_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->project(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.ProjectReply)
  return target;
}

size_t ProjectReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.ProjectReply)
  size_t total_size = 0;

  // repeated .main.Project project = 1;
  {
    unsigned int count = this->project_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ProjectReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.ProjectReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ProjectReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ProjectReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.ProjectReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.ProjectReply)
    UnsafeMergeFrom(*source);
  }
}

void ProjectReply::MergeFrom(const ProjectReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.ProjectReply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ProjectReply::UnsafeMergeFrom(const ProjectReply& from) {
  GOOGLE_DCHECK(&from != this);
  project_.MergeFrom(from.project_);
}

void ProjectReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.ProjectReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProjectReply::CopyFrom(const ProjectReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.ProjectReply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ProjectReply::IsInitialized() const {

  return true;
}

void ProjectReply::Swap(ProjectReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ProjectReply::InternalSwap(ProjectReply* other) {
  project_.UnsafeArenaSwap(&other->project_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ProjectReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ProjectReply_descriptor_;
  metadata.reflection = ProjectReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ProjectReply

// repeated .main.Project project = 1;
int ProjectReply::project_size() const {
  return project_.size();
}
void ProjectReply::clear_project() {
  project_.Clear();
}
const ::main::Project& ProjectReply::project(int index) const {
  // @@protoc_insertion_point(field_get:main.ProjectReply.project)
  return project_.Get(index);
}
::main::Project* ProjectReply::mutable_project(int index) {
  // @@protoc_insertion_point(field_mutable:main.ProjectReply.project)
  return project_.Mutable(index);
}
::main::Project* ProjectReply::add_project() {
  // @@protoc_insertion_point(field_add:main.ProjectReply.project)
  return project_.Add();
}
::google::protobuf::RepeatedPtrField< ::main::Project >*
ProjectReply::mutable_project() {
  // @@protoc_insertion_point(field_mutable_list:main.ProjectReply.project)
  return &project_;
}
const ::google::protobuf::RepeatedPtrField< ::main::Project >&
ProjectReply::project() const {
  // @@protoc_insertion_point(field_list:main.ProjectReply.project)
  return project_;
}

inline const ProjectReply* ProjectReply::internal_default_instance() {
  return &ProjectReply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Project::kProjectLinkFieldNumber;
const int Project::kProjectTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Project::Project()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5fproject_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.Project)
}

void Project::InitAsDefaultInstance() {
}

Project::Project(const Project& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.Project)
}

void Project::SharedCtor() {
  project_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

Project::~Project() {
  // @@protoc_insertion_point(destructor:main.Project)
  SharedDtor();
}

void Project::SharedDtor() {
  project_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Project::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_descriptor_;
}

const Project& Project::default_instance() {
  protobuf_InitDefaults_all_5fproject_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<Project> Project_default_instance_;

Project* Project::New(::google::protobuf::Arena* arena) const {
  Project* n = new Project;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Project::Clear() {
// @@protoc_insertion_point(message_clear_start:main.Project)
  project_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  project_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Project::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.Project)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string project_link = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_link().data(), this->project_link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.Project.project_link"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_project_title;
        break;
      }

      // optional string project_title = 2;
      case 2: {
        if (tag == 18) {
         parse_project_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_project_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->project_title().data(), this->project_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.Project.project_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.Project)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.Project)
  return false;
#undef DO_
}

void Project::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.Project)
  // optional string project_link = 1;
  if (this->project_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_link().data(), this->project_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Project.project_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->project_link(), output);
  }

  // optional string project_title = 2;
  if (this->project_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_title().data(), this->project_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Project.project_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->project_title(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.Project)
}

::google::protobuf::uint8* Project::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.Project)
  // optional string project_link = 1;
  if (this->project_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_link().data(), this->project_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Project.project_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->project_link(), target);
  }

  // optional string project_title = 2;
  if (this->project_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->project_title().data(), this->project_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.Project.project_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->project_title(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.Project)
  return target;
}

size_t Project::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.Project)
  size_t total_size = 0;

  // optional string project_link = 1;
  if (this->project_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_link());
  }

  // optional string project_title = 2;
  if (this->project_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->project_title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.Project)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Project* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Project>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.Project)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.Project)
    UnsafeMergeFrom(*source);
  }
}

void Project::MergeFrom(const Project& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.Project)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void Project::UnsafeMergeFrom(const Project& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.project_link().size() > 0) {

    project_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_link_);
  }
  if (from.project_title().size() > 0) {

    project_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.project_title_);
  }
}

void Project::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.Project)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project::CopyFrom(const Project& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.Project)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool Project::IsInitialized() const {

  return true;
}

void Project::Swap(Project* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Project::InternalSwap(Project* other) {
  project_link_.Swap(&other->project_link_);
  project_title_.Swap(&other->project_title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Project::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_descriptor_;
  metadata.reflection = Project_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Project

// optional string project_link = 1;
void Project::clear_project_link() {
  project_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Project::project_link() const {
  // @@protoc_insertion_point(field_get:main.Project.project_link)
  return project_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Project::set_project_link(const ::std::string& value) {
  
  project_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Project.project_link)
}
void Project::set_project_link(const char* value) {
  
  project_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Project.project_link)
}
void Project::set_project_link(const char* value, size_t size) {
  
  project_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Project.project_link)
}
::std::string* Project::mutable_project_link() {
  
  // @@protoc_insertion_point(field_mutable:main.Project.project_link)
  return project_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Project::release_project_link() {
  // @@protoc_insertion_point(field_release:main.Project.project_link)
  
  return project_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Project::set_allocated_project_link(::std::string* project_link) {
  if (project_link != NULL) {
    
  } else {
    
  }
  project_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_link);
  // @@protoc_insertion_point(field_set_allocated:main.Project.project_link)
}

// optional string project_title = 2;
void Project::clear_project_title() {
  project_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Project::project_title() const {
  // @@protoc_insertion_point(field_get:main.Project.project_title)
  return project_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Project::set_project_title(const ::std::string& value) {
  
  project_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.Project.project_title)
}
void Project::set_project_title(const char* value) {
  
  project_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.Project.project_title)
}
void Project::set_project_title(const char* value, size_t size) {
  
  project_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.Project.project_title)
}
::std::string* Project::mutable_project_title() {
  
  // @@protoc_insertion_point(field_mutable:main.Project.project_title)
  return project_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Project::release_project_title() {
  // @@protoc_insertion_point(field_release:main.Project.project_title)
  
  return project_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Project::set_allocated_project_title(::std::string* project_title) {
  if (project_title != NULL) {
    
  } else {
    
  }
  project_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), project_title);
  // @@protoc_insertion_point(field_set_allocated:main.Project.project_title)
}

inline const Project* Project::internal_default_instance() {
  return &Project_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)
