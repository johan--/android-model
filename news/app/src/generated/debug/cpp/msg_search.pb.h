// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_search.proto

#ifndef PROTOBUF_msg_5fsearch_2eproto__INCLUDED
#define PROTOBUF_msg_5fsearch_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "any.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fsearch_2eproto();
void protobuf_InitDefaults_msg_5fsearch_2eproto();
void protobuf_AssignDesc_msg_5fsearch_2eproto();
void protobuf_ShutdownFile_msg_5fsearch_2eproto();

class HotThemesRequest;
class HotThemesResponse;
class SearchHistoryRequest;
class SearchHistoryResponse;

// ===================================================================

class HotThemesRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.HotThemesRequest) */ {
 public:
  HotThemesRequest();
  virtual ~HotThemesRequest();

  HotThemesRequest(const HotThemesRequest& from);

  inline HotThemesRequest& operator=(const HotThemesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HotThemesRequest& default_instance();

  static const HotThemesRequest* internal_default_instance();

  void Swap(HotThemesRequest* other);

  // implements Message ----------------------------------------------

  inline HotThemesRequest* New() const { return New(NULL); }

  HotThemesRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HotThemesRequest& from);
  void MergeFrom(const HotThemesRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HotThemesRequest* other);
  void UnsafeMergeFrom(const HotThemesRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 page_number = 1;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 1;
  ::google::protobuf::int32 page_number() const;
  void set_page_number(::google::protobuf::int32 value);

  // optional int32 page_size = 2;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 2;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.HotThemesRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 page_number_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fsearch_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fsearch_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_msg_5fsearch_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HotThemesRequest> HotThemesRequest_default_instance_;

// -------------------------------------------------------------------

class HotThemesResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.HotThemesResponse) */ {
 public:
  HotThemesResponse();
  virtual ~HotThemesResponse();

  HotThemesResponse(const HotThemesResponse& from);

  inline HotThemesResponse& operator=(const HotThemesResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HotThemesResponse& default_instance();

  static const HotThemesResponse* internal_default_instance();

  void Swap(HotThemesResponse* other);

  // implements Message ----------------------------------------------

  inline HotThemesResponse* New() const { return New(NULL); }

  HotThemesResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const HotThemesResponse& from);
  void MergeFrom(const HotThemesResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(HotThemesResponse* other);
  void UnsafeMergeFrom(const HotThemesResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string themes_title = 1;
  int themes_title_size() const;
  void clear_themes_title();
  static const int kThemesTitleFieldNumber = 1;
  const ::std::string& themes_title(int index) const;
  ::std::string* mutable_themes_title(int index);
  void set_themes_title(int index, const ::std::string& value);
  void set_themes_title(int index, const char* value);
  void set_themes_title(int index, const char* value, size_t size);
  ::std::string* add_themes_title();
  void add_themes_title(const ::std::string& value);
  void add_themes_title(const char* value);
  void add_themes_title(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& themes_title() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_themes_title();

  // @@protoc_insertion_point(class_scope:personal.HotThemesResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> themes_title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fsearch_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fsearch_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_msg_5fsearch_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<HotThemesResponse> HotThemesResponse_default_instance_;

// -------------------------------------------------------------------

class SearchHistoryRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.SearchHistoryRequest) */ {
 public:
  SearchHistoryRequest();
  virtual ~SearchHistoryRequest();

  SearchHistoryRequest(const SearchHistoryRequest& from);

  inline SearchHistoryRequest& operator=(const SearchHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchHistoryRequest& default_instance();

  static const SearchHistoryRequest* internal_default_instance();

  void Swap(SearchHistoryRequest* other);

  // implements Message ----------------------------------------------

  inline SearchHistoryRequest* New() const { return New(NULL); }

  SearchHistoryRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchHistoryRequest& from);
  void MergeFrom(const SearchHistoryRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchHistoryRequest* other);
  void UnsafeMergeFrom(const SearchHistoryRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional int32 page_number = 2;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 2;
  ::google::protobuf::int32 page_number() const;
  void set_page_number(::google::protobuf::int32 value);

  // optional int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.SearchHistoryRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::int32 page_number_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fsearch_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fsearch_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_msg_5fsearch_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchHistoryRequest> SearchHistoryRequest_default_instance_;

// -------------------------------------------------------------------

class SearchHistoryResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.SearchHistoryResponse) */ {
 public:
  SearchHistoryResponse();
  virtual ~SearchHistoryResponse();

  SearchHistoryResponse(const SearchHistoryResponse& from);

  inline SearchHistoryResponse& operator=(const SearchHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchHistoryResponse& default_instance();

  static const SearchHistoryResponse* internal_default_instance();

  void Swap(SearchHistoryResponse* other);

  // implements Message ----------------------------------------------

  inline SearchHistoryResponse* New() const { return New(NULL); }

  SearchHistoryResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SearchHistoryResponse& from);
  void MergeFrom(const SearchHistoryResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SearchHistoryResponse* other);
  void UnsafeMergeFrom(const SearchHistoryResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string history_title = 1;
  int history_title_size() const;
  void clear_history_title();
  static const int kHistoryTitleFieldNumber = 1;
  const ::std::string& history_title(int index) const;
  ::std::string* mutable_history_title(int index);
  void set_history_title(int index, const ::std::string& value);
  void set_history_title(int index, const char* value);
  void set_history_title(int index, const char* value, size_t size);
  ::std::string* add_history_title();
  void add_history_title(const ::std::string& value);
  void add_history_title(const char* value);
  void add_history_title(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& history_title() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_history_title();

  // @@protoc_insertion_point(class_scope:personal.SearchHistoryResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> history_title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fsearch_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fsearch_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fsearch_2eproto();
  friend void protobuf_ShutdownFile_msg_5fsearch_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<SearchHistoryResponse> SearchHistoryResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// HotThemesRequest

// optional int32 page_number = 1;
inline void HotThemesRequest::clear_page_number() {
  page_number_ = 0;
}
inline ::google::protobuf::int32 HotThemesRequest::page_number() const {
  // @@protoc_insertion_point(field_get:personal.HotThemesRequest.page_number)
  return page_number_;
}
inline void HotThemesRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:personal.HotThemesRequest.page_number)
}

// optional int32 page_size = 2;
inline void HotThemesRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 HotThemesRequest::page_size() const {
  // @@protoc_insertion_point(field_get:personal.HotThemesRequest.page_size)
  return page_size_;
}
inline void HotThemesRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:personal.HotThemesRequest.page_size)
}

inline const HotThemesRequest* HotThemesRequest::internal_default_instance() {
  return &HotThemesRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// HotThemesResponse

// repeated string themes_title = 1;
inline int HotThemesResponse::themes_title_size() const {
  return themes_title_.size();
}
inline void HotThemesResponse::clear_themes_title() {
  themes_title_.Clear();
}
inline const ::std::string& HotThemesResponse::themes_title(int index) const {
  // @@protoc_insertion_point(field_get:personal.HotThemesResponse.themes_title)
  return themes_title_.Get(index);
}
inline ::std::string* HotThemesResponse::mutable_themes_title(int index) {
  // @@protoc_insertion_point(field_mutable:personal.HotThemesResponse.themes_title)
  return themes_title_.Mutable(index);
}
inline void HotThemesResponse::set_themes_title(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.HotThemesResponse.themes_title)
  themes_title_.Mutable(index)->assign(value);
}
inline void HotThemesResponse::set_themes_title(int index, const char* value) {
  themes_title_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:personal.HotThemesResponse.themes_title)
}
inline void HotThemesResponse::set_themes_title(int index, const char* value, size_t size) {
  themes_title_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:personal.HotThemesResponse.themes_title)
}
inline ::std::string* HotThemesResponse::add_themes_title() {
  // @@protoc_insertion_point(field_add_mutable:personal.HotThemesResponse.themes_title)
  return themes_title_.Add();
}
inline void HotThemesResponse::add_themes_title(const ::std::string& value) {
  themes_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:personal.HotThemesResponse.themes_title)
}
inline void HotThemesResponse::add_themes_title(const char* value) {
  themes_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:personal.HotThemesResponse.themes_title)
}
inline void HotThemesResponse::add_themes_title(const char* value, size_t size) {
  themes_title_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:personal.HotThemesResponse.themes_title)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
HotThemesResponse::themes_title() const {
  // @@protoc_insertion_point(field_list:personal.HotThemesResponse.themes_title)
  return themes_title_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
HotThemesResponse::mutable_themes_title() {
  // @@protoc_insertion_point(field_mutable_list:personal.HotThemesResponse.themes_title)
  return &themes_title_;
}

inline const HotThemesResponse* HotThemesResponse::internal_default_instance() {
  return &HotThemesResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// SearchHistoryRequest

// optional string user_id = 1;
inline void SearchHistoryRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchHistoryRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.SearchHistoryRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchHistoryRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.SearchHistoryRequest.user_id)
}
inline void SearchHistoryRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.SearchHistoryRequest.user_id)
}
inline void SearchHistoryRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.SearchHistoryRequest.user_id)
}
inline ::std::string* SearchHistoryRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.SearchHistoryRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchHistoryRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.SearchHistoryRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchHistoryRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.SearchHistoryRequest.user_id)
}

// optional int32 page_number = 2;
inline void SearchHistoryRequest::clear_page_number() {
  page_number_ = 0;
}
inline ::google::protobuf::int32 SearchHistoryRequest::page_number() const {
  // @@protoc_insertion_point(field_get:personal.SearchHistoryRequest.page_number)
  return page_number_;
}
inline void SearchHistoryRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:personal.SearchHistoryRequest.page_number)
}

// optional int32 page_size = 3;
inline void SearchHistoryRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 SearchHistoryRequest::page_size() const {
  // @@protoc_insertion_point(field_get:personal.SearchHistoryRequest.page_size)
  return page_size_;
}
inline void SearchHistoryRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:personal.SearchHistoryRequest.page_size)
}

inline const SearchHistoryRequest* SearchHistoryRequest::internal_default_instance() {
  return &SearchHistoryRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// SearchHistoryResponse

// repeated string history_title = 1;
inline int SearchHistoryResponse::history_title_size() const {
  return history_title_.size();
}
inline void SearchHistoryResponse::clear_history_title() {
  history_title_.Clear();
}
inline const ::std::string& SearchHistoryResponse::history_title(int index) const {
  // @@protoc_insertion_point(field_get:personal.SearchHistoryResponse.history_title)
  return history_title_.Get(index);
}
inline ::std::string* SearchHistoryResponse::mutable_history_title(int index) {
  // @@protoc_insertion_point(field_mutable:personal.SearchHistoryResponse.history_title)
  return history_title_.Mutable(index);
}
inline void SearchHistoryResponse::set_history_title(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.SearchHistoryResponse.history_title)
  history_title_.Mutable(index)->assign(value);
}
inline void SearchHistoryResponse::set_history_title(int index, const char* value) {
  history_title_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:personal.SearchHistoryResponse.history_title)
}
inline void SearchHistoryResponse::set_history_title(int index, const char* value, size_t size) {
  history_title_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:personal.SearchHistoryResponse.history_title)
}
inline ::std::string* SearchHistoryResponse::add_history_title() {
  // @@protoc_insertion_point(field_add_mutable:personal.SearchHistoryResponse.history_title)
  return history_title_.Add();
}
inline void SearchHistoryResponse::add_history_title(const ::std::string& value) {
  history_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:personal.SearchHistoryResponse.history_title)
}
inline void SearchHistoryResponse::add_history_title(const char* value) {
  history_title_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:personal.SearchHistoryResponse.history_title)
}
inline void SearchHistoryResponse::add_history_title(const char* value, size_t size) {
  history_title_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:personal.SearchHistoryResponse.history_title)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
SearchHistoryResponse::history_title() const {
  // @@protoc_insertion_point(field_list:personal.SearchHistoryResponse.history_title)
  return history_title_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
SearchHistoryResponse::mutable_history_title() {
  // @@protoc_insertion_point(field_mutable_list:personal.SearchHistoryResponse.history_title)
  return &history_title_;
}

inline const SearchHistoryResponse* SearchHistoryResponse::internal_default_instance() {
  return &SearchHistoryResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fsearch_2eproto__INCLUDED
