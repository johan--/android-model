// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscribe/msg_subscribe_perio.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "subscribe/msg_subscribe_perio.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace subscribe {

namespace {

const ::google::protobuf::Descriptor* SubscribePerioRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubscribePerioListResponse_SubscribePerioMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubscribePerioListResponse_SubscribePerioMessage_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "subscribe/msg_subscribe_perio.proto");
  GOOGLE_CHECK(file != NULL);
  SubscribePerioRequest_descriptor_ = file->message_type(0);
  static const int SubscribePerioRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, perio_id_),
  };
  SubscribePerioRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioRequest_descriptor_,
      SubscribePerioRequest::internal_default_instance(),
      SubscribePerioRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioRequest, _internal_metadata_));
  SubscribePerioResponse_descriptor_ = file->message_type(1);
  static const int SubscribePerioResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, subscribe_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, error_),
  };
  SubscribePerioResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioResponse_descriptor_,
      SubscribePerioResponse::internal_default_instance(),
      SubscribePerioResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioResponse, _internal_metadata_));
  SubscribePerioListRequest_descriptor_ = file->message_type(2);
  static const int SubscribePerioListRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, page_size_),
  };
  SubscribePerioListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListRequest_descriptor_,
      SubscribePerioListRequest::internal_default_instance(),
      SubscribePerioListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListRequest, _internal_metadata_));
  SubscribePerioListResponse_descriptor_ = file->message_type(3);
  static const int SubscribePerioListResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, subscribe_perio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, has_more_),
  };
  SubscribePerioListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListResponse_descriptor_,
      SubscribePerioListResponse::internal_default_instance(),
      SubscribePerioListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse, _internal_metadata_));
  SubscribePerioListResponse_SubscribePerioMessage_descriptor_ = SubscribePerioListResponse_descriptor_->nested_type(0);
  static const int SubscribePerioListResponse_SubscribePerioMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_cover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, perio_society_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, add_time_),
  };
  SubscribePerioListResponse_SubscribePerioMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubscribePerioListResponse_SubscribePerioMessage_descriptor_,
      SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance(),
      SubscribePerioListResponse_SubscribePerioMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubscribePerioListResponse_SubscribePerioMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubscribePerioListResponse_SubscribePerioMessage, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioRequest_descriptor_, SubscribePerioRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioResponse_descriptor_, SubscribePerioResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListRequest_descriptor_, SubscribePerioListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListResponse_descriptor_, SubscribePerioListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubscribePerioListResponse_SubscribePerioMessage_descriptor_, SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  SubscribePerioRequest_default_instance_.Shutdown();
  delete SubscribePerioRequest_reflection_;
  SubscribePerioResponse_default_instance_.Shutdown();
  delete SubscribePerioResponse_reflection_;
  SubscribePerioListRequest_default_instance_.Shutdown();
  delete SubscribePerioListRequest_reflection_;
  SubscribePerioListResponse_default_instance_.Shutdown();
  delete SubscribePerioListResponse_reflection_;
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.Shutdown();
  delete SubscribePerioListResponse_SubscribePerioMessage_reflection_;
}

void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioRequest_default_instance_.DefaultConstruct();
  SubscribePerioResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListRequest_default_instance_.DefaultConstruct();
  SubscribePerioListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.DefaultConstruct();
  SubscribePerioRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubscribePerioListResponse_SubscribePerioMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_);
void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_,
                 &protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl);
}
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#subscribe/msg_subscribe_perio.proto\022\ts"
    "ubscribe\032\031google/protobuf/any.proto\032\032grp"
    "cCommon/msg_error.proto\":\n\025SubscribePeri"
    "oRequest\022\017\n\007user_id\030\001 \001(\t\022\020\n\010perio_id\030\002 "
    "\001(\t\"Y\n\026SubscribePerioResponse\022\031\n\021subscri"
    "be_success\030\001 \001(\010\022$\n\005error\030\002 \001(\0132\025.grpcCo"
    "mmon.GrpcError\"T\n\031SubscribePerioListRequ"
    "est\022\017\n\007user_id\030\001 \001(\t\022\023\n\013page_number\030\002 \001("
    "\005\022\021\n\tpage_size\030\003 \001(\005\"\247\002\n\032SubscribePerioL"
    "istResponse\022T\n\017subscribe_perio\030\001 \003(\0132;.s"
    "ubscribe.SubscribePerioListResponse.Subs"
    "cribePerioMessage\022$\n\005error\030\002 \001(\0132\025.grpcC"
    "ommon.GrpcError\022\020\n\010has_more\030\003 \001(\010\032{\n\025Sub"
    "scribePerioMessage\022\020\n\010perio_id\030\001 \001(\t\022\022\n\n"
    "perio_name\030\002 \001(\t\022\023\n\013perio_cover\030\003 \001(\t\022\025\n"
    "\rperio_society\030\004 \001(\t\022\020\n\010add_time\030\005 \001(\tB "
    "\n\025com.wanfang.subscribeP\001\242\002\004WFPRb\006proto3", 680);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "subscribe/msg_subscribe_perio.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_5fperio_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_);
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_once_,
                 &protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto {
  StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto() {
    protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  }
} static_descriptor_initializer_subscribe_2fmsg_5fsubscribe_5fperio_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioRequest::kUserIdFieldNumber;
const int SubscribePerioRequest::kPerioIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioRequest::SubscribePerioRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioRequest)
}

void SubscribePerioRequest::InitAsDefaultInstance() {
}

SubscribePerioRequest::SubscribePerioRequest(const SubscribePerioRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioRequest)
}

void SubscribePerioRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubscribePerioRequest::~SubscribePerioRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioRequest)
  SharedDtor();
}

void SubscribePerioRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioRequest_descriptor_;
}

const SubscribePerioRequest& SubscribePerioRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioRequest> SubscribePerioRequest_default_instance_;

SubscribePerioRequest* SubscribePerioRequest::New(::google::protobuf::Arena* arena) const {
  SubscribePerioRequest* n = new SubscribePerioRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubscribePerioRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_id;
        break;
      }

      // optional string perio_id = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioRequest.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioRequest)
  return false;
#undef DO_
}

void SubscribePerioRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioRequest)
}

::google::protobuf::uint8* SubscribePerioRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioRequest.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioRequest)
  return target;
}

size_t SubscribePerioRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string perio_id = 2;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioRequest::MergeFrom(const SubscribePerioRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioRequest::UnsafeMergeFrom(const SubscribePerioRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
}

void SubscribePerioRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioRequest::CopyFrom(const SubscribePerioRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioRequest::IsInitialized() const {

  return true;
}

void SubscribePerioRequest::Swap(SubscribePerioRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioRequest::InternalSwap(SubscribePerioRequest* other) {
  user_id_.Swap(&other->user_id_);
  perio_id_.Swap(&other->perio_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioRequest_descriptor_;
  metadata.reflection = SubscribePerioRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioRequest

// optional string user_id = 1;
void SubscribePerioRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioRequest.user_id)
}
void SubscribePerioRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioRequest.user_id)
}
void SubscribePerioRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioRequest.user_id)
}
::std::string* SubscribePerioRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioRequest.user_id)
}

// optional string perio_id = 2;
void SubscribePerioRequest::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioRequest::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioRequest.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioRequest.perio_id)
}
void SubscribePerioRequest::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioRequest.perio_id)
}
void SubscribePerioRequest::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioRequest.perio_id)
}
::std::string* SubscribePerioRequest::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioRequest.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioRequest::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioRequest.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioRequest::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioRequest.perio_id)
}

inline const SubscribePerioRequest* SubscribePerioRequest::internal_default_instance() {
  return &SubscribePerioRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioResponse::kSubscribeSuccessFieldNumber;
const int SubscribePerioResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioResponse::SubscribePerioResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioResponse)
}

void SubscribePerioResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubscribePerioResponse::SubscribePerioResponse(const SubscribePerioResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioResponse)
}

void SubscribePerioResponse::SharedCtor() {
  error_ = NULL;
  subscribe_success_ = false;
  _cached_size_ = 0;
}

SubscribePerioResponse::~SubscribePerioResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioResponse)
  SharedDtor();
}

void SubscribePerioResponse::SharedDtor() {
  if (this != &SubscribePerioResponse_default_instance_.get()) {
    delete error_;
  }
}

void SubscribePerioResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioResponse_descriptor_;
}

const SubscribePerioResponse& SubscribePerioResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioResponse> SubscribePerioResponse_default_instance_;

SubscribePerioResponse* SubscribePerioResponse::New(::google::protobuf::Arena* arena) const {
  SubscribePerioResponse* n = new SubscribePerioResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioResponse)
  subscribe_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool SubscribePerioResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool subscribe_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribe_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioResponse)
  return false;
#undef DO_
}

void SubscribePerioResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioResponse)
  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->subscribe_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioResponse)
}

::google::protobuf::uint8* SubscribePerioResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioResponse)
  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->subscribe_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioResponse)
  return target;
}

size_t SubscribePerioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioResponse)
  size_t total_size = 0;

  // optional bool subscribe_success = 1;
  if (this->subscribe_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioResponse::MergeFrom(const SubscribePerioResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioResponse::UnsafeMergeFrom(const SubscribePerioResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.subscribe_success() != 0) {
    set_subscribe_success(from.subscribe_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void SubscribePerioResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioResponse::CopyFrom(const SubscribePerioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioResponse::IsInitialized() const {

  return true;
}

void SubscribePerioResponse::Swap(SubscribePerioResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioResponse::InternalSwap(SubscribePerioResponse* other) {
  std::swap(subscribe_success_, other->subscribe_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioResponse_descriptor_;
  metadata.reflection = SubscribePerioResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioResponse

// optional bool subscribe_success = 1;
void SubscribePerioResponse::clear_subscribe_success() {
  subscribe_success_ = false;
}
bool SubscribePerioResponse::subscribe_success() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioResponse.subscribe_success)
  return subscribe_success_;
}
void SubscribePerioResponse::set_subscribe_success(bool value) {
  
  subscribe_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioResponse.subscribe_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool SubscribePerioResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubscribePerioResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubscribePerioResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubscribePerioResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubscribePerioResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubscribePerioResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioResponse.error)
}

inline const SubscribePerioResponse* SubscribePerioResponse::internal_default_instance() {
  return &SubscribePerioResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListRequest::kUserIdFieldNumber;
const int SubscribePerioListRequest::kPageNumberFieldNumber;
const int SubscribePerioListRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListRequest::SubscribePerioListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListRequest)
}

void SubscribePerioListRequest::InitAsDefaultInstance() {
}

SubscribePerioListRequest::SubscribePerioListRequest(const SubscribePerioListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListRequest)
}

void SubscribePerioListRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_number_) + sizeof(page_size_));
  _cached_size_ = 0;
}

SubscribePerioListRequest::~SubscribePerioListRequest() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListRequest)
  SharedDtor();
}

void SubscribePerioListRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListRequest_descriptor_;
}

const SubscribePerioListRequest& SubscribePerioListRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListRequest> SubscribePerioListRequest_default_instance_;

SubscribePerioListRequest* SubscribePerioListRequest::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListRequest* n = new SubscribePerioListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(SubscribePerioListRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<SubscribePerioListRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(page_number_, page_size_);
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool SubscribePerioListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_number;
        break;
      }

      // optional int32 page_number = 2;
      case 2: {
        if (tag == 16) {
         parse_page_number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListRequest)
  return false;
#undef DO_
}

void SubscribePerioListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListRequest)
}

::google::protobuf::uint8* SubscribePerioListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListRequest)
  return target;
}

size_t SubscribePerioListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListRequest::MergeFrom(const SubscribePerioListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListRequest::UnsafeMergeFrom(const SubscribePerioListRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void SubscribePerioListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListRequest::CopyFrom(const SubscribePerioListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListRequest::IsInitialized() const {

  return true;
}

void SubscribePerioListRequest::Swap(SubscribePerioListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListRequest::InternalSwap(SubscribePerioListRequest* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(page_number_, other->page_number_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListRequest_descriptor_;
  metadata.reflection = SubscribePerioListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListRequest

// optional string user_id = 1;
void SubscribePerioListRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.user_id)
}
void SubscribePerioListRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListRequest.user_id)
}
void SubscribePerioListRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListRequest.user_id)
}
::std::string* SubscribePerioListRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListRequest.user_id)
}

// optional int32 page_number = 2;
void SubscribePerioListRequest::clear_page_number() {
  page_number_ = 0;
}
::google::protobuf::int32 SubscribePerioListRequest::page_number() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.page_number)
  return page_number_;
}
void SubscribePerioListRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.page_number)
}

// optional int32 page_size = 3;
void SubscribePerioListRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 SubscribePerioListRequest::page_size() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListRequest.page_size)
  return page_size_;
}
void SubscribePerioListRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListRequest.page_size)
}

inline const SubscribePerioListRequest* SubscribePerioListRequest::internal_default_instance() {
  return &SubscribePerioListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioIdFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioNameFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioCoverFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kPerioSocietyFieldNumber;
const int SubscribePerioListResponse_SubscribePerioMessage::kAddTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListResponse_SubscribePerioMessage::SubscribePerioListResponse_SubscribePerioMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

void SubscribePerioListResponse_SubscribePerioMessage::InitAsDefaultInstance() {
}

SubscribePerioListResponse_SubscribePerioMessage::SubscribePerioListResponse_SubscribePerioMessage(const SubscribePerioListResponse_SubscribePerioMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

void SubscribePerioListResponse_SubscribePerioMessage::SharedCtor() {
  perio_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SubscribePerioListResponse_SubscribePerioMessage::~SubscribePerioListResponse_SubscribePerioMessage() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  SharedDtor();
}

void SubscribePerioListResponse_SubscribePerioMessage::SharedDtor() {
  perio_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribePerioListResponse_SubscribePerioMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListResponse_SubscribePerioMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListResponse_SubscribePerioMessage_descriptor_;
}

const SubscribePerioListResponse_SubscribePerioMessage& SubscribePerioListResponse_SubscribePerioMessage::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListResponse_SubscribePerioMessage> SubscribePerioListResponse_SubscribePerioMessage_default_instance_;

SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse_SubscribePerioMessage::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListResponse_SubscribePerioMessage* n = new SubscribePerioListResponse_SubscribePerioMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListResponse_SubscribePerioMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_cover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_society_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SubscribePerioListResponse_SubscribePerioMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string perio_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_id().data(), this->perio_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_name;
        break;
      }

      // optional string perio_name = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_name().data(), this->perio_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_perio_cover;
        break;
      }

      // optional string perio_cover = 3;
      case 3: {
        if (tag == 26) {
         parse_perio_cover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_cover()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_cover().data(), this->perio_cover().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_perio_society;
        break;
      }

      // optional string perio_society = 4;
      case 4: {
        if (tag == 34) {
         parse_perio_society:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_society()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_society().data(), this->perio_society().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_add_time;
        break;
      }

      // optional string add_time = 5;
      case 5: {
        if (tag == 42) {
         parse_add_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_add_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->add_time().data(), this->add_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return false;
#undef DO_
}

void SubscribePerioListResponse_SubscribePerioMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->perio_id(), output);
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_name().data(), this->perio_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_name(), output);
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_cover().data(), this->perio_cover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->perio_cover(), output);
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_society().data(), this->perio_society().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->perio_society(), output);
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->add_time(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
}

::google::protobuf::uint8* SubscribePerioListResponse_SubscribePerioMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_id().data(), this->perio_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->perio_id(), target);
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_name().data(), this->perio_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_name(), target);
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_cover().data(), this->perio_cover().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->perio_cover(), target);
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_society().data(), this->perio_society().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->perio_society(), target);
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->add_time(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  return target;
}

size_t SubscribePerioListResponse_SubscribePerioMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  size_t total_size = 0;

  // optional string perio_id = 1;
  if (this->perio_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_id());
  }

  // optional string perio_name = 2;
  if (this->perio_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_name());
  }

  // optional string perio_cover = 3;
  if (this->perio_cover().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_cover());
  }

  // optional string perio_society = 4;
  if (this->perio_society().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_society());
  }

  // optional string add_time = 5;
  if (this->add_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->add_time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListResponse_SubscribePerioMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListResponse_SubscribePerioMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListResponse_SubscribePerioMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::MergeFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::UnsafeMergeFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.perio_id().size() > 0) {

    perio_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_id_);
  }
  if (from.perio_name().size() > 0) {

    perio_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_name_);
  }
  if (from.perio_cover().size() > 0) {

    perio_cover_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_cover_);
  }
  if (from.perio_society().size() > 0) {

    perio_society_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_society_);
  }
  if (from.add_time().size() > 0) {

    add_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_time_);
  }
}

void SubscribePerioListResponse_SubscribePerioMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListResponse_SubscribePerioMessage::CopyFrom(const SubscribePerioListResponse_SubscribePerioMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListResponse.SubscribePerioMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListResponse_SubscribePerioMessage::IsInitialized() const {

  return true;
}

void SubscribePerioListResponse_SubscribePerioMessage::Swap(SubscribePerioListResponse_SubscribePerioMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListResponse_SubscribePerioMessage::InternalSwap(SubscribePerioListResponse_SubscribePerioMessage* other) {
  perio_id_.Swap(&other->perio_id_);
  perio_name_.Swap(&other->perio_name_);
  perio_cover_.Swap(&other->perio_cover_);
  perio_society_.Swap(&other->perio_society_);
  add_time_.Swap(&other->add_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListResponse_SubscribePerioMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListResponse_SubscribePerioMessage_descriptor_;
  metadata.reflection = SubscribePerioListResponse_SubscribePerioMessage_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribePerioListResponse::kSubscribePerioFieldNumber;
const int SubscribePerioListResponse::kErrorFieldNumber;
const int SubscribePerioListResponse::kHasMoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribePerioListResponse::SubscribePerioListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.SubscribePerioListResponse)
}

void SubscribePerioListResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubscribePerioListResponse::SubscribePerioListResponse(const SubscribePerioListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.SubscribePerioListResponse)
}

void SubscribePerioListResponse::SharedCtor() {
  error_ = NULL;
  has_more_ = false;
  _cached_size_ = 0;
}

SubscribePerioListResponse::~SubscribePerioListResponse() {
  // @@protoc_insertion_point(destructor:subscribe.SubscribePerioListResponse)
  SharedDtor();
}

void SubscribePerioListResponse::SharedDtor() {
  if (this != &SubscribePerioListResponse_default_instance_.get()) {
    delete error_;
  }
}

void SubscribePerioListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubscribePerioListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubscribePerioListResponse_descriptor_;
}

const SubscribePerioListResponse& SubscribePerioListResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_5fperio_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubscribePerioListResponse> SubscribePerioListResponse_default_instance_;

SubscribePerioListResponse* SubscribePerioListResponse::New(::google::protobuf::Arena* arena) const {
  SubscribePerioListResponse* n = new SubscribePerioListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubscribePerioListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.SubscribePerioListResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  has_more_ = false;
  subscribe_perio_.Clear();
}

bool SubscribePerioListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.SubscribePerioListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_subscribe_perio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_subscribe_perio()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_subscribe_perio;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_more;
        break;
      }

      // optional bool has_more = 3;
      case 3: {
        if (tag == 24) {
         parse_has_more:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.SubscribePerioListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.SubscribePerioListResponse)
  return false;
#undef DO_
}

void SubscribePerioListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.SubscribePerioListResponse)
  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  for (unsigned int i = 0, n = this->subscribe_perio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->subscribe_perio(i), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_more(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.SubscribePerioListResponse)
}

::google::protobuf::uint8* SubscribePerioListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.SubscribePerioListResponse)
  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  for (unsigned int i = 0, n = this->subscribe_perio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->subscribe_perio(i), false, target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_more(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.SubscribePerioListResponse)
  return target;
}

size_t SubscribePerioListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.SubscribePerioListResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  // repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
  {
    unsigned int count = this->subscribe_perio_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscribe_perio(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubscribePerioListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.SubscribePerioListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubscribePerioListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribePerioListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.SubscribePerioListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.SubscribePerioListResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubscribePerioListResponse::MergeFrom(const SubscribePerioListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.SubscribePerioListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubscribePerioListResponse::UnsafeMergeFrom(const SubscribePerioListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  subscribe_perio_.MergeFrom(from.subscribe_perio_);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
}

void SubscribePerioListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.SubscribePerioListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribePerioListResponse::CopyFrom(const SubscribePerioListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.SubscribePerioListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubscribePerioListResponse::IsInitialized() const {

  return true;
}

void SubscribePerioListResponse::Swap(SubscribePerioListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribePerioListResponse::InternalSwap(SubscribePerioListResponse* other) {
  subscribe_perio_.UnsafeArenaSwap(&other->subscribe_perio_);
  std::swap(error_, other->error_);
  std::swap(has_more_, other->has_more_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubscribePerioListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubscribePerioListResponse_descriptor_;
  metadata.reflection = SubscribePerioListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubscribePerioListResponse_SubscribePerioMessage

// optional string perio_id = 1;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_id() {
  perio_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_id() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  return perio_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const ::std::string& value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const char* value) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_id(const char* value, size_t size) {
  
  perio_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  return perio_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_id() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
  
  return perio_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_id(::std::string* perio_id) {
  if (perio_id != NULL) {
    
  } else {
    
  }
  perio_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_id)
}

// optional string perio_name = 2;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_name() {
  perio_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_name() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  return perio_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const ::std::string& value) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const char* value) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_name(const char* value, size_t size) {
  
  perio_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_name() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  return perio_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_name() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
  
  return perio_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_name(::std::string* perio_name) {
  if (perio_name != NULL) {
    
  } else {
    
  }
  perio_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_name);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_name)
}

// optional string perio_cover = 3;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_cover() {
  perio_cover_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_cover() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  return perio_cover_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const ::std::string& value) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const char* value) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_cover(const char* value, size_t size) {
  
  perio_cover_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_cover() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  return perio_cover_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_cover() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
  
  return perio_cover_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_cover(::std::string* perio_cover) {
  if (perio_cover != NULL) {
    
  } else {
    
  }
  perio_cover_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_cover);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_cover)
}

// optional string perio_society = 4;
void SubscribePerioListResponse_SubscribePerioMessage::clear_perio_society() {
  perio_society_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::perio_society() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  return perio_society_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const ::std::string& value) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const char* value) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_perio_society(const char* value, size_t size) {
  
  perio_society_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_perio_society() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  return perio_society_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_perio_society() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
  
  return perio_society_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_perio_society(::std::string* perio_society) {
  if (perio_society != NULL) {
    
  } else {
    
  }
  perio_society_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_society);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.perio_society)
}

// optional string add_time = 5;
void SubscribePerioListResponse_SubscribePerioMessage::clear_add_time() {
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubscribePerioListResponse_SubscribePerioMessage::add_time() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  return add_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const ::std::string& value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const char* value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
void SubscribePerioListResponse_SubscribePerioMessage::set_add_time(const char* value, size_t size) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::mutable_add_time() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  return add_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubscribePerioListResponse_SubscribePerioMessage::release_add_time() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
  
  return add_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubscribePerioListResponse_SubscribePerioMessage::set_allocated_add_time(::std::string* add_time) {
  if (add_time != NULL) {
    
  } else {
    
  }
  add_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), add_time);
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.SubscribePerioMessage.add_time)
}

inline const SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse_SubscribePerioMessage::internal_default_instance() {
  return &SubscribePerioListResponse_SubscribePerioMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// SubscribePerioListResponse

// repeated .subscribe.SubscribePerioListResponse.SubscribePerioMessage subscribe_perio = 1;
int SubscribePerioListResponse::subscribe_perio_size() const {
  return subscribe_perio_.size();
}
void SubscribePerioListResponse::clear_subscribe_perio() {
  subscribe_perio_.Clear();
}
const ::subscribe::SubscribePerioListResponse_SubscribePerioMessage& SubscribePerioListResponse::subscribe_perio(int index) const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Get(index);
}
::subscribe::SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse::mutable_subscribe_perio(int index) {
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Mutable(index);
}
::subscribe::SubscribePerioListResponse_SubscribePerioMessage* SubscribePerioListResponse::add_subscribe_perio() {
  // @@protoc_insertion_point(field_add:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_.Add();
}
::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListResponse_SubscribePerioMessage >*
SubscribePerioListResponse::mutable_subscribe_perio() {
  // @@protoc_insertion_point(field_mutable_list:subscribe.SubscribePerioListResponse.subscribe_perio)
  return &subscribe_perio_;
}
const ::google::protobuf::RepeatedPtrField< ::subscribe::SubscribePerioListResponse_SubscribePerioMessage >&
SubscribePerioListResponse::subscribe_perio() const {
  // @@protoc_insertion_point(field_list:subscribe.SubscribePerioListResponse.subscribe_perio)
  return subscribe_perio_;
}

// optional .grpcCommon.GrpcError error = 2;
bool SubscribePerioListResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubscribePerioListResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubscribePerioListResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubscribePerioListResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.SubscribePerioListResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubscribePerioListResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.SubscribePerioListResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubscribePerioListResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.SubscribePerioListResponse.error)
}

// optional bool has_more = 3;
void SubscribePerioListResponse::clear_has_more() {
  has_more_ = false;
}
bool SubscribePerioListResponse::has_more() const {
  // @@protoc_insertion_point(field_get:subscribe.SubscribePerioListResponse.has_more)
  return has_more_;
}
void SubscribePerioListResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:subscribe.SubscribePerioListResponse.has_more)
}

inline const SubscribePerioListResponse* SubscribePerioListResponse::internal_default_instance() {
  return &SubscribePerioListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace subscribe

// @@protoc_insertion_point(global_scope)
