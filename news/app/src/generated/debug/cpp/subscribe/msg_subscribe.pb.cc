// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: subscribe/msg_subscribe.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "subscribe/msg_subscribe.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace subscribe {

namespace {

const ::google::protobuf::Descriptor* CancelSubscribeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelSubscribeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CancelSubscribeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CancelSubscribeResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSubscribePushEmailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSubscribePushEmailRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateSubscribePushEmailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateSubscribePushEmailResponse_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* CancelSubscribeType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto() {
  protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "subscribe/msg_subscribe.proto");
  GOOGLE_CHECK(file != NULL);
  CancelSubscribeRequest_descriptor_ = file->message_type(0);
  static const int CancelSubscribeRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeRequest, subscribe_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeRequest, cancel_type_),
  };
  CancelSubscribeRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CancelSubscribeRequest_descriptor_,
      CancelSubscribeRequest::internal_default_instance(),
      CancelSubscribeRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CancelSubscribeRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeRequest, _internal_metadata_));
  CancelSubscribeResponse_descriptor_ = file->message_type(1);
  static const int CancelSubscribeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeResponse, cancel_subscribe_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeResponse, error_),
  };
  CancelSubscribeResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CancelSubscribeResponse_descriptor_,
      CancelSubscribeResponse::internal_default_instance(),
      CancelSubscribeResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CancelSubscribeResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CancelSubscribeResponse, _internal_metadata_));
  UpdateSubscribePushEmailRequest_descriptor_ = file->message_type(2);
  static const int UpdateSubscribePushEmailRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailRequest, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailRequest, should_update_email_),
  };
  UpdateSubscribePushEmailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateSubscribePushEmailRequest_descriptor_,
      UpdateSubscribePushEmailRequest::internal_default_instance(),
      UpdateSubscribePushEmailRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateSubscribePushEmailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailRequest, _internal_metadata_));
  UpdateSubscribePushEmailResponse_descriptor_ = file->message_type(3);
  static const int UpdateSubscribePushEmailResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailResponse, update_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailResponse, error_),
  };
  UpdateSubscribePushEmailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateSubscribePushEmailResponse_descriptor_,
      UpdateSubscribePushEmailResponse::internal_default_instance(),
      UpdateSubscribePushEmailResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateSubscribePushEmailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateSubscribePushEmailResponse, _internal_metadata_));
  CancelSubscribeType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_subscribe_2fmsg_5fsubscribe_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CancelSubscribeRequest_descriptor_, CancelSubscribeRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CancelSubscribeResponse_descriptor_, CancelSubscribeResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateSubscribePushEmailRequest_descriptor_, UpdateSubscribePushEmailRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateSubscribePushEmailResponse_descriptor_, UpdateSubscribePushEmailResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto() {
  CancelSubscribeRequest_default_instance_.Shutdown();
  delete CancelSubscribeRequest_reflection_;
  CancelSubscribeResponse_default_instance_.Shutdown();
  delete CancelSubscribeResponse_reflection_;
  UpdateSubscribePushEmailRequest_default_instance_.Shutdown();
  delete UpdateSubscribePushEmailRequest_reflection_;
  UpdateSubscribePushEmailResponse_default_instance_.Shutdown();
  delete UpdateSubscribePushEmailResponse_reflection_;
}

void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CancelSubscribeRequest_default_instance_.DefaultConstruct();
  CancelSubscribeResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UpdateSubscribePushEmailRequest_default_instance_.DefaultConstruct();
  UpdateSubscribePushEmailResponse_default_instance_.DefaultConstruct();
  CancelSubscribeRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CancelSubscribeResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateSubscribePushEmailRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateSubscribePushEmailResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_once_);
void protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_once_,
                 &protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto_impl);
}
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035subscribe/msg_subscribe.proto\022\tsubscri"
    "be\032\031google/protobuf/any.proto\032\032grpcCommo"
    "n/msg_error.proto\"c\n\026CancelSubscribeRequ"
    "est\022\024\n\014subscribe_id\030\001 \001(\t\0223\n\013cancel_type"
    "\030\002 \001(\0162\036.subscribe.CancelSubscribeType\"a"
    "\n\027CancelSubscribeResponse\022 \n\030cancel_subs"
    "cribe_success\030\001 \001(\010\022$\n\005error\030\002 \001(\0132\025.grp"
    "cCommon.GrpcError\"^\n\037UpdateSubscribePush"
    "EmailRequest\022\017\n\007user_id\030\001 \001(\t\022\r\n\005email\030\002"
    " \001(\t\022\033\n\023should_update_email\030\003 \001(\010\"`\n Upd"
    "ateSubscribePushEmailResponse\022\026\n\016update_"
    "success\030\001 \001(\010\022$\n\005error\030\002 \001(\0132\025.grpcCommo"
    "n.GrpcError*9\n\023CancelSubscribeType\022\021\n\rDe"
    "leteKeyWord\020\000\022\017\n\013DeletePerio\020\001B \n\025com.wa"
    "nfang.subscribeP\001\242\002\004WFPRb\006proto3", 592);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "subscribe/msg_subscribe.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_subscribe_2fmsg_5fsubscribe_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_once_);
void protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_once_,
                 &protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_2eproto {
  StaticDescriptorInitializer_subscribe_2fmsg_5fsubscribe_2eproto() {
    protobuf_AddDesc_subscribe_2fmsg_5fsubscribe_2eproto();
  }
} static_descriptor_initializer_subscribe_2fmsg_5fsubscribe_2eproto_;
const ::google::protobuf::EnumDescriptor* CancelSubscribeType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelSubscribeType_descriptor_;
}
bool CancelSubscribeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSubscribeRequest::kSubscribeIdFieldNumber;
const int CancelSubscribeRequest::kCancelTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSubscribeRequest::CancelSubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.CancelSubscribeRequest)
}

void CancelSubscribeRequest::InitAsDefaultInstance() {
}

CancelSubscribeRequest::CancelSubscribeRequest(const CancelSubscribeRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.CancelSubscribeRequest)
}

void CancelSubscribeRequest::SharedCtor() {
  subscribe_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancel_type_ = 0;
  _cached_size_ = 0;
}

CancelSubscribeRequest::~CancelSubscribeRequest() {
  // @@protoc_insertion_point(destructor:subscribe.CancelSubscribeRequest)
  SharedDtor();
}

void CancelSubscribeRequest::SharedDtor() {
  subscribe_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelSubscribeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSubscribeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelSubscribeRequest_descriptor_;
}

const CancelSubscribeRequest& CancelSubscribeRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CancelSubscribeRequest> CancelSubscribeRequest_default_instance_;

CancelSubscribeRequest* CancelSubscribeRequest::New(::google::protobuf::Arena* arena) const {
  CancelSubscribeRequest* n = new CancelSubscribeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.CancelSubscribeRequest)
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cancel_type_ = 0;
}

bool CancelSubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.CancelSubscribeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string subscribe_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subscribe_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subscribe_id().data(), this->subscribe_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.CancelSubscribeRequest.subscribe_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_cancel_type;
        break;
      }

      // optional .subscribe.CancelSubscribeType cancel_type = 2;
      case 2: {
        if (tag == 16) {
         parse_cancel_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cancel_type(static_cast< ::subscribe::CancelSubscribeType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.CancelSubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.CancelSubscribeRequest)
  return false;
#undef DO_
}

void CancelSubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.CancelSubscribeRequest)
  // optional string subscribe_id = 1;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CancelSubscribeRequest.subscribe_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subscribe_id(), output);
  }

  // optional .subscribe.CancelSubscribeType cancel_type = 2;
  if (this->cancel_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->cancel_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.CancelSubscribeRequest)
}

::google::protobuf::uint8* CancelSubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.CancelSubscribeRequest)
  // optional string subscribe_id = 1;
  if (this->subscribe_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subscribe_id().data(), this->subscribe_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.CancelSubscribeRequest.subscribe_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subscribe_id(), target);
  }

  // optional .subscribe.CancelSubscribeType cancel_type = 2;
  if (this->cancel_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->cancel_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.CancelSubscribeRequest)
  return target;
}

size_t CancelSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.CancelSubscribeRequest)
  size_t total_size = 0;

  // optional string subscribe_id = 1;
  if (this->subscribe_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subscribe_id());
  }

  // optional .subscribe.CancelSubscribeType cancel_type = 2;
  if (this->cancel_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cancel_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.CancelSubscribeRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CancelSubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.CancelSubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.CancelSubscribeRequest)
    UnsafeMergeFrom(*source);
  }
}

void CancelSubscribeRequest::MergeFrom(const CancelSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.CancelSubscribeRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CancelSubscribeRequest::UnsafeMergeFrom(const CancelSubscribeRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.subscribe_id().size() > 0) {

    subscribe_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subscribe_id_);
  }
  if (from.cancel_type() != 0) {
    set_cancel_type(from.cancel_type());
  }
}

void CancelSubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.CancelSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSubscribeRequest::CopyFrom(const CancelSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.CancelSubscribeRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CancelSubscribeRequest::IsInitialized() const {

  return true;
}

void CancelSubscribeRequest::Swap(CancelSubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSubscribeRequest::InternalSwap(CancelSubscribeRequest* other) {
  subscribe_id_.Swap(&other->subscribe_id_);
  std::swap(cancel_type_, other->cancel_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSubscribeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelSubscribeRequest_descriptor_;
  metadata.reflection = CancelSubscribeRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSubscribeRequest

// optional string subscribe_id = 1;
void CancelSubscribeRequest::clear_subscribe_id() {
  subscribe_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CancelSubscribeRequest::subscribe_id() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeRequest.subscribe_id)
  return subscribe_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSubscribeRequest::set_subscribe_id(const ::std::string& value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeRequest.subscribe_id)
}
void CancelSubscribeRequest::set_subscribe_id(const char* value) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.CancelSubscribeRequest.subscribe_id)
}
void CancelSubscribeRequest::set_subscribe_id(const char* value, size_t size) {
  
  subscribe_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.CancelSubscribeRequest.subscribe_id)
}
::std::string* CancelSubscribeRequest::mutable_subscribe_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.CancelSubscribeRequest.subscribe_id)
  return subscribe_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CancelSubscribeRequest::release_subscribe_id() {
  // @@protoc_insertion_point(field_release:subscribe.CancelSubscribeRequest.subscribe_id)
  
  return subscribe_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CancelSubscribeRequest::set_allocated_subscribe_id(::std::string* subscribe_id) {
  if (subscribe_id != NULL) {
    
  } else {
    
  }
  subscribe_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subscribe_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.CancelSubscribeRequest.subscribe_id)
}

// optional .subscribe.CancelSubscribeType cancel_type = 2;
void CancelSubscribeRequest::clear_cancel_type() {
  cancel_type_ = 0;
}
::subscribe::CancelSubscribeType CancelSubscribeRequest::cancel_type() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeRequest.cancel_type)
  return static_cast< ::subscribe::CancelSubscribeType >(cancel_type_);
}
void CancelSubscribeRequest::set_cancel_type(::subscribe::CancelSubscribeType value) {
  
  cancel_type_ = value;
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeRequest.cancel_type)
}

inline const CancelSubscribeRequest* CancelSubscribeRequest::internal_default_instance() {
  return &CancelSubscribeRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSubscribeResponse::kCancelSubscribeSuccessFieldNumber;
const int CancelSubscribeResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSubscribeResponse::CancelSubscribeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.CancelSubscribeResponse)
}

void CancelSubscribeResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

CancelSubscribeResponse::CancelSubscribeResponse(const CancelSubscribeResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.CancelSubscribeResponse)
}

void CancelSubscribeResponse::SharedCtor() {
  error_ = NULL;
  cancel_subscribe_success_ = false;
  _cached_size_ = 0;
}

CancelSubscribeResponse::~CancelSubscribeResponse() {
  // @@protoc_insertion_point(destructor:subscribe.CancelSubscribeResponse)
  SharedDtor();
}

void CancelSubscribeResponse::SharedDtor() {
  if (this != &CancelSubscribeResponse_default_instance_.get()) {
    delete error_;
  }
}

void CancelSubscribeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CancelSubscribeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CancelSubscribeResponse_descriptor_;
}

const CancelSubscribeResponse& CancelSubscribeResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CancelSubscribeResponse> CancelSubscribeResponse_default_instance_;

CancelSubscribeResponse* CancelSubscribeResponse::New(::google::protobuf::Arena* arena) const {
  CancelSubscribeResponse* n = new CancelSubscribeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CancelSubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.CancelSubscribeResponse)
  cancel_subscribe_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool CancelSubscribeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.CancelSubscribeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool cancel_subscribe_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &cancel_subscribe_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.CancelSubscribeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.CancelSubscribeResponse)
  return false;
#undef DO_
}

void CancelSubscribeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.CancelSubscribeResponse)
  // optional bool cancel_subscribe_success = 1;
  if (this->cancel_subscribe_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->cancel_subscribe_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.CancelSubscribeResponse)
}

::google::protobuf::uint8* CancelSubscribeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.CancelSubscribeResponse)
  // optional bool cancel_subscribe_success = 1;
  if (this->cancel_subscribe_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->cancel_subscribe_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.CancelSubscribeResponse)
  return target;
}

size_t CancelSubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.CancelSubscribeResponse)
  size_t total_size = 0;

  // optional bool cancel_subscribe_success = 1;
  if (this->cancel_subscribe_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CancelSubscribeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.CancelSubscribeResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CancelSubscribeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSubscribeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.CancelSubscribeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.CancelSubscribeResponse)
    UnsafeMergeFrom(*source);
  }
}

void CancelSubscribeResponse::MergeFrom(const CancelSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.CancelSubscribeResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CancelSubscribeResponse::UnsafeMergeFrom(const CancelSubscribeResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.cancel_subscribe_success() != 0) {
    set_cancel_subscribe_success(from.cancel_subscribe_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void CancelSubscribeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.CancelSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSubscribeResponse::CopyFrom(const CancelSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.CancelSubscribeResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CancelSubscribeResponse::IsInitialized() const {

  return true;
}

void CancelSubscribeResponse::Swap(CancelSubscribeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSubscribeResponse::InternalSwap(CancelSubscribeResponse* other) {
  std::swap(cancel_subscribe_success_, other->cancel_subscribe_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CancelSubscribeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CancelSubscribeResponse_descriptor_;
  metadata.reflection = CancelSubscribeResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CancelSubscribeResponse

// optional bool cancel_subscribe_success = 1;
void CancelSubscribeResponse::clear_cancel_subscribe_success() {
  cancel_subscribe_success_ = false;
}
bool CancelSubscribeResponse::cancel_subscribe_success() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeResponse.cancel_subscribe_success)
  return cancel_subscribe_success_;
}
void CancelSubscribeResponse::set_cancel_subscribe_success(bool value) {
  
  cancel_subscribe_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.CancelSubscribeResponse.cancel_subscribe_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool CancelSubscribeResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void CancelSubscribeResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& CancelSubscribeResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.CancelSubscribeResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* CancelSubscribeResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.CancelSubscribeResponse.error)
  return error_;
}
::grpcCommon::GrpcError* CancelSubscribeResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.CancelSubscribeResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void CancelSubscribeResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.CancelSubscribeResponse.error)
}

inline const CancelSubscribeResponse* CancelSubscribeResponse::internal_default_instance() {
  return &CancelSubscribeResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSubscribePushEmailRequest::kUserIdFieldNumber;
const int UpdateSubscribePushEmailRequest::kEmailFieldNumber;
const int UpdateSubscribePushEmailRequest::kShouldUpdateEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSubscribePushEmailRequest::UpdateSubscribePushEmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.UpdateSubscribePushEmailRequest)
}

void UpdateSubscribePushEmailRequest::InitAsDefaultInstance() {
}

UpdateSubscribePushEmailRequest::UpdateSubscribePushEmailRequest(const UpdateSubscribePushEmailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.UpdateSubscribePushEmailRequest)
}

void UpdateSubscribePushEmailRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  should_update_email_ = false;
  _cached_size_ = 0;
}

UpdateSubscribePushEmailRequest::~UpdateSubscribePushEmailRequest() {
  // @@protoc_insertion_point(destructor:subscribe.UpdateSubscribePushEmailRequest)
  SharedDtor();
}

void UpdateSubscribePushEmailRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateSubscribePushEmailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSubscribePushEmailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSubscribePushEmailRequest_descriptor_;
}

const UpdateSubscribePushEmailRequest& UpdateSubscribePushEmailRequest::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateSubscribePushEmailRequest> UpdateSubscribePushEmailRequest_default_instance_;

UpdateSubscribePushEmailRequest* UpdateSubscribePushEmailRequest::New(::google::protobuf::Arena* arena) const {
  UpdateSubscribePushEmailRequest* n = new UpdateSubscribePushEmailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSubscribePushEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.UpdateSubscribePushEmailRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  should_update_email_ = false;
}

bool UpdateSubscribePushEmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.UpdateSubscribePushEmailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.UpdateSubscribePushEmailRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // optional string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "subscribe.UpdateSubscribePushEmailRequest.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_should_update_email;
        break;
      }

      // optional bool should_update_email = 3;
      case 3: {
        if (tag == 24) {
         parse_should_update_email:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &should_update_email_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.UpdateSubscribePushEmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.UpdateSubscribePushEmailRequest)
  return false;
#undef DO_
}

void UpdateSubscribePushEmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.UpdateSubscribePushEmailRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.UpdateSubscribePushEmailRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.UpdateSubscribePushEmailRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional bool should_update_email = 3;
  if (this->should_update_email() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->should_update_email(), output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.UpdateSubscribePushEmailRequest)
}

::google::protobuf::uint8* UpdateSubscribePushEmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.UpdateSubscribePushEmailRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.UpdateSubscribePushEmailRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "subscribe.UpdateSubscribePushEmailRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional bool should_update_email = 3;
  if (this->should_update_email() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->should_update_email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.UpdateSubscribePushEmailRequest)
  return target;
}

size_t UpdateSubscribePushEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.UpdateSubscribePushEmailRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional bool should_update_email = 3;
  if (this->should_update_email() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSubscribePushEmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.UpdateSubscribePushEmailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateSubscribePushEmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSubscribePushEmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.UpdateSubscribePushEmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.UpdateSubscribePushEmailRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateSubscribePushEmailRequest::MergeFrom(const UpdateSubscribePushEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.UpdateSubscribePushEmailRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateSubscribePushEmailRequest::UnsafeMergeFrom(const UpdateSubscribePushEmailRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.should_update_email() != 0) {
    set_should_update_email(from.should_update_email());
  }
}

void UpdateSubscribePushEmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.UpdateSubscribePushEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSubscribePushEmailRequest::CopyFrom(const UpdateSubscribePushEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.UpdateSubscribePushEmailRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateSubscribePushEmailRequest::IsInitialized() const {

  return true;
}

void UpdateSubscribePushEmailRequest::Swap(UpdateSubscribePushEmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSubscribePushEmailRequest::InternalSwap(UpdateSubscribePushEmailRequest* other) {
  user_id_.Swap(&other->user_id_);
  email_.Swap(&other->email_);
  std::swap(should_update_email_, other->should_update_email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSubscribePushEmailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSubscribePushEmailRequest_descriptor_;
  metadata.reflection = UpdateSubscribePushEmailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateSubscribePushEmailRequest

// optional string user_id = 1;
void UpdateSubscribePushEmailRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateSubscribePushEmailRequest::user_id() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateSubscribePushEmailRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
void UpdateSubscribePushEmailRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
void UpdateSubscribePushEmailRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.UpdateSubscribePushEmailRequest.user_id)
}
::std::string* UpdateSubscribePushEmailRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateSubscribePushEmailRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateSubscribePushEmailRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailRequest.user_id)
}

// optional string email = 2;
void UpdateSubscribePushEmailRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateSubscribePushEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateSubscribePushEmailRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.email)
}
void UpdateSubscribePushEmailRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:subscribe.UpdateSubscribePushEmailRequest.email)
}
void UpdateSubscribePushEmailRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:subscribe.UpdateSubscribePushEmailRequest.email)
}
::std::string* UpdateSubscribePushEmailRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateSubscribePushEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateSubscribePushEmailRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailRequest.email)
}

// optional bool should_update_email = 3;
void UpdateSubscribePushEmailRequest::clear_should_update_email() {
  should_update_email_ = false;
}
bool UpdateSubscribePushEmailRequest::should_update_email() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailRequest.should_update_email)
  return should_update_email_;
}
void UpdateSubscribePushEmailRequest::set_should_update_email(bool value) {
  
  should_update_email_ = value;
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailRequest.should_update_email)
}

inline const UpdateSubscribePushEmailRequest* UpdateSubscribePushEmailRequest::internal_default_instance() {
  return &UpdateSubscribePushEmailRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateSubscribePushEmailResponse::kUpdateSuccessFieldNumber;
const int UpdateSubscribePushEmailResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateSubscribePushEmailResponse::UpdateSubscribePushEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:subscribe.UpdateSubscribePushEmailResponse)
}

void UpdateSubscribePushEmailResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

UpdateSubscribePushEmailResponse::UpdateSubscribePushEmailResponse(const UpdateSubscribePushEmailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:subscribe.UpdateSubscribePushEmailResponse)
}

void UpdateSubscribePushEmailResponse::SharedCtor() {
  error_ = NULL;
  update_success_ = false;
  _cached_size_ = 0;
}

UpdateSubscribePushEmailResponse::~UpdateSubscribePushEmailResponse() {
  // @@protoc_insertion_point(destructor:subscribe.UpdateSubscribePushEmailResponse)
  SharedDtor();
}

void UpdateSubscribePushEmailResponse::SharedDtor() {
  if (this != &UpdateSubscribePushEmailResponse_default_instance_.get()) {
    delete error_;
  }
}

void UpdateSubscribePushEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateSubscribePushEmailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateSubscribePushEmailResponse_descriptor_;
}

const UpdateSubscribePushEmailResponse& UpdateSubscribePushEmailResponse::default_instance() {
  protobuf_InitDefaults_subscribe_2fmsg_5fsubscribe_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateSubscribePushEmailResponse> UpdateSubscribePushEmailResponse_default_instance_;

UpdateSubscribePushEmailResponse* UpdateSubscribePushEmailResponse::New(::google::protobuf::Arena* arena) const {
  UpdateSubscribePushEmailResponse* n = new UpdateSubscribePushEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateSubscribePushEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:subscribe.UpdateSubscribePushEmailResponse)
  update_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool UpdateSubscribePushEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:subscribe.UpdateSubscribePushEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool update_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:subscribe.UpdateSubscribePushEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:subscribe.UpdateSubscribePushEmailResponse)
  return false;
#undef DO_
}

void UpdateSubscribePushEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:subscribe.UpdateSubscribePushEmailResponse)
  // optional bool update_success = 1;
  if (this->update_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->update_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:subscribe.UpdateSubscribePushEmailResponse)
}

::google::protobuf::uint8* UpdateSubscribePushEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:subscribe.UpdateSubscribePushEmailResponse)
  // optional bool update_success = 1;
  if (this->update_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->update_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:subscribe.UpdateSubscribePushEmailResponse)
  return target;
}

size_t UpdateSubscribePushEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:subscribe.UpdateSubscribePushEmailResponse)
  size_t total_size = 0;

  // optional bool update_success = 1;
  if (this->update_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateSubscribePushEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:subscribe.UpdateSubscribePushEmailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateSubscribePushEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateSubscribePushEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:subscribe.UpdateSubscribePushEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:subscribe.UpdateSubscribePushEmailResponse)
    UnsafeMergeFrom(*source);
  }
}

void UpdateSubscribePushEmailResponse::MergeFrom(const UpdateSubscribePushEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:subscribe.UpdateSubscribePushEmailResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateSubscribePushEmailResponse::UnsafeMergeFrom(const UpdateSubscribePushEmailResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.update_success() != 0) {
    set_update_success(from.update_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void UpdateSubscribePushEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:subscribe.UpdateSubscribePushEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateSubscribePushEmailResponse::CopyFrom(const UpdateSubscribePushEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:subscribe.UpdateSubscribePushEmailResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateSubscribePushEmailResponse::IsInitialized() const {

  return true;
}

void UpdateSubscribePushEmailResponse::Swap(UpdateSubscribePushEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateSubscribePushEmailResponse::InternalSwap(UpdateSubscribePushEmailResponse* other) {
  std::swap(update_success_, other->update_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateSubscribePushEmailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateSubscribePushEmailResponse_descriptor_;
  metadata.reflection = UpdateSubscribePushEmailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateSubscribePushEmailResponse

// optional bool update_success = 1;
void UpdateSubscribePushEmailResponse::clear_update_success() {
  update_success_ = false;
}
bool UpdateSubscribePushEmailResponse::update_success() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailResponse.update_success)
  return update_success_;
}
void UpdateSubscribePushEmailResponse::set_update_success(bool value) {
  
  update_success_ = value;
  // @@protoc_insertion_point(field_set:subscribe.UpdateSubscribePushEmailResponse.update_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool UpdateSubscribePushEmailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void UpdateSubscribePushEmailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& UpdateSubscribePushEmailResponse::error() const {
  // @@protoc_insertion_point(field_get:subscribe.UpdateSubscribePushEmailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* UpdateSubscribePushEmailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:subscribe.UpdateSubscribePushEmailResponse.error)
  return error_;
}
::grpcCommon::GrpcError* UpdateSubscribePushEmailResponse::release_error() {
  // @@protoc_insertion_point(field_release:subscribe.UpdateSubscribePushEmailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void UpdateSubscribePushEmailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:subscribe.UpdateSubscribePushEmailResponse.error)
}

inline const UpdateSubscribePushEmailResponse* UpdateSubscribePushEmailResponse::internal_default_instance() {
  return &UpdateSubscribePushEmailResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace subscribe

// @@protoc_insertion_point(global_scope)
