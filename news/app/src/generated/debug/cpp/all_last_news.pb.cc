// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: all_last_news.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "all_last_news.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace main {

namespace {

const ::google::protobuf::Descriptor* LastNewsRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LastNewsRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LastNewsReply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LastNewsReply_reflection_ = NULL;
const ::google::protobuf::Descriptor* LastNews_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LastNews_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_all_5flast_5fnews_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_all_5flast_5fnews_2eproto() {
  protobuf_AddDesc_all_5flast_5fnews_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "all_last_news.proto");
  GOOGLE_CHECK(file != NULL);
  LastNewsRequest_descriptor_ = file->message_type(0);
  static const int LastNewsRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNewsRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNewsRequest, page_size_),
  };
  LastNewsRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LastNewsRequest_descriptor_,
      LastNewsRequest::internal_default_instance(),
      LastNewsRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LastNewsRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNewsRequest, _internal_metadata_));
  LastNewsReply_descriptor_ = file->message_type(1);
  static const int LastNewsReply_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNewsReply, last_news_),
  };
  LastNewsReply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LastNewsReply_descriptor_,
      LastNewsReply::internal_default_instance(),
      LastNewsReply_offsets_,
      -1,
      -1,
      -1,
      sizeof(LastNewsReply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNewsReply, _internal_metadata_));
  LastNews_descriptor_ = file->message_type(2);
  static const int LastNews_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNews, lastnews_link_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNews, lastnews_title_),
  };
  LastNews_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LastNews_descriptor_,
      LastNews::internal_default_instance(),
      LastNews_offsets_,
      -1,
      -1,
      -1,
      sizeof(LastNews),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LastNews, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_all_5flast_5fnews_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LastNewsRequest_descriptor_, LastNewsRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LastNewsReply_descriptor_, LastNewsReply::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LastNews_descriptor_, LastNews::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_all_5flast_5fnews_2eproto() {
  LastNewsRequest_default_instance_.Shutdown();
  delete LastNewsRequest_reflection_;
  LastNewsReply_default_instance_.Shutdown();
  delete LastNewsReply_reflection_;
  LastNews_default_instance_.Shutdown();
  delete LastNews_reflection_;
}

void protobuf_InitDefaults_all_5flast_5fnews_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  LastNewsRequest_default_instance_.DefaultConstruct();
  LastNewsReply_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LastNews_default_instance_.DefaultConstruct();
  LastNewsRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LastNewsReply_default_instance_.get_mutable()->InitAsDefaultInstance();
  LastNews_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_all_5flast_5fnews_2eproto_once_);
void protobuf_InitDefaults_all_5flast_5fnews_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_all_5flast_5fnews_2eproto_once_,
                 &protobuf_InitDefaults_all_5flast_5fnews_2eproto_impl);
}
void protobuf_AddDesc_all_5flast_5fnews_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023all_last_news.proto\022\004main\"9\n\017LastNewsR"
    "equest\022\023\n\013page_number\030\001 \001(\t\022\021\n\tpage_size"
    "\030\002 \001(\t\"2\n\rLastNewsReply\022!\n\tlast_news\030\001 \003"
    "(\0132\016.main.LastNews\"9\n\010LastNews\022\025\n\rlastNe"
    "ws_link\030\001 \001(\t\022\026\n\016lastNews_title\030\002 \001(\tB\022\n"
    "\020com.wanfang.mainb\006proto3", 225);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "all_last_news.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_all_5flast_5fnews_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_all_5flast_5fnews_2eproto_once_);
void protobuf_AddDesc_all_5flast_5fnews_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_all_5flast_5fnews_2eproto_once_,
                 &protobuf_AddDesc_all_5flast_5fnews_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_all_5flast_5fnews_2eproto {
  StaticDescriptorInitializer_all_5flast_5fnews_2eproto() {
    protobuf_AddDesc_all_5flast_5fnews_2eproto();
  }
} static_descriptor_initializer_all_5flast_5fnews_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastNewsRequest::kPageNumberFieldNumber;
const int LastNewsRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastNewsRequest::LastNewsRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.LastNewsRequest)
}

void LastNewsRequest::InitAsDefaultInstance() {
}

LastNewsRequest::LastNewsRequest(const LastNewsRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.LastNewsRequest)
}

void LastNewsRequest::SharedCtor() {
  page_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LastNewsRequest::~LastNewsRequest() {
  // @@protoc_insertion_point(destructor:main.LastNewsRequest)
  SharedDtor();
}

void LastNewsRequest::SharedDtor() {
  page_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LastNewsRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LastNewsRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LastNewsRequest_descriptor_;
}

const LastNewsRequest& LastNewsRequest::default_instance() {
  protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LastNewsRequest> LastNewsRequest_default_instance_;

LastNewsRequest* LastNewsRequest::New(::google::protobuf::Arena* arena) const {
  LastNewsRequest* n = new LastNewsRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LastNewsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:main.LastNewsRequest)
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LastNewsRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.LastNewsRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string page_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_number().data(), this->page_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.LastNewsRequest.page_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_page_size;
        break;
      }

      // optional string page_size = 2;
      case 2: {
        if (tag == 18) {
         parse_page_size:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_page_size()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->page_size().data(), this->page_size().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.LastNewsRequest.page_size"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.LastNewsRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.LastNewsRequest)
  return false;
#undef DO_
}

void LastNewsRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.LastNewsRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNewsRequest.page_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->page_number(), output);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNewsRequest.page_size");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.LastNewsRequest)
}

::google::protobuf::uint8* LastNewsRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.LastNewsRequest)
  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_number().data(), this->page_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNewsRequest.page_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->page_number(), target);
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->page_size().data(), this->page_size().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNewsRequest.page_size");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.LastNewsRequest)
  return target;
}

size_t LastNewsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.LastNewsRequest)
  size_t total_size = 0;

  // optional string page_number = 1;
  if (this->page_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_number());
  }

  // optional string page_size = 2;
  if (this->page_size().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LastNewsRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.LastNewsRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LastNewsRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LastNewsRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.LastNewsRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.LastNewsRequest)
    UnsafeMergeFrom(*source);
  }
}

void LastNewsRequest::MergeFrom(const LastNewsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.LastNewsRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LastNewsRequest::UnsafeMergeFrom(const LastNewsRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.page_number().size() > 0) {

    page_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_number_);
  }
  if (from.page_size().size() > 0) {

    page_size_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.page_size_);
  }
}

void LastNewsRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.LastNewsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastNewsRequest::CopyFrom(const LastNewsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.LastNewsRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LastNewsRequest::IsInitialized() const {

  return true;
}

void LastNewsRequest::Swap(LastNewsRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastNewsRequest::InternalSwap(LastNewsRequest* other) {
  page_number_.Swap(&other->page_number_);
  page_size_.Swap(&other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LastNewsRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LastNewsRequest_descriptor_;
  metadata.reflection = LastNewsRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LastNewsRequest

// optional string page_number = 1;
void LastNewsRequest::clear_page_number() {
  page_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LastNewsRequest::page_number() const {
  // @@protoc_insertion_point(field_get:main.LastNewsRequest.page_number)
  return page_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNewsRequest::set_page_number(const ::std::string& value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNewsRequest.page_number)
}
void LastNewsRequest::set_page_number(const char* value) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNewsRequest.page_number)
}
void LastNewsRequest::set_page_number(const char* value, size_t size) {
  
  page_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNewsRequest.page_number)
}
::std::string* LastNewsRequest::mutable_page_number() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNewsRequest.page_number)
  return page_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LastNewsRequest::release_page_number() {
  // @@protoc_insertion_point(field_release:main.LastNewsRequest.page_number)
  
  return page_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNewsRequest::set_allocated_page_number(::std::string* page_number) {
  if (page_number != NULL) {
    
  } else {
    
  }
  page_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_number);
  // @@protoc_insertion_point(field_set_allocated:main.LastNewsRequest.page_number)
}

// optional string page_size = 2;
void LastNewsRequest::clear_page_size() {
  page_size_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LastNewsRequest::page_size() const {
  // @@protoc_insertion_point(field_get:main.LastNewsRequest.page_size)
  return page_size_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNewsRequest::set_page_size(const ::std::string& value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNewsRequest.page_size)
}
void LastNewsRequest::set_page_size(const char* value) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNewsRequest.page_size)
}
void LastNewsRequest::set_page_size(const char* value, size_t size) {
  
  page_size_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNewsRequest.page_size)
}
::std::string* LastNewsRequest::mutable_page_size() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNewsRequest.page_size)
  return page_size_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LastNewsRequest::release_page_size() {
  // @@protoc_insertion_point(field_release:main.LastNewsRequest.page_size)
  
  return page_size_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNewsRequest::set_allocated_page_size(::std::string* page_size) {
  if (page_size != NULL) {
    
  } else {
    
  }
  page_size_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), page_size);
  // @@protoc_insertion_point(field_set_allocated:main.LastNewsRequest.page_size)
}

inline const LastNewsRequest* LastNewsRequest::internal_default_instance() {
  return &LastNewsRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastNewsReply::kLastNewsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastNewsReply::LastNewsReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.LastNewsReply)
}

void LastNewsReply::InitAsDefaultInstance() {
}

LastNewsReply::LastNewsReply(const LastNewsReply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.LastNewsReply)
}

void LastNewsReply::SharedCtor() {
  _cached_size_ = 0;
}

LastNewsReply::~LastNewsReply() {
  // @@protoc_insertion_point(destructor:main.LastNewsReply)
  SharedDtor();
}

void LastNewsReply::SharedDtor() {
}

void LastNewsReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LastNewsReply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LastNewsReply_descriptor_;
}

const LastNewsReply& LastNewsReply::default_instance() {
  protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LastNewsReply> LastNewsReply_default_instance_;

LastNewsReply* LastNewsReply::New(::google::protobuf::Arena* arena) const {
  LastNewsReply* n = new LastNewsReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LastNewsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:main.LastNewsReply)
  last_news_.Clear();
}

bool LastNewsReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.LastNewsReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .main.LastNews last_news = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_last_news:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_last_news()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_last_news;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.LastNewsReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.LastNewsReply)
  return false;
#undef DO_
}

void LastNewsReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.LastNewsReply)
  // repeated .main.LastNews last_news = 1;
  for (unsigned int i = 0, n = this->last_news_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->last_news(i), output);
  }

  // @@protoc_insertion_point(serialize_end:main.LastNewsReply)
}

::google::protobuf::uint8* LastNewsReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.LastNewsReply)
  // repeated .main.LastNews last_news = 1;
  for (unsigned int i = 0, n = this->last_news_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->last_news(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.LastNewsReply)
  return target;
}

size_t LastNewsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.LastNewsReply)
  size_t total_size = 0;

  // repeated .main.LastNews last_news = 1;
  {
    unsigned int count = this->last_news_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->last_news(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LastNewsReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.LastNewsReply)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LastNewsReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LastNewsReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.LastNewsReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.LastNewsReply)
    UnsafeMergeFrom(*source);
  }
}

void LastNewsReply::MergeFrom(const LastNewsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.LastNewsReply)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LastNewsReply::UnsafeMergeFrom(const LastNewsReply& from) {
  GOOGLE_DCHECK(&from != this);
  last_news_.MergeFrom(from.last_news_);
}

void LastNewsReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.LastNewsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastNewsReply::CopyFrom(const LastNewsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.LastNewsReply)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LastNewsReply::IsInitialized() const {

  return true;
}

void LastNewsReply::Swap(LastNewsReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastNewsReply::InternalSwap(LastNewsReply* other) {
  last_news_.UnsafeArenaSwap(&other->last_news_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LastNewsReply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LastNewsReply_descriptor_;
  metadata.reflection = LastNewsReply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LastNewsReply

// repeated .main.LastNews last_news = 1;
int LastNewsReply::last_news_size() const {
  return last_news_.size();
}
void LastNewsReply::clear_last_news() {
  last_news_.Clear();
}
const ::main::LastNews& LastNewsReply::last_news(int index) const {
  // @@protoc_insertion_point(field_get:main.LastNewsReply.last_news)
  return last_news_.Get(index);
}
::main::LastNews* LastNewsReply::mutable_last_news(int index) {
  // @@protoc_insertion_point(field_mutable:main.LastNewsReply.last_news)
  return last_news_.Mutable(index);
}
::main::LastNews* LastNewsReply::add_last_news() {
  // @@protoc_insertion_point(field_add:main.LastNewsReply.last_news)
  return last_news_.Add();
}
::google::protobuf::RepeatedPtrField< ::main::LastNews >*
LastNewsReply::mutable_last_news() {
  // @@protoc_insertion_point(field_mutable_list:main.LastNewsReply.last_news)
  return &last_news_;
}
const ::google::protobuf::RepeatedPtrField< ::main::LastNews >&
LastNewsReply::last_news() const {
  // @@protoc_insertion_point(field_list:main.LastNewsReply.last_news)
  return last_news_;
}

inline const LastNewsReply* LastNewsReply::internal_default_instance() {
  return &LastNewsReply_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LastNews::kLastNewsLinkFieldNumber;
const int LastNews::kLastNewsTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LastNews::LastNews()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:main.LastNews)
}

void LastNews::InitAsDefaultInstance() {
}

LastNews::LastNews(const LastNews& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:main.LastNews)
}

void LastNews::SharedCtor() {
  lastnews_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastnews_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LastNews::~LastNews() {
  // @@protoc_insertion_point(destructor:main.LastNews)
  SharedDtor();
}

void LastNews::SharedDtor() {
  lastnews_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastnews_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LastNews::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LastNews::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LastNews_descriptor_;
}

const LastNews& LastNews::default_instance() {
  protobuf_InitDefaults_all_5flast_5fnews_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LastNews> LastNews_default_instance_;

LastNews* LastNews::New(::google::protobuf::Arena* arena) const {
  LastNews* n = new LastNews;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LastNews::Clear() {
// @@protoc_insertion_point(message_clear_start:main.LastNews)
  lastnews_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lastnews_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LastNews::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:main.LastNews)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string lastNews_link = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastnews_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastnews_link().data(), this->lastnews_link().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.LastNews.lastNews_link"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_lastNews_title;
        break;
      }

      // optional string lastNews_title = 2;
      case 2: {
        if (tag == 18) {
         parse_lastNews_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lastnews_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->lastnews_title().data(), this->lastnews_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "main.LastNews.lastNews_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:main.LastNews)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:main.LastNews)
  return false;
#undef DO_
}

void LastNews::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:main.LastNews)
  // optional string lastNews_link = 1;
  if (this->lastnews_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastnews_link().data(), this->lastnews_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNews.lastNews_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->lastnews_link(), output);
  }

  // optional string lastNews_title = 2;
  if (this->lastnews_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastnews_title().data(), this->lastnews_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNews.lastNews_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->lastnews_title(), output);
  }

  // @@protoc_insertion_point(serialize_end:main.LastNews)
}

::google::protobuf::uint8* LastNews::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:main.LastNews)
  // optional string lastNews_link = 1;
  if (this->lastnews_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastnews_link().data(), this->lastnews_link().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNews.lastNews_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->lastnews_link(), target);
  }

  // optional string lastNews_title = 2;
  if (this->lastnews_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->lastnews_title().data(), this->lastnews_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "main.LastNews.lastNews_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->lastnews_title(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:main.LastNews)
  return target;
}

size_t LastNews::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:main.LastNews)
  size_t total_size = 0;

  // optional string lastNews_link = 1;
  if (this->lastnews_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastnews_link());
  }

  // optional string lastNews_title = 2;
  if (this->lastnews_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->lastnews_title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LastNews::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:main.LastNews)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LastNews* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LastNews>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:main.LastNews)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:main.LastNews)
    UnsafeMergeFrom(*source);
  }
}

void LastNews::MergeFrom(const LastNews& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:main.LastNews)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LastNews::UnsafeMergeFrom(const LastNews& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.lastnews_link().size() > 0) {

    lastnews_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastnews_link_);
  }
  if (from.lastnews_title().size() > 0) {

    lastnews_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lastnews_title_);
  }
}

void LastNews::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:main.LastNews)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LastNews::CopyFrom(const LastNews& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:main.LastNews)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LastNews::IsInitialized() const {

  return true;
}

void LastNews::Swap(LastNews* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LastNews::InternalSwap(LastNews* other) {
  lastnews_link_.Swap(&other->lastnews_link_);
  lastnews_title_.Swap(&other->lastnews_title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LastNews::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LastNews_descriptor_;
  metadata.reflection = LastNews_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LastNews

// optional string lastNews_link = 1;
void LastNews::clear_lastnews_link() {
  lastnews_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LastNews::lastnews_link() const {
  // @@protoc_insertion_point(field_get:main.LastNews.lastNews_link)
  return lastnews_link_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNews::set_lastnews_link(const ::std::string& value) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNews.lastNews_link)
}
void LastNews::set_lastnews_link(const char* value) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNews.lastNews_link)
}
void LastNews::set_lastnews_link(const char* value, size_t size) {
  
  lastnews_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNews.lastNews_link)
}
::std::string* LastNews::mutable_lastnews_link() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNews.lastNews_link)
  return lastnews_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LastNews::release_lastnews_link() {
  // @@protoc_insertion_point(field_release:main.LastNews.lastNews_link)
  
  return lastnews_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNews::set_allocated_lastnews_link(::std::string* lastnews_link) {
  if (lastnews_link != NULL) {
    
  } else {
    
  }
  lastnews_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastnews_link);
  // @@protoc_insertion_point(field_set_allocated:main.LastNews.lastNews_link)
}

// optional string lastNews_title = 2;
void LastNews::clear_lastnews_title() {
  lastnews_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LastNews::lastnews_title() const {
  // @@protoc_insertion_point(field_get:main.LastNews.lastNews_title)
  return lastnews_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNews::set_lastnews_title(const ::std::string& value) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:main.LastNews.lastNews_title)
}
void LastNews::set_lastnews_title(const char* value) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:main.LastNews.lastNews_title)
}
void LastNews::set_lastnews_title(const char* value, size_t size) {
  
  lastnews_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:main.LastNews.lastNews_title)
}
::std::string* LastNews::mutable_lastnews_title() {
  
  // @@protoc_insertion_point(field_mutable:main.LastNews.lastNews_title)
  return lastnews_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LastNews::release_lastnews_title() {
  // @@protoc_insertion_point(field_release:main.LastNews.lastNews_title)
  
  return lastnews_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LastNews::set_allocated_lastnews_title(::std::string* lastnews_title) {
  if (lastnews_title != NULL) {
    
  } else {
    
  }
  lastnews_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lastnews_title);
  // @@protoc_insertion_point(field_set_allocated:main.LastNews.lastNews_title)
}

inline const LastNews* LastNews::internal_default_instance() {
  return &LastNews_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace main

// @@protoc_insertion_point(global_scope)
