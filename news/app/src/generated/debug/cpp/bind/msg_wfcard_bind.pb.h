// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bind/msg_wfcard_bind.proto

#ifndef PROTOBUF_bind_2fmsg_5fwfcard_5fbind_2eproto__INCLUDED
#define PROTOBUF_bind_2fmsg_5fwfcard_5fbind_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace bind {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
void protobuf_InitDefaults_bind_2fmsg_5fwfcard_5fbind_2eproto();
void protobuf_AssignDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
void protobuf_ShutdownFile_bind_2fmsg_5fwfcard_5fbind_2eproto();

class WFCardBindRequest;
class WFCardBindResponse;
class WFCardBlanceRequest;
class WfCardBlanceResponse;

// ===================================================================

class WFCardBindRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bind.WFCardBindRequest) */ {
 public:
  WFCardBindRequest();
  virtual ~WFCardBindRequest();

  WFCardBindRequest(const WFCardBindRequest& from);

  inline WFCardBindRequest& operator=(const WFCardBindRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WFCardBindRequest& default_instance();

  static const WFCardBindRequest* internal_default_instance();

  void Swap(WFCardBindRequest* other);

  // implements Message ----------------------------------------------

  inline WFCardBindRequest* New() const { return New(NULL); }

  WFCardBindRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WFCardBindRequest& from);
  void MergeFrom(const WFCardBindRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WFCardBindRequest* other);
  void UnsafeMergeFrom(const WFCardBindRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string login_token = 2;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 2;
  const ::std::string& login_token() const;
  void set_login_token(const ::std::string& value);
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  ::std::string* mutable_login_token();
  ::std::string* release_login_token();
  void set_allocated_login_token(::std::string* login_token);

  // optional string card_num = 3;
  void clear_card_num();
  static const int kCardNumFieldNumber = 3;
  const ::std::string& card_num() const;
  void set_card_num(const ::std::string& value);
  void set_card_num(const char* value);
  void set_card_num(const char* value, size_t size);
  ::std::string* mutable_card_num();
  ::std::string* release_card_num();
  void set_allocated_card_num(::std::string* card_num);

  // optional string card_pwd = 4;
  void clear_card_pwd();
  static const int kCardPwdFieldNumber = 4;
  const ::std::string& card_pwd() const;
  void set_card_pwd(const ::std::string& value);
  void set_card_pwd(const char* value);
  void set_card_pwd(const char* value, size_t size);
  ::std::string* mutable_card_pwd();
  ::std::string* release_card_pwd();
  void set_allocated_card_pwd(::std::string* card_pwd);

  // @@protoc_insertion_point(class_scope:bind.WFCardBindRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr login_token_;
  ::google::protobuf::internal::ArenaStringPtr card_num_;
  ::google::protobuf::internal::ArenaStringPtr card_pwd_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void  protobuf_AddDesc_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void protobuf_AssignDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
  friend void protobuf_ShutdownFile_bind_2fmsg_5fwfcard_5fbind_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WFCardBindRequest> WFCardBindRequest_default_instance_;

// -------------------------------------------------------------------

class WFCardBindResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bind.WFCardBindResponse) */ {
 public:
  WFCardBindResponse();
  virtual ~WFCardBindResponse();

  WFCardBindResponse(const WFCardBindResponse& from);

  inline WFCardBindResponse& operator=(const WFCardBindResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WFCardBindResponse& default_instance();

  static const WFCardBindResponse* internal_default_instance();

  void Swap(WFCardBindResponse* other);

  // implements Message ----------------------------------------------

  inline WFCardBindResponse* New() const { return New(NULL); }

  WFCardBindResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WFCardBindResponse& from);
  void MergeFrom(const WFCardBindResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WFCardBindResponse* other);
  void UnsafeMergeFrom(const WFCardBindResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string status = 1;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:bind.WFCardBindResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void  protobuf_AddDesc_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void protobuf_AssignDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
  friend void protobuf_ShutdownFile_bind_2fmsg_5fwfcard_5fbind_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WFCardBindResponse> WFCardBindResponse_default_instance_;

// -------------------------------------------------------------------

class WFCardBlanceRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bind.WFCardBlanceRequest) */ {
 public:
  WFCardBlanceRequest();
  virtual ~WFCardBlanceRequest();

  WFCardBlanceRequest(const WFCardBlanceRequest& from);

  inline WFCardBlanceRequest& operator=(const WFCardBlanceRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WFCardBlanceRequest& default_instance();

  static const WFCardBlanceRequest* internal_default_instance();

  void Swap(WFCardBlanceRequest* other);

  // implements Message ----------------------------------------------

  inline WFCardBlanceRequest* New() const { return New(NULL); }

  WFCardBlanceRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WFCardBlanceRequest& from);
  void MergeFrom(const WFCardBlanceRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WFCardBlanceRequest* other);
  void UnsafeMergeFrom(const WFCardBlanceRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:bind.WFCardBlanceRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void  protobuf_AddDesc_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void protobuf_AssignDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
  friend void protobuf_ShutdownFile_bind_2fmsg_5fwfcard_5fbind_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WFCardBlanceRequest> WFCardBlanceRequest_default_instance_;

// -------------------------------------------------------------------

class WfCardBlanceResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:bind.WfCardBlanceResponse) */ {
 public:
  WfCardBlanceResponse();
  virtual ~WfCardBlanceResponse();

  WfCardBlanceResponse(const WfCardBlanceResponse& from);

  inline WfCardBlanceResponse& operator=(const WfCardBlanceResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const WfCardBlanceResponse& default_instance();

  static const WfCardBlanceResponse* internal_default_instance();

  void Swap(WfCardBlanceResponse* other);

  // implements Message ----------------------------------------------

  inline WfCardBlanceResponse* New() const { return New(NULL); }

  WfCardBlanceResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const WfCardBlanceResponse& from);
  void MergeFrom(const WfCardBlanceResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(WfCardBlanceResponse* other);
  void UnsafeMergeFrom(const WfCardBlanceResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string blance = 1;
  void clear_blance();
  static const int kBlanceFieldNumber = 1;
  const ::std::string& blance() const;
  void set_blance(const ::std::string& value);
  void set_blance(const char* value);
  void set_blance(const char* value, size_t size);
  ::std::string* mutable_blance();
  ::std::string* release_blance();
  void set_allocated_blance(::std::string* blance);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:bind.WfCardBlanceResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr blance_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void  protobuf_AddDesc_bind_2fmsg_5fwfcard_5fbind_2eproto_impl();
  friend void protobuf_AssignDesc_bind_2fmsg_5fwfcard_5fbind_2eproto();
  friend void protobuf_ShutdownFile_bind_2fmsg_5fwfcard_5fbind_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<WfCardBlanceResponse> WfCardBlanceResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// WFCardBindRequest

// optional string user_id = 1;
inline void WFCardBindRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBindRequest::user_id() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBindRequest.user_id)
}
inline void WFCardBindRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBindRequest.user_id)
}
inline void WFCardBindRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBindRequest.user_id)
}
inline ::std::string* WFCardBindRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBindRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindRequest.user_id)
}

// optional string login_token = 2;
inline void WFCardBindRequest::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBindRequest::login_token() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindRequest.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBindRequest.login_token)
}
inline void WFCardBindRequest::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBindRequest.login_token)
}
inline void WFCardBindRequest::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBindRequest.login_token)
}
inline ::std::string* WFCardBindRequest::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindRequest.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBindRequest::release_login_token() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindRequest.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindRequest.login_token)
}

// optional string card_num = 3;
inline void WFCardBindRequest::clear_card_num() {
  card_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBindRequest::card_num() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindRequest.card_num)
  return card_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_card_num(const ::std::string& value) {
  
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBindRequest.card_num)
}
inline void WFCardBindRequest::set_card_num(const char* value) {
  
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBindRequest.card_num)
}
inline void WFCardBindRequest::set_card_num(const char* value, size_t size) {
  
  card_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBindRequest.card_num)
}
inline ::std::string* WFCardBindRequest::mutable_card_num() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindRequest.card_num)
  return card_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBindRequest::release_card_num() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindRequest.card_num)
  
  return card_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_allocated_card_num(::std::string* card_num) {
  if (card_num != NULL) {
    
  } else {
    
  }
  card_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_num);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindRequest.card_num)
}

// optional string card_pwd = 4;
inline void WFCardBindRequest::clear_card_pwd() {
  card_pwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBindRequest::card_pwd() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindRequest.card_pwd)
  return card_pwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_card_pwd(const ::std::string& value) {
  
  card_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBindRequest.card_pwd)
}
inline void WFCardBindRequest::set_card_pwd(const char* value) {
  
  card_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBindRequest.card_pwd)
}
inline void WFCardBindRequest::set_card_pwd(const char* value, size_t size) {
  
  card_pwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBindRequest.card_pwd)
}
inline ::std::string* WFCardBindRequest::mutable_card_pwd() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindRequest.card_pwd)
  return card_pwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBindRequest::release_card_pwd() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindRequest.card_pwd)
  
  return card_pwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindRequest::set_allocated_card_pwd(::std::string* card_pwd) {
  if (card_pwd != NULL) {
    
  } else {
    
  }
  card_pwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), card_pwd);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindRequest.card_pwd)
}

inline const WFCardBindRequest* WFCardBindRequest::internal_default_instance() {
  return &WFCardBindRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// WFCardBindResponse

// optional string status = 1;
inline void WFCardBindResponse::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBindResponse::status() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindResponse.status)
  return status_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindResponse::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBindResponse.status)
}
inline void WFCardBindResponse::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBindResponse.status)
}
inline void WFCardBindResponse::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBindResponse.status)
}
inline ::std::string* WFCardBindResponse::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindResponse.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBindResponse::release_status() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindResponse.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBindResponse::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindResponse.status)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool WFCardBindResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void WFCardBindResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& WFCardBindResponse::error() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBindResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* WFCardBindResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:bind.WFCardBindResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* WFCardBindResponse::release_error() {
  // @@protoc_insertion_point(field_release:bind.WFCardBindResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void WFCardBindResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBindResponse.error)
}

inline const WFCardBindResponse* WFCardBindResponse::internal_default_instance() {
  return &WFCardBindResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// WFCardBlanceRequest

// optional string user_id = 1;
inline void WFCardBlanceRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WFCardBlanceRequest::user_id() const {
  // @@protoc_insertion_point(field_get:bind.WFCardBlanceRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBlanceRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WFCardBlanceRequest.user_id)
}
inline void WFCardBlanceRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WFCardBlanceRequest.user_id)
}
inline void WFCardBlanceRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WFCardBlanceRequest.user_id)
}
inline ::std::string* WFCardBlanceRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:bind.WFCardBlanceRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WFCardBlanceRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:bind.WFCardBlanceRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WFCardBlanceRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:bind.WFCardBlanceRequest.user_id)
}

inline const WFCardBlanceRequest* WFCardBlanceRequest::internal_default_instance() {
  return &WFCardBlanceRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// WfCardBlanceResponse

// optional string blance = 1;
inline void WfCardBlanceResponse::clear_blance() {
  blance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& WfCardBlanceResponse::blance() const {
  // @@protoc_insertion_point(field_get:bind.WfCardBlanceResponse.blance)
  return blance_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WfCardBlanceResponse::set_blance(const ::std::string& value) {
  
  blance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:bind.WfCardBlanceResponse.blance)
}
inline void WfCardBlanceResponse::set_blance(const char* value) {
  
  blance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:bind.WfCardBlanceResponse.blance)
}
inline void WfCardBlanceResponse::set_blance(const char* value, size_t size) {
  
  blance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:bind.WfCardBlanceResponse.blance)
}
inline ::std::string* WfCardBlanceResponse::mutable_blance() {
  
  // @@protoc_insertion_point(field_mutable:bind.WfCardBlanceResponse.blance)
  return blance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* WfCardBlanceResponse::release_blance() {
  // @@protoc_insertion_point(field_release:bind.WfCardBlanceResponse.blance)
  
  return blance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void WfCardBlanceResponse::set_allocated_blance(::std::string* blance) {
  if (blance != NULL) {
    
  } else {
    
  }
  blance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), blance);
  // @@protoc_insertion_point(field_set_allocated:bind.WfCardBlanceResponse.blance)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool WfCardBlanceResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void WfCardBlanceResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& WfCardBlanceResponse::error() const {
  // @@protoc_insertion_point(field_get:bind.WfCardBlanceResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* WfCardBlanceResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:bind.WfCardBlanceResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* WfCardBlanceResponse::release_error() {
  // @@protoc_insertion_point(field_release:bind.WfCardBlanceResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void WfCardBlanceResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:bind.WfCardBlanceResponse.error)
}

inline const WfCardBlanceResponse* WfCardBlanceResponse::internal_default_instance() {
  return &WfCardBlanceResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace bind

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bind_2fmsg_5fwfcard_5fbind_2eproto__INCLUDED
