// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade/msg_trade.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "trade/msg_trade.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace trade {

namespace {

const ::google::protobuf::Descriptor* UnifiedorderRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnifiedorderRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UnifiedorderResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UnifiedorderResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyOrdersRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyOrdersRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyOrdersResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyOrdersResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyOrdersResponse_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyOrdersResponse_Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_trade_2fmsg_5ftrade_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_trade_2fmsg_5ftrade_2eproto() {
  protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "trade/msg_trade.proto");
  GOOGLE_CHECK(file != NULL);
  UnifiedorderRequest_descriptor_ = file->message_type(0);
  static const int UnifiedorderRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderRequest, safe_transaction_string_),
  };
  UnifiedorderRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnifiedorderRequest_descriptor_,
      UnifiedorderRequest::internal_default_instance(),
      UnifiedorderRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnifiedorderRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderRequest, _internal_metadata_));
  UnifiedorderResponse_descriptor_ = file->message_type(1);
  static const int UnifiedorderResponse_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, app_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, partner_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, prepay_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, package_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, noncestr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, time_stamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, error_),
  };
  UnifiedorderResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UnifiedorderResponse_descriptor_,
      UnifiedorderResponse::internal_default_instance(),
      UnifiedorderResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UnifiedorderResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnifiedorderResponse, _internal_metadata_));
  MyOrdersRequest_descriptor_ = file->message_type(2);
  static const int MyOrdersRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersRequest, page_size_),
  };
  MyOrdersRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyOrdersRequest_descriptor_,
      MyOrdersRequest::internal_default_instance(),
      MyOrdersRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyOrdersRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersRequest, _internal_metadata_));
  MyOrdersResponse_descriptor_ = file->message_type(3);
  static const int MyOrdersResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse, total_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse, has_more_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse, error_),
  };
  MyOrdersResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyOrdersResponse_descriptor_,
      MyOrdersResponse::internal_default_instance(),
      MyOrdersResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyOrdersResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse, _internal_metadata_));
  MyOrdersResponse_Result_descriptor_ = MyOrdersResponse_descriptor_->nested_type(0);
  static const int MyOrdersResponse_Result_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, order_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, create_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, order_money_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, order_product_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, order_state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, order_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, pay_way_),
  };
  MyOrdersResponse_Result_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyOrdersResponse_Result_descriptor_,
      MyOrdersResponse_Result::internal_default_instance(),
      MyOrdersResponse_Result_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyOrdersResponse_Result),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyOrdersResponse_Result, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_trade_2fmsg_5ftrade_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnifiedorderRequest_descriptor_, UnifiedorderRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UnifiedorderResponse_descriptor_, UnifiedorderResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyOrdersRequest_descriptor_, MyOrdersRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyOrdersResponse_descriptor_, MyOrdersResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyOrdersResponse_Result_descriptor_, MyOrdersResponse_Result::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_trade_2fmsg_5ftrade_2eproto() {
  UnifiedorderRequest_default_instance_.Shutdown();
  delete UnifiedorderRequest_reflection_;
  UnifiedorderResponse_default_instance_.Shutdown();
  delete UnifiedorderResponse_reflection_;
  MyOrdersRequest_default_instance_.Shutdown();
  delete MyOrdersRequest_reflection_;
  MyOrdersResponse_default_instance_.Shutdown();
  delete MyOrdersResponse_reflection_;
  MyOrdersResponse_Result_default_instance_.Shutdown();
  delete MyOrdersResponse_Result_reflection_;
}

void protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  UnifiedorderRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UnifiedorderResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyOrdersRequest_default_instance_.DefaultConstruct();
  MyOrdersResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyOrdersResponse_Result_default_instance_.DefaultConstruct();
  UnifiedorderRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UnifiedorderResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyOrdersRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyOrdersResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyOrdersResponse_Result_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto_once_);
void protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto_once_,
                 &protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto_impl);
}
void protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025trade/msg_trade.proto\022\005trade\032\032grpcComm"
    "on/msg_error.proto\"G\n\023UnifiedorderReques"
    "t\022\017\n\007user_id\030\001 \001(\t\022\037\n\027safe_transaction_s"
    "tring\030\002 \001(\t\"\270\001\n\024UnifiedorderResponse\022\016\n\006"
    "app_id\030\001 \001(\t\022\022\n\npartner_id\030\002 \001(\t\022\021\n\tprep"
    "ay_id\030\003 \001(\t\022\017\n\007package\030\004 \001(\t\022\020\n\010noncestr"
    "\030\005 \001(\t\022\022\n\ntime_stamp\030\006 \001(\t\022\014\n\004sign\030\007 \001(\t"
    "\022$\n\005error\030\010 \001(\0132\025.grpcCommon.GrpcError\"J"
    "\n\017MyOrdersRequest\022\017\n\007user_id\030\001 \001(\t\022\023\n\013pa"
    "ge_number\030\002 \001(\005\022\021\n\tpage_size\030\003 \001(\005\"\256\002\n\020M"
    "yOrdersResponse\022/\n\007results\030\001 \003(\0132\036.trade"
    ".MyOrdersResponse.Result\022\023\n\013total_count\030"
    "\002 \001(\005\022\020\n\010has_more\030\003 \001(\010\022$\n\005error\030\004 \001(\0132\025"
    ".grpcCommon.GrpcError\032\233\001\n\006Result\022\020\n\010orde"
    "r_id\030\001 \001(\t\022\023\n\013create_time\030\002 \001(\t\022\023\n\013order"
    "_money\030\003 \001(\t\022\032\n\022order_product_type\030\005 \001(\t"
    "\022\023\n\013order_state\030\006 \001(\005\022\023\n\013order_title\030\007 \001"
    "(\t\022\017\n\007pay_way\030\010 \001(\tB\034\n\021com.wanfang.trade"
    "P\001\242\002\004WFPRb\006proto3", 737);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "trade/msg_trade.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_trade_2fmsg_5ftrade_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto_once_);
void protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto_once_,
                 &protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_trade_2fmsg_5ftrade_2eproto {
  StaticDescriptorInitializer_trade_2fmsg_5ftrade_2eproto() {
    protobuf_AddDesc_trade_2fmsg_5ftrade_2eproto();
  }
} static_descriptor_initializer_trade_2fmsg_5ftrade_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnifiedorderRequest::kUserIdFieldNumber;
const int UnifiedorderRequest::kSafeTransactionStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnifiedorderRequest::UnifiedorderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.UnifiedorderRequest)
}

void UnifiedorderRequest::InitAsDefaultInstance() {
}

UnifiedorderRequest::UnifiedorderRequest(const UnifiedorderRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.UnifiedorderRequest)
}

void UnifiedorderRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UnifiedorderRequest::~UnifiedorderRequest() {
  // @@protoc_insertion_point(destructor:trade.UnifiedorderRequest)
  SharedDtor();
}

void UnifiedorderRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnifiedorderRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnifiedorderRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnifiedorderRequest_descriptor_;
}

const UnifiedorderRequest& UnifiedorderRequest::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UnifiedorderRequest> UnifiedorderRequest_default_instance_;

UnifiedorderRequest* UnifiedorderRequest::New(::google::protobuf::Arena* arena) const {
  UnifiedorderRequest* n = new UnifiedorderRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnifiedorderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.UnifiedorderRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UnifiedorderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.UnifiedorderRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_safe_transaction_string;
        break;
      }

      // optional string safe_transaction_string = 2;
      case 2: {
        if (tag == 18) {
         parse_safe_transaction_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safe_transaction_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->safe_transaction_string().data(), this->safe_transaction_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderRequest.safe_transaction_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.UnifiedorderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.UnifiedorderRequest)
  return false;
#undef DO_
}

void UnifiedorderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.UnifiedorderRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string safe_transaction_string = 2;
  if (this->safe_transaction_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_transaction_string().data(), this->safe_transaction_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderRequest.safe_transaction_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->safe_transaction_string(), output);
  }

  // @@protoc_insertion_point(serialize_end:trade.UnifiedorderRequest)
}

::google::protobuf::uint8* UnifiedorderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.UnifiedorderRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string safe_transaction_string = 2;
  if (this->safe_transaction_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_transaction_string().data(), this->safe_transaction_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderRequest.safe_transaction_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->safe_transaction_string(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.UnifiedorderRequest)
  return target;
}

size_t UnifiedorderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.UnifiedorderRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string safe_transaction_string = 2;
  if (this->safe_transaction_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->safe_transaction_string());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnifiedorderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.UnifiedorderRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnifiedorderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnifiedorderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.UnifiedorderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.UnifiedorderRequest)
    UnsafeMergeFrom(*source);
  }
}

void UnifiedorderRequest::MergeFrom(const UnifiedorderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.UnifiedorderRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UnifiedorderRequest::UnsafeMergeFrom(const UnifiedorderRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.safe_transaction_string().size() > 0) {

    safe_transaction_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safe_transaction_string_);
  }
}

void UnifiedorderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.UnifiedorderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnifiedorderRequest::CopyFrom(const UnifiedorderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.UnifiedorderRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UnifiedorderRequest::IsInitialized() const {

  return true;
}

void UnifiedorderRequest::Swap(UnifiedorderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnifiedorderRequest::InternalSwap(UnifiedorderRequest* other) {
  user_id_.Swap(&other->user_id_);
  safe_transaction_string_.Swap(&other->safe_transaction_string_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnifiedorderRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnifiedorderRequest_descriptor_;
  metadata.reflection = UnifiedorderRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnifiedorderRequest

// optional string user_id = 1;
void UnifiedorderRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderRequest::user_id() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderRequest.user_id)
}
void UnifiedorderRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderRequest.user_id)
}
void UnifiedorderRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderRequest.user_id)
}
::std::string* UnifiedorderRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderRequest.user_id)
}

// optional string safe_transaction_string = 2;
void UnifiedorderRequest::clear_safe_transaction_string() {
  safe_transaction_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderRequest::safe_transaction_string() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderRequest.safe_transaction_string)
  return safe_transaction_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderRequest::set_safe_transaction_string(const ::std::string& value) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderRequest.safe_transaction_string)
}
void UnifiedorderRequest::set_safe_transaction_string(const char* value) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderRequest.safe_transaction_string)
}
void UnifiedorderRequest::set_safe_transaction_string(const char* value, size_t size) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderRequest.safe_transaction_string)
}
::std::string* UnifiedorderRequest::mutable_safe_transaction_string() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderRequest.safe_transaction_string)
  return safe_transaction_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderRequest::release_safe_transaction_string() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderRequest.safe_transaction_string)
  
  return safe_transaction_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderRequest::set_allocated_safe_transaction_string(::std::string* safe_transaction_string) {
  if (safe_transaction_string != NULL) {
    
  } else {
    
  }
  safe_transaction_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safe_transaction_string);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderRequest.safe_transaction_string)
}

inline const UnifiedorderRequest* UnifiedorderRequest::internal_default_instance() {
  return &UnifiedorderRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnifiedorderResponse::kAppIdFieldNumber;
const int UnifiedorderResponse::kPartnerIdFieldNumber;
const int UnifiedorderResponse::kPrepayIdFieldNumber;
const int UnifiedorderResponse::kPackageFieldNumber;
const int UnifiedorderResponse::kNoncestrFieldNumber;
const int UnifiedorderResponse::kTimeStampFieldNumber;
const int UnifiedorderResponse::kSignFieldNumber;
const int UnifiedorderResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnifiedorderResponse::UnifiedorderResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.UnifiedorderResponse)
}

void UnifiedorderResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

UnifiedorderResponse::UnifiedorderResponse(const UnifiedorderResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.UnifiedorderResponse)
}

void UnifiedorderResponse::SharedCtor() {
  app_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

UnifiedorderResponse::~UnifiedorderResponse() {
  // @@protoc_insertion_point(destructor:trade.UnifiedorderResponse)
  SharedDtor();
}

void UnifiedorderResponse::SharedDtor() {
  app_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &UnifiedorderResponse_default_instance_.get()) {
    delete error_;
  }
}

void UnifiedorderResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnifiedorderResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UnifiedorderResponse_descriptor_;
}

const UnifiedorderResponse& UnifiedorderResponse::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UnifiedorderResponse> UnifiedorderResponse_default_instance_;

UnifiedorderResponse* UnifiedorderResponse::New(::google::protobuf::Arena* arena) const {
  UnifiedorderResponse* n = new UnifiedorderResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnifiedorderResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.UnifiedorderResponse)
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  partner_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  prepay_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool UnifiedorderResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.UnifiedorderResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string app_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app_id().data(), this->app_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.app_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_partner_id;
        break;
      }

      // optional string partner_id = 2;
      case 2: {
        if (tag == 18) {
         parse_partner_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_partner_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->partner_id().data(), this->partner_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.partner_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_prepay_id;
        break;
      }

      // optional string prepay_id = 3;
      case 3: {
        if (tag == 26) {
         parse_prepay_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_prepay_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->prepay_id().data(), this->prepay_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.prepay_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_package;
        break;
      }

      // optional string package = 4;
      case 4: {
        if (tag == 34) {
         parse_package:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_package()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->package().data(), this->package().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.package"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_noncestr;
        break;
      }

      // optional string noncestr = 5;
      case 5: {
        if (tag == 42) {
         parse_noncestr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_noncestr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->noncestr().data(), this->noncestr().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.noncestr"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time_stamp;
        break;
      }

      // optional string time_stamp = 6;
      case 6: {
        if (tag == 50) {
         parse_time_stamp:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time_stamp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time_stamp().data(), this->time_stamp().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.time_stamp"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_sign;
        break;
      }

      // optional string sign = 7;
      case 7: {
        if (tag == 58) {
         parse_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.UnifiedorderResponse.sign"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 8;
      case 8: {
        if (tag == 66) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.UnifiedorderResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.UnifiedorderResponse)
  return false;
#undef DO_
}

void UnifiedorderResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.UnifiedorderResponse)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.app_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->app_id(), output);
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partner_id().data(), this->partner_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.partner_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->partner_id(), output);
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.prepay_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->prepay_id(), output);
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.package");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->package(), output);
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.noncestr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->noncestr(), output);
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_stamp().data(), this->time_stamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.time_stamp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time_stamp(), output);
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sign(), output);
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:trade.UnifiedorderResponse)
}

::google::protobuf::uint8* UnifiedorderResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.UnifiedorderResponse)
  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app_id().data(), this->app_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.app_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->app_id(), target);
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->partner_id().data(), this->partner_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.partner_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->partner_id(), target);
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->prepay_id().data(), this->prepay_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.prepay_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->prepay_id(), target);
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->package().data(), this->package().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.package");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->package(), target);
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->noncestr().data(), this->noncestr().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.noncestr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->noncestr(), target);
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time_stamp().data(), this->time_stamp().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.time_stamp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time_stamp(), target);
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.UnifiedorderResponse.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sign(), target);
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.UnifiedorderResponse)
  return target;
}

size_t UnifiedorderResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.UnifiedorderResponse)
  size_t total_size = 0;

  // optional string app_id = 1;
  if (this->app_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app_id());
  }

  // optional string partner_id = 2;
  if (this->partner_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->partner_id());
  }

  // optional string prepay_id = 3;
  if (this->prepay_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->prepay_id());
  }

  // optional string package = 4;
  if (this->package().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->package());
  }

  // optional string noncestr = 5;
  if (this->noncestr().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->noncestr());
  }

  // optional string time_stamp = 6;
  if (this->time_stamp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time_stamp());
  }

  // optional string sign = 7;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  // optional .grpcCommon.GrpcError error = 8;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnifiedorderResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.UnifiedorderResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UnifiedorderResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnifiedorderResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.UnifiedorderResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.UnifiedorderResponse)
    UnsafeMergeFrom(*source);
  }
}

void UnifiedorderResponse::MergeFrom(const UnifiedorderResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.UnifiedorderResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UnifiedorderResponse::UnsafeMergeFrom(const UnifiedorderResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.app_id().size() > 0) {

    app_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_id_);
  }
  if (from.partner_id().size() > 0) {

    partner_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.partner_id_);
  }
  if (from.prepay_id().size() > 0) {

    prepay_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.prepay_id_);
  }
  if (from.package().size() > 0) {

    package_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.package_);
  }
  if (from.noncestr().size() > 0) {

    noncestr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.noncestr_);
  }
  if (from.time_stamp().size() > 0) {

    time_stamp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_stamp_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void UnifiedorderResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.UnifiedorderResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnifiedorderResponse::CopyFrom(const UnifiedorderResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.UnifiedorderResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UnifiedorderResponse::IsInitialized() const {

  return true;
}

void UnifiedorderResponse::Swap(UnifiedorderResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnifiedorderResponse::InternalSwap(UnifiedorderResponse* other) {
  app_id_.Swap(&other->app_id_);
  partner_id_.Swap(&other->partner_id_);
  prepay_id_.Swap(&other->prepay_id_);
  package_.Swap(&other->package_);
  noncestr_.Swap(&other->noncestr_);
  time_stamp_.Swap(&other->time_stamp_);
  sign_.Swap(&other->sign_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnifiedorderResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UnifiedorderResponse_descriptor_;
  metadata.reflection = UnifiedorderResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnifiedorderResponse

// optional string app_id = 1;
void UnifiedorderResponse::clear_app_id() {
  app_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::app_id() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.app_id)
  return app_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_app_id(const ::std::string& value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.app_id)
}
void UnifiedorderResponse::set_app_id(const char* value) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.app_id)
}
void UnifiedorderResponse::set_app_id(const char* value, size_t size) {
  
  app_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.app_id)
}
::std::string* UnifiedorderResponse::mutable_app_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.app_id)
  return app_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_app_id() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.app_id)
  
  return app_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_app_id(::std::string* app_id) {
  if (app_id != NULL) {
    
  } else {
    
  }
  app_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), app_id);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.app_id)
}

// optional string partner_id = 2;
void UnifiedorderResponse::clear_partner_id() {
  partner_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::partner_id() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.partner_id)
  return partner_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_partner_id(const ::std::string& value) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.partner_id)
}
void UnifiedorderResponse::set_partner_id(const char* value) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.partner_id)
}
void UnifiedorderResponse::set_partner_id(const char* value, size_t size) {
  
  partner_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.partner_id)
}
::std::string* UnifiedorderResponse::mutable_partner_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.partner_id)
  return partner_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_partner_id() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.partner_id)
  
  return partner_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_partner_id(::std::string* partner_id) {
  if (partner_id != NULL) {
    
  } else {
    
  }
  partner_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), partner_id);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.partner_id)
}

// optional string prepay_id = 3;
void UnifiedorderResponse::clear_prepay_id() {
  prepay_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::prepay_id() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.prepay_id)
  return prepay_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_prepay_id(const ::std::string& value) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.prepay_id)
}
void UnifiedorderResponse::set_prepay_id(const char* value) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.prepay_id)
}
void UnifiedorderResponse::set_prepay_id(const char* value, size_t size) {
  
  prepay_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.prepay_id)
}
::std::string* UnifiedorderResponse::mutable_prepay_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.prepay_id)
  return prepay_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_prepay_id() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.prepay_id)
  
  return prepay_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_prepay_id(::std::string* prepay_id) {
  if (prepay_id != NULL) {
    
  } else {
    
  }
  prepay_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), prepay_id);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.prepay_id)
}

// optional string package = 4;
void UnifiedorderResponse::clear_package() {
  package_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::package() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.package)
  return package_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_package(const ::std::string& value) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.package)
}
void UnifiedorderResponse::set_package(const char* value) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.package)
}
void UnifiedorderResponse::set_package(const char* value, size_t size) {
  
  package_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.package)
}
::std::string* UnifiedorderResponse::mutable_package() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.package)
  return package_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_package() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.package)
  
  return package_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_package(::std::string* package) {
  if (package != NULL) {
    
  } else {
    
  }
  package_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), package);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.package)
}

// optional string noncestr = 5;
void UnifiedorderResponse::clear_noncestr() {
  noncestr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::noncestr() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.noncestr)
  return noncestr_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_noncestr(const ::std::string& value) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.noncestr)
}
void UnifiedorderResponse::set_noncestr(const char* value) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.noncestr)
}
void UnifiedorderResponse::set_noncestr(const char* value, size_t size) {
  
  noncestr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.noncestr)
}
::std::string* UnifiedorderResponse::mutable_noncestr() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.noncestr)
  return noncestr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_noncestr() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.noncestr)
  
  return noncestr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_noncestr(::std::string* noncestr) {
  if (noncestr != NULL) {
    
  } else {
    
  }
  noncestr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), noncestr);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.noncestr)
}

// optional string time_stamp = 6;
void UnifiedorderResponse::clear_time_stamp() {
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::time_stamp() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.time_stamp)
  return time_stamp_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_time_stamp(const ::std::string& value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.time_stamp)
}
void UnifiedorderResponse::set_time_stamp(const char* value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.time_stamp)
}
void UnifiedorderResponse::set_time_stamp(const char* value, size_t size) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.time_stamp)
}
::std::string* UnifiedorderResponse::mutable_time_stamp() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.time_stamp)
  return time_stamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_time_stamp() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.time_stamp)
  
  return time_stamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_time_stamp(::std::string* time_stamp) {
  if (time_stamp != NULL) {
    
  } else {
    
  }
  time_stamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_stamp);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.time_stamp)
}

// optional string sign = 7;
void UnifiedorderResponse::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UnifiedorderResponse::sign() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.sign)
  return sign_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_sign(const ::std::string& value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.UnifiedorderResponse.sign)
}
void UnifiedorderResponse::set_sign(const char* value) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.UnifiedorderResponse.sign)
}
void UnifiedorderResponse::set_sign(const char* value, size_t size) {
  
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.UnifiedorderResponse.sign)
}
::std::string* UnifiedorderResponse::mutable_sign() {
  
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UnifiedorderResponse::release_sign() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.sign)
  
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UnifiedorderResponse::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    
  } else {
    
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.sign)
}

// optional .grpcCommon.GrpcError error = 8;
bool UnifiedorderResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void UnifiedorderResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& UnifiedorderResponse::error() const {
  // @@protoc_insertion_point(field_get:trade.UnifiedorderResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* UnifiedorderResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:trade.UnifiedorderResponse.error)
  return error_;
}
::grpcCommon::GrpcError* UnifiedorderResponse::release_error() {
  // @@protoc_insertion_point(field_release:trade.UnifiedorderResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void UnifiedorderResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:trade.UnifiedorderResponse.error)
}

inline const UnifiedorderResponse* UnifiedorderResponse::internal_default_instance() {
  return &UnifiedorderResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyOrdersRequest::kUserIdFieldNumber;
const int MyOrdersRequest::kPageNumberFieldNumber;
const int MyOrdersRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyOrdersRequest::MyOrdersRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.MyOrdersRequest)
}

void MyOrdersRequest::InitAsDefaultInstance() {
}

MyOrdersRequest::MyOrdersRequest(const MyOrdersRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.MyOrdersRequest)
}

void MyOrdersRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_number_) + sizeof(page_size_));
  _cached_size_ = 0;
}

MyOrdersRequest::~MyOrdersRequest() {
  // @@protoc_insertion_point(destructor:trade.MyOrdersRequest)
  SharedDtor();
}

void MyOrdersRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyOrdersRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyOrdersRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyOrdersRequest_descriptor_;
}

const MyOrdersRequest& MyOrdersRequest::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyOrdersRequest> MyOrdersRequest_default_instance_;

MyOrdersRequest* MyOrdersRequest::New(::google::protobuf::Arena* arena) const {
  MyOrdersRequest* n = new MyOrdersRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyOrdersRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.MyOrdersRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MyOrdersRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MyOrdersRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(page_number_, page_size_);
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MyOrdersRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.MyOrdersRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_number;
        break;
      }

      // optional int32 page_number = 2;
      case 2: {
        if (tag == 16) {
         parse_page_number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.MyOrdersRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.MyOrdersRequest)
  return false;
#undef DO_
}

void MyOrdersRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.MyOrdersRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:trade.MyOrdersRequest)
}

::google::protobuf::uint8* MyOrdersRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.MyOrdersRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.MyOrdersRequest)
  return target;
}

size_t MyOrdersRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.MyOrdersRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyOrdersRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.MyOrdersRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyOrdersRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyOrdersRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.MyOrdersRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.MyOrdersRequest)
    UnsafeMergeFrom(*source);
  }
}

void MyOrdersRequest::MergeFrom(const MyOrdersRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.MyOrdersRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyOrdersRequest::UnsafeMergeFrom(const MyOrdersRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void MyOrdersRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.MyOrdersRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyOrdersRequest::CopyFrom(const MyOrdersRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.MyOrdersRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyOrdersRequest::IsInitialized() const {

  return true;
}

void MyOrdersRequest::Swap(MyOrdersRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyOrdersRequest::InternalSwap(MyOrdersRequest* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(page_number_, other->page_number_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyOrdersRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyOrdersRequest_descriptor_;
  metadata.reflection = MyOrdersRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyOrdersRequest

// optional string user_id = 1;
void MyOrdersRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersRequest::user_id() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersRequest.user_id)
}
void MyOrdersRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersRequest.user_id)
}
void MyOrdersRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersRequest.user_id)
}
::std::string* MyOrdersRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersRequest.user_id)
}

// optional int32 page_number = 2;
void MyOrdersRequest::clear_page_number() {
  page_number_ = 0;
}
::google::protobuf::int32 MyOrdersRequest::page_number() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersRequest.page_number)
  return page_number_;
}
void MyOrdersRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:trade.MyOrdersRequest.page_number)
}

// optional int32 page_size = 3;
void MyOrdersRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 MyOrdersRequest::page_size() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersRequest.page_size)
  return page_size_;
}
void MyOrdersRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:trade.MyOrdersRequest.page_size)
}

inline const MyOrdersRequest* MyOrdersRequest::internal_default_instance() {
  return &MyOrdersRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyOrdersResponse_Result::kOrderIdFieldNumber;
const int MyOrdersResponse_Result::kCreateTimeFieldNumber;
const int MyOrdersResponse_Result::kOrderMoneyFieldNumber;
const int MyOrdersResponse_Result::kOrderProductTypeFieldNumber;
const int MyOrdersResponse_Result::kOrderStateFieldNumber;
const int MyOrdersResponse_Result::kOrderTitleFieldNumber;
const int MyOrdersResponse_Result::kPayWayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyOrdersResponse_Result::MyOrdersResponse_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.MyOrdersResponse.Result)
}

void MyOrdersResponse_Result::InitAsDefaultInstance() {
}

MyOrdersResponse_Result::MyOrdersResponse_Result(const MyOrdersResponse_Result& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.MyOrdersResponse.Result)
}

void MyOrdersResponse_Result::SharedCtor() {
  order_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_money_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_product_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_way_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_state_ = 0;
  _cached_size_ = 0;
}

MyOrdersResponse_Result::~MyOrdersResponse_Result() {
  // @@protoc_insertion_point(destructor:trade.MyOrdersResponse.Result)
  SharedDtor();
}

void MyOrdersResponse_Result::SharedDtor() {
  order_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_money_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_product_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_way_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyOrdersResponse_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyOrdersResponse_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyOrdersResponse_Result_descriptor_;
}

const MyOrdersResponse_Result& MyOrdersResponse_Result::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyOrdersResponse_Result> MyOrdersResponse_Result_default_instance_;

MyOrdersResponse_Result* MyOrdersResponse_Result::New(::google::protobuf::Arena* arena) const {
  MyOrdersResponse_Result* n = new MyOrdersResponse_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyOrdersResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.MyOrdersResponse.Result)
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_money_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_product_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  order_state_ = 0;
  order_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_way_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyOrdersResponse_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.MyOrdersResponse.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string order_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_id().data(), this->order_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.order_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_create_time;
        break;
      }

      // optional string create_time = 2;
      case 2: {
        if (tag == 18) {
         parse_create_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_create_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->create_time().data(), this->create_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.create_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_order_money;
        break;
      }

      // optional string order_money = 3;
      case 3: {
        if (tag == 26) {
         parse_order_money:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_money()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_money().data(), this->order_money().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.order_money"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_order_product_type;
        break;
      }

      // optional string order_product_type = 5;
      case 5: {
        if (tag == 42) {
         parse_order_product_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_product_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_product_type().data(), this->order_product_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.order_product_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_order_state;
        break;
      }

      // optional int32 order_state = 6;
      case 6: {
        if (tag == 48) {
         parse_order_state:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &order_state_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_order_title;
        break;
      }

      // optional string order_title = 7;
      case 7: {
        if (tag == 58) {
         parse_order_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_order_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->order_title().data(), this->order_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.order_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_pay_way;
        break;
      }

      // optional string pay_way = 8;
      case 8: {
        if (tag == 66) {
         parse_pay_way:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_way()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_way().data(), this->pay_way().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.MyOrdersResponse.Result.pay_way"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.MyOrdersResponse.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.MyOrdersResponse.Result)
  return false;
#undef DO_
}

void MyOrdersResponse_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.MyOrdersResponse.Result)
  // optional string order_id = 1;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->order_id(), output);
  }

  // optional string create_time = 2;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), this->create_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.create_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->create_time(), output);
  }

  // optional string order_money = 3;
  if (this->order_money().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_money().data(), this->order_money().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_money");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->order_money(), output);
  }

  // optional string order_product_type = 5;
  if (this->order_product_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_product_type().data(), this->order_product_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_product_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->order_product_type(), output);
  }

  // optional int32 order_state = 6;
  if (this->order_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->order_state(), output);
  }

  // optional string order_title = 7;
  if (this->order_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_title().data(), this->order_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->order_title(), output);
  }

  // optional string pay_way = 8;
  if (this->pay_way().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_way().data(), this->pay_way().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.pay_way");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->pay_way(), output);
  }

  // @@protoc_insertion_point(serialize_end:trade.MyOrdersResponse.Result)
}

::google::protobuf::uint8* MyOrdersResponse_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.MyOrdersResponse.Result)
  // optional string order_id = 1;
  if (this->order_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_id().data(), this->order_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->order_id(), target);
  }

  // optional string create_time = 2;
  if (this->create_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->create_time().data(), this->create_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.create_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->create_time(), target);
  }

  // optional string order_money = 3;
  if (this->order_money().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_money().data(), this->order_money().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_money");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->order_money(), target);
  }

  // optional string order_product_type = 5;
  if (this->order_product_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_product_type().data(), this->order_product_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_product_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->order_product_type(), target);
  }

  // optional int32 order_state = 6;
  if (this->order_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->order_state(), target);
  }

  // optional string order_title = 7;
  if (this->order_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->order_title().data(), this->order_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.order_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->order_title(), target);
  }

  // optional string pay_way = 8;
  if (this->pay_way().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_way().data(), this->pay_way().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.MyOrdersResponse.Result.pay_way");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->pay_way(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.MyOrdersResponse.Result)
  return target;
}

size_t MyOrdersResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.MyOrdersResponse.Result)
  size_t total_size = 0;

  // optional string order_id = 1;
  if (this->order_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_id());
  }

  // optional string create_time = 2;
  if (this->create_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->create_time());
  }

  // optional string order_money = 3;
  if (this->order_money().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_money());
  }

  // optional string order_product_type = 5;
  if (this->order_product_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_product_type());
  }

  // optional int32 order_state = 6;
  if (this->order_state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->order_state());
  }

  // optional string order_title = 7;
  if (this->order_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->order_title());
  }

  // optional string pay_way = 8;
  if (this->pay_way().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_way());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyOrdersResponse_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.MyOrdersResponse.Result)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyOrdersResponse_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyOrdersResponse_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.MyOrdersResponse.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.MyOrdersResponse.Result)
    UnsafeMergeFrom(*source);
  }
}

void MyOrdersResponse_Result::MergeFrom(const MyOrdersResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.MyOrdersResponse.Result)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyOrdersResponse_Result::UnsafeMergeFrom(const MyOrdersResponse_Result& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.order_id().size() > 0) {

    order_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_id_);
  }
  if (from.create_time().size() > 0) {

    create_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.create_time_);
  }
  if (from.order_money().size() > 0) {

    order_money_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_money_);
  }
  if (from.order_product_type().size() > 0) {

    order_product_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_product_type_);
  }
  if (from.order_state() != 0) {
    set_order_state(from.order_state());
  }
  if (from.order_title().size() > 0) {

    order_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.order_title_);
  }
  if (from.pay_way().size() > 0) {

    pay_way_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_way_);
  }
}

void MyOrdersResponse_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.MyOrdersResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyOrdersResponse_Result::CopyFrom(const MyOrdersResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.MyOrdersResponse.Result)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyOrdersResponse_Result::IsInitialized() const {

  return true;
}

void MyOrdersResponse_Result::Swap(MyOrdersResponse_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyOrdersResponse_Result::InternalSwap(MyOrdersResponse_Result* other) {
  order_id_.Swap(&other->order_id_);
  create_time_.Swap(&other->create_time_);
  order_money_.Swap(&other->order_money_);
  order_product_type_.Swap(&other->order_product_type_);
  std::swap(order_state_, other->order_state_);
  order_title_.Swap(&other->order_title_);
  pay_way_.Swap(&other->pay_way_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyOrdersResponse_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyOrdersResponse_Result_descriptor_;
  metadata.reflection = MyOrdersResponse_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyOrdersResponse::kResultsFieldNumber;
const int MyOrdersResponse::kTotalCountFieldNumber;
const int MyOrdersResponse::kHasMoreFieldNumber;
const int MyOrdersResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyOrdersResponse::MyOrdersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.MyOrdersResponse)
}

void MyOrdersResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

MyOrdersResponse::MyOrdersResponse(const MyOrdersResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.MyOrdersResponse)
}

void MyOrdersResponse::SharedCtor() {
  error_ = NULL;
  ::memset(&total_count_, 0, reinterpret_cast<char*>(&has_more_) -
    reinterpret_cast<char*>(&total_count_) + sizeof(has_more_));
  _cached_size_ = 0;
}

MyOrdersResponse::~MyOrdersResponse() {
  // @@protoc_insertion_point(destructor:trade.MyOrdersResponse)
  SharedDtor();
}

void MyOrdersResponse::SharedDtor() {
  if (this != &MyOrdersResponse_default_instance_.get()) {
    delete error_;
  }
}

void MyOrdersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyOrdersResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyOrdersResponse_descriptor_;
}

const MyOrdersResponse& MyOrdersResponse::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5ftrade_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyOrdersResponse> MyOrdersResponse_default_instance_;

MyOrdersResponse* MyOrdersResponse::New(::google::protobuf::Arena* arena) const {
  MyOrdersResponse* n = new MyOrdersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyOrdersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.MyOrdersResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MyOrdersResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MyOrdersResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(total_count_, has_more_);
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  results_.Clear();
}

bool MyOrdersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.MyOrdersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .trade.MyOrdersResponse.Result results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_total_count;
        break;
      }

      // optional int32 total_count = 2;
      case 2: {
        if (tag == 16) {
         parse_total_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_has_more;
        break;
      }

      // optional bool has_more = 3;
      case 3: {
        if (tag == 24) {
         parse_has_more:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 4;
      case 4: {
        if (tag == 34) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.MyOrdersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.MyOrdersResponse)
  return false;
#undef DO_
}

void MyOrdersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.MyOrdersResponse)
  // repeated .trade.MyOrdersResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_count(), output);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_more(), output);
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:trade.MyOrdersResponse)
}

::google::protobuf::uint8* MyOrdersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.MyOrdersResponse)
  // repeated .trade.MyOrdersResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), false, target);
  }

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_count(), target);
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_more(), target);
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.MyOrdersResponse)
  return target;
}

size_t MyOrdersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.MyOrdersResponse)
  size_t total_size = 0;

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());
  }

  // optional bool has_more = 3;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // repeated .trade.MyOrdersResponse.Result results = 1;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyOrdersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.MyOrdersResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyOrdersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyOrdersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.MyOrdersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.MyOrdersResponse)
    UnsafeMergeFrom(*source);
  }
}

void MyOrdersResponse::MergeFrom(const MyOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.MyOrdersResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyOrdersResponse::UnsafeMergeFrom(const MyOrdersResponse& from) {
  GOOGLE_DCHECK(&from != this);
  results_.MergeFrom(from.results_);
  if (from.total_count() != 0) {
    set_total_count(from.total_count());
  }
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void MyOrdersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.MyOrdersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyOrdersResponse::CopyFrom(const MyOrdersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.MyOrdersResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyOrdersResponse::IsInitialized() const {

  return true;
}

void MyOrdersResponse::Swap(MyOrdersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyOrdersResponse::InternalSwap(MyOrdersResponse* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(total_count_, other->total_count_);
  std::swap(has_more_, other->has_more_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyOrdersResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyOrdersResponse_descriptor_;
  metadata.reflection = MyOrdersResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyOrdersResponse_Result

// optional string order_id = 1;
void MyOrdersResponse_Result::clear_order_id() {
  order_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::order_id() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.order_id)
  return order_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_order_id(const ::std::string& value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.order_id)
}
void MyOrdersResponse_Result::set_order_id(const char* value) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.order_id)
}
void MyOrdersResponse_Result::set_order_id(const char* value, size_t size) {
  
  order_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.order_id)
}
::std::string* MyOrdersResponse_Result::mutable_order_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.order_id)
  return order_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_order_id() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.order_id)
  
  return order_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_order_id(::std::string* order_id) {
  if (order_id != NULL) {
    
  } else {
    
  }
  order_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_id);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.order_id)
}

// optional string create_time = 2;
void MyOrdersResponse_Result::clear_create_time() {
  create_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::create_time() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.create_time)
  return create_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_create_time(const ::std::string& value) {
  
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.create_time)
}
void MyOrdersResponse_Result::set_create_time(const char* value) {
  
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.create_time)
}
void MyOrdersResponse_Result::set_create_time(const char* value, size_t size) {
  
  create_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.create_time)
}
::std::string* MyOrdersResponse_Result::mutable_create_time() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.create_time)
  return create_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_create_time() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.create_time)
  
  return create_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_create_time(::std::string* create_time) {
  if (create_time != NULL) {
    
  } else {
    
  }
  create_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), create_time);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.create_time)
}

// optional string order_money = 3;
void MyOrdersResponse_Result::clear_order_money() {
  order_money_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::order_money() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.order_money)
  return order_money_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_order_money(const ::std::string& value) {
  
  order_money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.order_money)
}
void MyOrdersResponse_Result::set_order_money(const char* value) {
  
  order_money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.order_money)
}
void MyOrdersResponse_Result::set_order_money(const char* value, size_t size) {
  
  order_money_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.order_money)
}
::std::string* MyOrdersResponse_Result::mutable_order_money() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.order_money)
  return order_money_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_order_money() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.order_money)
  
  return order_money_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_order_money(::std::string* order_money) {
  if (order_money != NULL) {
    
  } else {
    
  }
  order_money_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_money);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.order_money)
}

// optional string order_product_type = 5;
void MyOrdersResponse_Result::clear_order_product_type() {
  order_product_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::order_product_type() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.order_product_type)
  return order_product_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_order_product_type(const ::std::string& value) {
  
  order_product_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.order_product_type)
}
void MyOrdersResponse_Result::set_order_product_type(const char* value) {
  
  order_product_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.order_product_type)
}
void MyOrdersResponse_Result::set_order_product_type(const char* value, size_t size) {
  
  order_product_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.order_product_type)
}
::std::string* MyOrdersResponse_Result::mutable_order_product_type() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.order_product_type)
  return order_product_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_order_product_type() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.order_product_type)
  
  return order_product_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_order_product_type(::std::string* order_product_type) {
  if (order_product_type != NULL) {
    
  } else {
    
  }
  order_product_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_product_type);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.order_product_type)
}

// optional int32 order_state = 6;
void MyOrdersResponse_Result::clear_order_state() {
  order_state_ = 0;
}
::google::protobuf::int32 MyOrdersResponse_Result::order_state() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.order_state)
  return order_state_;
}
void MyOrdersResponse_Result::set_order_state(::google::protobuf::int32 value) {
  
  order_state_ = value;
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.order_state)
}

// optional string order_title = 7;
void MyOrdersResponse_Result::clear_order_title() {
  order_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::order_title() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.order_title)
  return order_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_order_title(const ::std::string& value) {
  
  order_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.order_title)
}
void MyOrdersResponse_Result::set_order_title(const char* value) {
  
  order_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.order_title)
}
void MyOrdersResponse_Result::set_order_title(const char* value, size_t size) {
  
  order_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.order_title)
}
::std::string* MyOrdersResponse_Result::mutable_order_title() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.order_title)
  return order_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_order_title() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.order_title)
  
  return order_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_order_title(::std::string* order_title) {
  if (order_title != NULL) {
    
  } else {
    
  }
  order_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order_title);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.order_title)
}

// optional string pay_way = 8;
void MyOrdersResponse_Result::clear_pay_way() {
  pay_way_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyOrdersResponse_Result::pay_way() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.Result.pay_way)
  return pay_way_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_pay_way(const ::std::string& value) {
  
  pay_way_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.Result.pay_way)
}
void MyOrdersResponse_Result::set_pay_way(const char* value) {
  
  pay_way_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.MyOrdersResponse.Result.pay_way)
}
void MyOrdersResponse_Result::set_pay_way(const char* value, size_t size) {
  
  pay_way_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.MyOrdersResponse.Result.pay_way)
}
::std::string* MyOrdersResponse_Result::mutable_pay_way() {
  
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.Result.pay_way)
  return pay_way_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyOrdersResponse_Result::release_pay_way() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.Result.pay_way)
  
  return pay_way_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyOrdersResponse_Result::set_allocated_pay_way(::std::string* pay_way) {
  if (pay_way != NULL) {
    
  } else {
    
  }
  pay_way_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pay_way);
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.Result.pay_way)
}

inline const MyOrdersResponse_Result* MyOrdersResponse_Result::internal_default_instance() {
  return &MyOrdersResponse_Result_default_instance_.get();
}
// -------------------------------------------------------------------

// MyOrdersResponse

// repeated .trade.MyOrdersResponse.Result results = 1;
int MyOrdersResponse::results_size() const {
  return results_.size();
}
void MyOrdersResponse::clear_results() {
  results_.Clear();
}
const ::trade::MyOrdersResponse_Result& MyOrdersResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.results)
  return results_.Get(index);
}
::trade::MyOrdersResponse_Result* MyOrdersResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.results)
  return results_.Mutable(index);
}
::trade::MyOrdersResponse_Result* MyOrdersResponse::add_results() {
  // @@protoc_insertion_point(field_add:trade.MyOrdersResponse.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::trade::MyOrdersResponse_Result >*
MyOrdersResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:trade.MyOrdersResponse.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::trade::MyOrdersResponse_Result >&
MyOrdersResponse::results() const {
  // @@protoc_insertion_point(field_list:trade.MyOrdersResponse.results)
  return results_;
}

// optional int32 total_count = 2;
void MyOrdersResponse::clear_total_count() {
  total_count_ = 0;
}
::google::protobuf::int32 MyOrdersResponse::total_count() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.total_count)
  return total_count_;
}
void MyOrdersResponse::set_total_count(::google::protobuf::int32 value) {
  
  total_count_ = value;
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.total_count)
}

// optional bool has_more = 3;
void MyOrdersResponse::clear_has_more() {
  has_more_ = false;
}
bool MyOrdersResponse::has_more() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.has_more)
  return has_more_;
}
void MyOrdersResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:trade.MyOrdersResponse.has_more)
}

// optional .grpcCommon.GrpcError error = 4;
bool MyOrdersResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void MyOrdersResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& MyOrdersResponse::error() const {
  // @@protoc_insertion_point(field_get:trade.MyOrdersResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* MyOrdersResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:trade.MyOrdersResponse.error)
  return error_;
}
::grpcCommon::GrpcError* MyOrdersResponse::release_error() {
  // @@protoc_insertion_point(field_release:trade.MyOrdersResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void MyOrdersResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:trade.MyOrdersResponse.error)
}

inline const MyOrdersResponse* MyOrdersResponse::internal_default_instance() {
  return &MyOrdersResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace trade

// @@protoc_insertion_point(global_scope)
