// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: trade/msg_iap_verify.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "trade/msg_iap_verify.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace trade {

namespace {

const ::google::protobuf::Descriptor* IAPVerifyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IAPVerifyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* IAPVerifyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  IAPVerifyResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_trade_2fmsg_5fiap_5fverify_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_trade_2fmsg_5fiap_5fverify_2eproto() {
  protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "trade/msg_iap_verify.proto");
  GOOGLE_CHECK(file != NULL);
  IAPVerifyRequest_descriptor_ = file->message_type(0);
  static const int IAPVerifyRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyRequest, receipt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyRequest, iap_order_number_),
  };
  IAPVerifyRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IAPVerifyRequest_descriptor_,
      IAPVerifyRequest::internal_default_instance(),
      IAPVerifyRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(IAPVerifyRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyRequest, _internal_metadata_));
  IAPVerifyResponse_descriptor_ = file->message_type(1);
  static const int IAPVerifyResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyResponse, verify_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyResponse, error_),
  };
  IAPVerifyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      IAPVerifyResponse_descriptor_,
      IAPVerifyResponse::internal_default_instance(),
      IAPVerifyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(IAPVerifyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IAPVerifyResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_trade_2fmsg_5fiap_5fverify_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IAPVerifyRequest_descriptor_, IAPVerifyRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      IAPVerifyResponse_descriptor_, IAPVerifyResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_trade_2fmsg_5fiap_5fverify_2eproto() {
  IAPVerifyRequest_default_instance_.Shutdown();
  delete IAPVerifyRequest_reflection_;
  IAPVerifyResponse_default_instance_.Shutdown();
  delete IAPVerifyResponse_reflection_;
}

void protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  IAPVerifyRequest_default_instance_.DefaultConstruct();
  IAPVerifyResponse_default_instance_.DefaultConstruct();
  IAPVerifyRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  IAPVerifyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto_once_);
void protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto_once_,
                 &protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto_impl);
}
void protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032trade/msg_iap_verify.proto\022\005trade\032\032grp"
    "cCommon/msg_error.proto\"N\n\020IAPVerifyRequ"
    "est\022\017\n\007user_id\030\001 \001(\t\022\017\n\007receipt\030\002 \001(\t\022\030\n"
    "\020iap_order_number\030\003 \001(\t\"Q\n\021IAPVerifyResp"
    "onse\022\026\n\016verify_success\030\001 \001(\010\022$\n\005error\030\002 "
    "\001(\0132\025.grpcCommon.GrpcErrorB\034\n\021com.wanfan"
    "g.tradeP\001\242\002\004WFPRb\006proto3", 264);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "trade/msg_iap_verify.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_trade_2fmsg_5fiap_5fverify_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto_once_);
void protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto_once_,
                 &protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_trade_2fmsg_5fiap_5fverify_2eproto {
  StaticDescriptorInitializer_trade_2fmsg_5fiap_5fverify_2eproto() {
    protobuf_AddDesc_trade_2fmsg_5fiap_5fverify_2eproto();
  }
} static_descriptor_initializer_trade_2fmsg_5fiap_5fverify_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IAPVerifyRequest::kUserIdFieldNumber;
const int IAPVerifyRequest::kReceiptFieldNumber;
const int IAPVerifyRequest::kIapOrderNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IAPVerifyRequest::IAPVerifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.IAPVerifyRequest)
}

void IAPVerifyRequest::InitAsDefaultInstance() {
}

IAPVerifyRequest::IAPVerifyRequest(const IAPVerifyRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.IAPVerifyRequest)
}

void IAPVerifyRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iap_order_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

IAPVerifyRequest::~IAPVerifyRequest() {
  // @@protoc_insertion_point(destructor:trade.IAPVerifyRequest)
  SharedDtor();
}

void IAPVerifyRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iap_order_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IAPVerifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IAPVerifyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IAPVerifyRequest_descriptor_;
}

const IAPVerifyRequest& IAPVerifyRequest::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IAPVerifyRequest> IAPVerifyRequest_default_instance_;

IAPVerifyRequest* IAPVerifyRequest::New(::google::protobuf::Arena* arena) const {
  IAPVerifyRequest* n = new IAPVerifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IAPVerifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.IAPVerifyRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  iap_order_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool IAPVerifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.IAPVerifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.IAPVerifyRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_receipt;
        break;
      }

      // optional string receipt = 2;
      case 2: {
        if (tag == 18) {
         parse_receipt:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_receipt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->receipt().data(), this->receipt().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.IAPVerifyRequest.receipt"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_iap_order_number;
        break;
      }

      // optional string iap_order_number = 3;
      case 3: {
        if (tag == 26) {
         parse_iap_order_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iap_order_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iap_order_number().data(), this->iap_order_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "trade.IAPVerifyRequest.iap_order_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.IAPVerifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.IAPVerifyRequest)
  return false;
#undef DO_
}

void IAPVerifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.IAPVerifyRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string receipt = 2;
  if (this->receipt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.receipt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->receipt(), output);
  }

  // optional string iap_order_number = 3;
  if (this->iap_order_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iap_order_number().data(), this->iap_order_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.iap_order_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->iap_order_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:trade.IAPVerifyRequest)
}

::google::protobuf::uint8* IAPVerifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.IAPVerifyRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string receipt = 2;
  if (this->receipt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->receipt().data(), this->receipt().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.receipt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->receipt(), target);
  }

  // optional string iap_order_number = 3;
  if (this->iap_order_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iap_order_number().data(), this->iap_order_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "trade.IAPVerifyRequest.iap_order_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->iap_order_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.IAPVerifyRequest)
  return target;
}

size_t IAPVerifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.IAPVerifyRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string receipt = 2;
  if (this->receipt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->receipt());
  }

  // optional string iap_order_number = 3;
  if (this->iap_order_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iap_order_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IAPVerifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.IAPVerifyRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IAPVerifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IAPVerifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.IAPVerifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.IAPVerifyRequest)
    UnsafeMergeFrom(*source);
  }
}

void IAPVerifyRequest::MergeFrom(const IAPVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.IAPVerifyRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IAPVerifyRequest::UnsafeMergeFrom(const IAPVerifyRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.receipt().size() > 0) {

    receipt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.receipt_);
  }
  if (from.iap_order_number().size() > 0) {

    iap_order_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iap_order_number_);
  }
}

void IAPVerifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.IAPVerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IAPVerifyRequest::CopyFrom(const IAPVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.IAPVerifyRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IAPVerifyRequest::IsInitialized() const {

  return true;
}

void IAPVerifyRequest::Swap(IAPVerifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IAPVerifyRequest::InternalSwap(IAPVerifyRequest* other) {
  user_id_.Swap(&other->user_id_);
  receipt_.Swap(&other->receipt_);
  iap_order_number_.Swap(&other->iap_order_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IAPVerifyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IAPVerifyRequest_descriptor_;
  metadata.reflection = IAPVerifyRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IAPVerifyRequest

// optional string user_id = 1;
void IAPVerifyRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IAPVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:trade.IAPVerifyRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPVerifyRequest.user_id)
}
void IAPVerifyRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPVerifyRequest.user_id)
}
void IAPVerifyRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPVerifyRequest.user_id)
}
::std::string* IAPVerifyRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPVerifyRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IAPVerifyRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:trade.IAPVerifyRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPVerifyRequest.user_id)
}

// optional string receipt = 2;
void IAPVerifyRequest::clear_receipt() {
  receipt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IAPVerifyRequest::receipt() const {
  // @@protoc_insertion_point(field_get:trade.IAPVerifyRequest.receipt)
  return receipt_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_receipt(const ::std::string& value) {
  
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPVerifyRequest.receipt)
}
void IAPVerifyRequest::set_receipt(const char* value) {
  
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPVerifyRequest.receipt)
}
void IAPVerifyRequest::set_receipt(const char* value, size_t size) {
  
  receipt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPVerifyRequest.receipt)
}
::std::string* IAPVerifyRequest::mutable_receipt() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPVerifyRequest.receipt)
  return receipt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IAPVerifyRequest::release_receipt() {
  // @@protoc_insertion_point(field_release:trade.IAPVerifyRequest.receipt)
  
  return receipt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_allocated_receipt(::std::string* receipt) {
  if (receipt != NULL) {
    
  } else {
    
  }
  receipt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), receipt);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPVerifyRequest.receipt)
}

// optional string iap_order_number = 3;
void IAPVerifyRequest::clear_iap_order_number() {
  iap_order_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& IAPVerifyRequest::iap_order_number() const {
  // @@protoc_insertion_point(field_get:trade.IAPVerifyRequest.iap_order_number)
  return iap_order_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_iap_order_number(const ::std::string& value) {
  
  iap_order_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:trade.IAPVerifyRequest.iap_order_number)
}
void IAPVerifyRequest::set_iap_order_number(const char* value) {
  
  iap_order_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:trade.IAPVerifyRequest.iap_order_number)
}
void IAPVerifyRequest::set_iap_order_number(const char* value, size_t size) {
  
  iap_order_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:trade.IAPVerifyRequest.iap_order_number)
}
::std::string* IAPVerifyRequest::mutable_iap_order_number() {
  
  // @@protoc_insertion_point(field_mutable:trade.IAPVerifyRequest.iap_order_number)
  return iap_order_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* IAPVerifyRequest::release_iap_order_number() {
  // @@protoc_insertion_point(field_release:trade.IAPVerifyRequest.iap_order_number)
  
  return iap_order_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void IAPVerifyRequest::set_allocated_iap_order_number(::std::string* iap_order_number) {
  if (iap_order_number != NULL) {
    
  } else {
    
  }
  iap_order_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), iap_order_number);
  // @@protoc_insertion_point(field_set_allocated:trade.IAPVerifyRequest.iap_order_number)
}

inline const IAPVerifyRequest* IAPVerifyRequest::internal_default_instance() {
  return &IAPVerifyRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IAPVerifyResponse::kVerifySuccessFieldNumber;
const int IAPVerifyResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IAPVerifyResponse::IAPVerifyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:trade.IAPVerifyResponse)
}

void IAPVerifyResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

IAPVerifyResponse::IAPVerifyResponse(const IAPVerifyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:trade.IAPVerifyResponse)
}

void IAPVerifyResponse::SharedCtor() {
  error_ = NULL;
  verify_success_ = false;
  _cached_size_ = 0;
}

IAPVerifyResponse::~IAPVerifyResponse() {
  // @@protoc_insertion_point(destructor:trade.IAPVerifyResponse)
  SharedDtor();
}

void IAPVerifyResponse::SharedDtor() {
  if (this != &IAPVerifyResponse_default_instance_.get()) {
    delete error_;
  }
}

void IAPVerifyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IAPVerifyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return IAPVerifyResponse_descriptor_;
}

const IAPVerifyResponse& IAPVerifyResponse::default_instance() {
  protobuf_InitDefaults_trade_2fmsg_5fiap_5fverify_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<IAPVerifyResponse> IAPVerifyResponse_default_instance_;

IAPVerifyResponse* IAPVerifyResponse::New(::google::protobuf::Arena* arena) const {
  IAPVerifyResponse* n = new IAPVerifyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void IAPVerifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:trade.IAPVerifyResponse)
  verify_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool IAPVerifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:trade.IAPVerifyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool verify_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &verify_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:trade.IAPVerifyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:trade.IAPVerifyResponse)
  return false;
#undef DO_
}

void IAPVerifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:trade.IAPVerifyResponse)
  // optional bool verify_success = 1;
  if (this->verify_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->verify_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:trade.IAPVerifyResponse)
}

::google::protobuf::uint8* IAPVerifyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:trade.IAPVerifyResponse)
  // optional bool verify_success = 1;
  if (this->verify_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->verify_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:trade.IAPVerifyResponse)
  return target;
}

size_t IAPVerifyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:trade.IAPVerifyResponse)
  size_t total_size = 0;

  // optional bool verify_success = 1;
  if (this->verify_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void IAPVerifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:trade.IAPVerifyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const IAPVerifyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IAPVerifyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:trade.IAPVerifyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:trade.IAPVerifyResponse)
    UnsafeMergeFrom(*source);
  }
}

void IAPVerifyResponse::MergeFrom(const IAPVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:trade.IAPVerifyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void IAPVerifyResponse::UnsafeMergeFrom(const IAPVerifyResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.verify_success() != 0) {
    set_verify_success(from.verify_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void IAPVerifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:trade.IAPVerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IAPVerifyResponse::CopyFrom(const IAPVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:trade.IAPVerifyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool IAPVerifyResponse::IsInitialized() const {

  return true;
}

void IAPVerifyResponse::Swap(IAPVerifyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IAPVerifyResponse::InternalSwap(IAPVerifyResponse* other) {
  std::swap(verify_success_, other->verify_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IAPVerifyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = IAPVerifyResponse_descriptor_;
  metadata.reflection = IAPVerifyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IAPVerifyResponse

// optional bool verify_success = 1;
void IAPVerifyResponse::clear_verify_success() {
  verify_success_ = false;
}
bool IAPVerifyResponse::verify_success() const {
  // @@protoc_insertion_point(field_get:trade.IAPVerifyResponse.verify_success)
  return verify_success_;
}
void IAPVerifyResponse::set_verify_success(bool value) {
  
  verify_success_ = value;
  // @@protoc_insertion_point(field_set:trade.IAPVerifyResponse.verify_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool IAPVerifyResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void IAPVerifyResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& IAPVerifyResponse::error() const {
  // @@protoc_insertion_point(field_get:trade.IAPVerifyResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* IAPVerifyResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:trade.IAPVerifyResponse.error)
  return error_;
}
::grpcCommon::GrpcError* IAPVerifyResponse::release_error() {
  // @@protoc_insertion_point(field_release:trade.IAPVerifyResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void IAPVerifyResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:trade.IAPVerifyResponse.error)
}

inline const IAPVerifyResponse* IAPVerifyResponse::internal_default_instance() {
  return &IAPVerifyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace trade

// @@protoc_insertion_point(global_scope)
