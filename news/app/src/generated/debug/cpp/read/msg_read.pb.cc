// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: read/msg_read.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "read/msg_read.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace read {

namespace {

const ::google::protobuf::Descriptor* ReadRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReadResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetResourceFileRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetResourceFileRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetResourceFileResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetResourceFileResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_read_2fmsg_5fread_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_read_2fmsg_5fread_2eproto() {
  protobuf_AddDesc_read_2fmsg_5fread_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "read/msg_read.proto");
  GOOGLE_CHECK(file != NULL);
  ReadRequest_descriptor_ = file->message_type(0);
  static const int ReadRequest_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, language_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, resource_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, resource_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, resource_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, login_token_),
  };
  ReadRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadRequest_descriptor_,
      ReadRequest::internal_default_instance(),
      ReadRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadRequest, _internal_metadata_));
  ReadResponse_descriptor_ = file->message_type(1);
  static const int ReadResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, display_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, safe_transaction_string_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, already_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, has_trade_power_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, error_),
  };
  ReadResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadResponse_descriptor_,
      ReadResponse::internal_default_instance(),
      ReadResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ReadResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadResponse, _internal_metadata_));
  GetResourceFileRequest_descriptor_ = file->message_type(2);
  static const int GetResourceFileRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileRequest, resource_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileRequest, resource_id_),
  };
  GetResourceFileRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetResourceFileRequest_descriptor_,
      GetResourceFileRequest::internal_default_instance(),
      GetResourceFileRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetResourceFileRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileRequest, _internal_metadata_));
  GetResourceFileResponse_descriptor_ = file->message_type(3);
  static const int GetResourceFileResponse_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, file_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, content_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, total_byte_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, loading_byte_length_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, file_byte_),
  };
  GetResourceFileResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GetResourceFileResponse_descriptor_,
      GetResourceFileResponse::internal_default_instance(),
      GetResourceFileResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(GetResourceFileResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetResourceFileResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_read_2fmsg_5fread_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadRequest_descriptor_, ReadRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadResponse_descriptor_, ReadResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetResourceFileRequest_descriptor_, GetResourceFileRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GetResourceFileResponse_descriptor_, GetResourceFileResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_read_2fmsg_5fread_2eproto() {
  ReadRequest_default_instance_.Shutdown();
  delete ReadRequest_reflection_;
  ReadResponse_default_instance_.Shutdown();
  delete ReadResponse_reflection_;
  GetResourceFileRequest_default_instance_.Shutdown();
  delete GetResourceFileRequest_reflection_;
  GetResourceFileResponse_default_instance_.Shutdown();
  delete GetResourceFileResponse_reflection_;
}

void protobuf_InitDefaults_read_2fmsg_5fread_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  ReadRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ReadResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetResourceFileRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  GetResourceFileResponse_default_instance_.DefaultConstruct();
  ReadRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ReadResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetResourceFileRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  GetResourceFileResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_read_2fmsg_5fread_2eproto_once_);
void protobuf_InitDefaults_read_2fmsg_5fread_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_read_2fmsg_5fread_2eproto_once_,
                 &protobuf_InitDefaults_read_2fmsg_5fread_2eproto_impl);
}
void protobuf_AddDesc_read_2fmsg_5fread_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023read/msg_read.proto\022\004read\032\032grpcCommon/"
    "msg_error.proto\"\231\001\n\013ReadRequest\022\017\n\007user_"
    "id\030\001 \001(\t\022\020\n\010language\030\002 \001(\t\022\025\n\rresource_t"
    "ype\030\003 \001(\t\022\016\n\006source\030\004 \001(\t\022\026\n\016resource_ti"
    "tle\030\005 \001(\t\022\023\n\013resource_id\030\006 \001(\t\022\023\n\013login_"
    "token\030\007 \001(\t\"\267\001\n\014ReadResponse\022\r\n\005price\030\001 "
    "\001(\t\022\r\n\005title\030\002 \001(\t\022\024\n\014display_info\030\003 \001(\t"
    "\022\037\n\027safe_transaction_string\030\004 \001(\t\022\023\n\013alr"
    "eady_buy\030\005 \001(\010\022\027\n\017has_trade_power\030\006 \001(\010\022"
    "$\n\005error\030\007 \001(\0132\025.grpcCommon.GrpcError\"D\n"
    "\026GetResourceFileRequest\022\025\n\rresource_type"
    "\030\001 \001(\t\022\023\n\013resource_id\030\002 \001(\t\"\215\001\n\027GetResou"
    "rceFileResponse\022\021\n\tfile_name\030\001 \001(\t\022\024\n\014co"
    "ntent_type\030\002 \001(\t\022\031\n\021total_byte_length\030\003 "
    "\001(\003\022\033\n\023loading_byte_length\030\004 \001(\003\022\021\n\tfile"
    "_byte\030\005 \001(\014B\033\n\020com.wanfang.readP\001\242\002\004WFPR"
    "b\006proto3", 648);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "read/msg_read.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_read_2fmsg_5fread_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_read_2fmsg_5fread_2eproto_once_);
void protobuf_AddDesc_read_2fmsg_5fread_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_read_2fmsg_5fread_2eproto_once_,
                 &protobuf_AddDesc_read_2fmsg_5fread_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_read_2fmsg_5fread_2eproto {
  StaticDescriptorInitializer_read_2fmsg_5fread_2eproto() {
    protobuf_AddDesc_read_2fmsg_5fread_2eproto();
  }
} static_descriptor_initializer_read_2fmsg_5fread_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadRequest::kUserIdFieldNumber;
const int ReadRequest::kLanguageFieldNumber;
const int ReadRequest::kResourceTypeFieldNumber;
const int ReadRequest::kSourceFieldNumber;
const int ReadRequest::kResourceTitleFieldNumber;
const int ReadRequest::kResourceIdFieldNumber;
const int ReadRequest::kLoginTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadRequest::ReadRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:read.ReadRequest)
}

void ReadRequest::InitAsDefaultInstance() {
}

ReadRequest::ReadRequest(const ReadRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:read.ReadRequest)
}

void ReadRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

ReadRequest::~ReadRequest() {
  // @@protoc_insertion_point(destructor:read.ReadRequest)
  SharedDtor();
}

void ReadRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadRequest_descriptor_;
}

const ReadRequest& ReadRequest::default_instance() {
  protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadRequest> ReadRequest_default_instance_;

ReadRequest* ReadRequest::New(::google::protobuf::Arena* arena) const {
  ReadRequest* n = new ReadRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:read.ReadRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ReadRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:read.ReadRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_language;
        break;
      }

      // optional string language = 2;
      case 2: {
        if (tag == 18) {
         parse_language:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_language()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->language().data(), this->language().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.language"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_resource_type;
        break;
      }

      // optional string resource_type = 3;
      case 3: {
        if (tag == 26) {
         parse_resource_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), this->resource_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.resource_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_source;
        break;
      }

      // optional string source = 4;
      case 4: {
        if (tag == 34) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.source"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_resource_title;
        break;
      }

      // optional string resource_title = 5;
      case 5: {
        if (tag == 42) {
         parse_resource_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_title().data(), this->resource_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.resource_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_resource_id;
        break;
      }

      // optional string resource_id = 6;
      case 6: {
        if (tag == 50) {
         parse_resource_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_id().data(), this->resource_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.resource_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_login_token;
        break;
      }

      // optional string login_token = 7;
      case 7: {
        if (tag == 58) {
         parse_login_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_token().data(), this->login_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadRequest.login_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:read.ReadRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:read.ReadRequest)
  return false;
#undef DO_
}

void ReadRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:read.ReadRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string language = 2;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.language");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->language(), output);
  }

  // optional string resource_type = 3;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->resource_type(), output);
  }

  // optional string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->source(), output);
  }

  // optional string resource_title = 5;
  if (this->resource_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_title().data(), this->resource_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->resource_title(), output);
  }

  // optional string resource_id = 6;
  if (this->resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_id().data(), this->resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->resource_id(), output);
  }

  // optional string login_token = 7;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.login_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->login_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:read.ReadRequest)
}

::google::protobuf::uint8* ReadRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:read.ReadRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string language = 2;
  if (this->language().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->language().data(), this->language().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.language");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->language(), target);
  }

  // optional string resource_type = 3;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->resource_type(), target);
  }

  // optional string source = 4;
  if (this->source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->source(), target);
  }

  // optional string resource_title = 5;
  if (this->resource_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_title().data(), this->resource_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->resource_title(), target);
  }

  // optional string resource_id = 6;
  if (this->resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_id().data(), this->resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.resource_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->resource_id(), target);
  }

  // optional string login_token = 7;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadRequest.login_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->login_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:read.ReadRequest)
  return target;
}

size_t ReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:read.ReadRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string language = 2;
  if (this->language().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->language());
  }

  // optional string resource_type = 3;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  // optional string source = 4;
  if (this->source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->source());
  }

  // optional string resource_title = 5;
  if (this->resource_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_title());
  }

  // optional string resource_id = 6;
  if (this->resource_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_id());
  }

  // optional string login_token = 7;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:read.ReadRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:read.ReadRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:read.ReadRequest)
    UnsafeMergeFrom(*source);
  }
}

void ReadRequest::MergeFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:read.ReadRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadRequest::UnsafeMergeFrom(const ReadRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.language().size() > 0) {

    language_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.language_);
  }
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  if (from.source().size() > 0) {

    source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
  }
  if (from.resource_title().size() > 0) {

    resource_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_title_);
  }
  if (from.resource_id().size() > 0) {

    resource_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_id_);
  }
  if (from.login_token().size() > 0) {

    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
}

void ReadRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:read.ReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadRequest::CopyFrom(const ReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:read.ReadRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadRequest::IsInitialized() const {

  return true;
}

void ReadRequest::Swap(ReadRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadRequest::InternalSwap(ReadRequest* other) {
  user_id_.Swap(&other->user_id_);
  language_.Swap(&other->language_);
  resource_type_.Swap(&other->resource_type_);
  source_.Swap(&other->source_);
  resource_title_.Swap(&other->resource_title_);
  resource_id_.Swap(&other->resource_id_);
  login_token_.Swap(&other->login_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadRequest_descriptor_;
  metadata.reflection = ReadRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadRequest

// optional string user_id = 1;
void ReadRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::user_id() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.user_id)
}
void ReadRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.user_id)
}
void ReadRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.user_id)
}
::std::string* ReadRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.user_id)
}

// optional string language = 2;
void ReadRequest::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::language() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_language(const ::std::string& value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.language)
}
void ReadRequest::set_language(const char* value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.language)
}
void ReadRequest::set_language(const char* value, size_t size) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.language)
}
::std::string* ReadRequest::mutable_language() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_language() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.language)
  
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    
  } else {
    
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.language)
}

// optional string resource_type = 3;
void ReadRequest::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.resource_type)
}
void ReadRequest::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.resource_type)
}
void ReadRequest::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.resource_type)
}
::std::string* ReadRequest::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_resource_type() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.resource_type)
}

// optional string source = 4;
void ReadRequest::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::source() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_source(const ::std::string& value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.source)
}
void ReadRequest::set_source(const char* value) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.source)
}
void ReadRequest::set_source(const char* value, size_t size) {
  
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.source)
}
::std::string* ReadRequest::mutable_source() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_source() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.source)
  
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    
  } else {
    
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.source)
}

// optional string resource_title = 5;
void ReadRequest::clear_resource_title() {
  resource_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::resource_title() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.resource_title)
  return resource_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_resource_title(const ::std::string& value) {
  
  resource_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.resource_title)
}
void ReadRequest::set_resource_title(const char* value) {
  
  resource_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.resource_title)
}
void ReadRequest::set_resource_title(const char* value, size_t size) {
  
  resource_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.resource_title)
}
::std::string* ReadRequest::mutable_resource_title() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.resource_title)
  return resource_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_resource_title() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.resource_title)
  
  return resource_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_resource_title(::std::string* resource_title) {
  if (resource_title != NULL) {
    
  } else {
    
  }
  resource_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_title);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.resource_title)
}

// optional string resource_id = 6;
void ReadRequest::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.resource_id)
  return resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.resource_id)
}
void ReadRequest::set_resource_id(const char* value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.resource_id)
}
void ReadRequest::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.resource_id)
}
::std::string* ReadRequest::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_resource_id() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != NULL) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.resource_id)
}

// optional string login_token = 7;
void ReadRequest::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadRequest::login_token() const {
  // @@protoc_insertion_point(field_get:read.ReadRequest.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadRequest.login_token)
}
void ReadRequest::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadRequest.login_token)
}
void ReadRequest::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadRequest.login_token)
}
::std::string* ReadRequest::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadRequest.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadRequest::release_login_token() {
  // @@protoc_insertion_point(field_release:read.ReadRequest.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadRequest::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:read.ReadRequest.login_token)
}

inline const ReadRequest* ReadRequest::internal_default_instance() {
  return &ReadRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResponse::kPriceFieldNumber;
const int ReadResponse::kTitleFieldNumber;
const int ReadResponse::kDisplayInfoFieldNumber;
const int ReadResponse::kSafeTransactionStringFieldNumber;
const int ReadResponse::kAlreadyBuyFieldNumber;
const int ReadResponse::kHasTradePowerFieldNumber;
const int ReadResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResponse::ReadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:read.ReadResponse)
}

void ReadResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

ReadResponse::ReadResponse(const ReadResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:read.ReadResponse)
}

void ReadResponse::SharedCtor() {
  price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  ::memset(&already_buy_, 0, reinterpret_cast<char*>(&has_trade_power_) -
    reinterpret_cast<char*>(&already_buy_) + sizeof(has_trade_power_));
  _cached_size_ = 0;
}

ReadResponse::~ReadResponse() {
  // @@protoc_insertion_point(destructor:read.ReadResponse)
  SharedDtor();
}

void ReadResponse::SharedDtor() {
  price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &ReadResponse_default_instance_.get()) {
    delete error_;
  }
}

void ReadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadResponse_descriptor_;
}

const ReadResponse& ReadResponse::default_instance() {
  protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ReadResponse> ReadResponse_default_instance_;

ReadResponse* ReadResponse::New(::google::protobuf::Arena* arena) const {
  ReadResponse* n = new ReadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:read.ReadResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ReadResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(already_buy_, has_trade_power_);
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  safe_transaction_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;

#undef ZR_HELPER_
#undef ZR_

}

bool ReadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:read.ReadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string price = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_price()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->price().data(), this->price().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadResponse.price"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadResponse.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_display_info;
        break;
      }

      // optional string display_info = 3;
      case 3: {
        if (tag == 26) {
         parse_display_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_info()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_info().data(), this->display_info().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadResponse.display_info"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_safe_transaction_string;
        break;
      }

      // optional string safe_transaction_string = 4;
      case 4: {
        if (tag == 34) {
         parse_safe_transaction_string:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_safe_transaction_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->safe_transaction_string().data(), this->safe_transaction_string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.ReadResponse.safe_transaction_string"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_already_buy;
        break;
      }

      // optional bool already_buy = 5;
      case 5: {
        if (tag == 40) {
         parse_already_buy:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &already_buy_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_has_trade_power;
        break;
      }

      // optional bool has_trade_power = 6;
      case 6: {
        if (tag == 48) {
         parse_has_trade_power:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_trade_power_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 7;
      case 7: {
        if (tag == 58) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:read.ReadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:read.ReadResponse)
  return false;
#undef DO_
}

void ReadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:read.ReadResponse)
  // optional string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.price");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->price(), output);
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string display_info = 3;
  if (this->display_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_info().data(), this->display_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.display_info");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->display_info(), output);
  }

  // optional string safe_transaction_string = 4;
  if (this->safe_transaction_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_transaction_string().data(), this->safe_transaction_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.safe_transaction_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->safe_transaction_string(), output);
  }

  // optional bool already_buy = 5;
  if (this->already_buy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->already_buy(), output);
  }

  // optional bool has_trade_power = 6;
  if (this->has_trade_power() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->has_trade_power(), output);
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:read.ReadResponse)
}

::google::protobuf::uint8* ReadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:read.ReadResponse)
  // optional string price = 1;
  if (this->price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->price().data(), this->price().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.price");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->price(), target);
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string display_info = 3;
  if (this->display_info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_info().data(), this->display_info().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.display_info");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->display_info(), target);
  }

  // optional string safe_transaction_string = 4;
  if (this->safe_transaction_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->safe_transaction_string().data(), this->safe_transaction_string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.ReadResponse.safe_transaction_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->safe_transaction_string(), target);
  }

  // optional bool already_buy = 5;
  if (this->already_buy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->already_buy(), target);
  }

  // optional bool has_trade_power = 6;
  if (this->has_trade_power() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->has_trade_power(), target);
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:read.ReadResponse)
  return target;
}

size_t ReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:read.ReadResponse)
  size_t total_size = 0;

  // optional string price = 1;
  if (this->price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->price());
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string display_info = 3;
  if (this->display_info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_info());
  }

  // optional string safe_transaction_string = 4;
  if (this->safe_transaction_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->safe_transaction_string());
  }

  // optional bool already_buy = 5;
  if (this->already_buy() != 0) {
    total_size += 1 + 1;
  }

  // optional bool has_trade_power = 6;
  if (this->has_trade_power() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:read.ReadResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:read.ReadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:read.ReadResponse)
    UnsafeMergeFrom(*source);
  }
}

void ReadResponse::MergeFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:read.ReadResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ReadResponse::UnsafeMergeFrom(const ReadResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.price().size() > 0) {

    price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.price_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.display_info().size() > 0) {

    display_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_info_);
  }
  if (from.safe_transaction_string().size() > 0) {

    safe_transaction_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.safe_transaction_string_);
  }
  if (from.already_buy() != 0) {
    set_already_buy(from.already_buy());
  }
  if (from.has_trade_power() != 0) {
    set_has_trade_power(from.has_trade_power());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void ReadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:read.ReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResponse::CopyFrom(const ReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:read.ReadResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ReadResponse::IsInitialized() const {

  return true;
}

void ReadResponse::Swap(ReadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResponse::InternalSwap(ReadResponse* other) {
  price_.Swap(&other->price_);
  title_.Swap(&other->title_);
  display_info_.Swap(&other->display_info_);
  safe_transaction_string_.Swap(&other->safe_transaction_string_);
  std::swap(already_buy_, other->already_buy_);
  std::swap(has_trade_power_, other->has_trade_power_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadResponse_descriptor_;
  metadata.reflection = ReadResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadResponse

// optional string price = 1;
void ReadResponse::clear_price() {
  price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::price() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.price)
  return price_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_price(const ::std::string& value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadResponse.price)
}
void ReadResponse::set_price(const char* value) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadResponse.price)
}
void ReadResponse::set_price(const char* value, size_t size) {
  
  price_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadResponse.price)
}
::std::string* ReadResponse::mutable_price() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadResponse.price)
  return price_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_price() {
  // @@protoc_insertion_point(field_release:read.ReadResponse.price)
  
  return price_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_price(::std::string* price) {
  if (price != NULL) {
    
  } else {
    
  }
  price_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), price);
  // @@protoc_insertion_point(field_set_allocated:read.ReadResponse.price)
}

// optional string title = 2;
void ReadResponse::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::title() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadResponse.title)
}
void ReadResponse::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadResponse.title)
}
void ReadResponse::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadResponse.title)
}
::std::string* ReadResponse::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadResponse.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_title() {
  // @@protoc_insertion_point(field_release:read.ReadResponse.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:read.ReadResponse.title)
}

// optional string display_info = 3;
void ReadResponse::clear_display_info() {
  display_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::display_info() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.display_info)
  return display_info_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_display_info(const ::std::string& value) {
  
  display_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadResponse.display_info)
}
void ReadResponse::set_display_info(const char* value) {
  
  display_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadResponse.display_info)
}
void ReadResponse::set_display_info(const char* value, size_t size) {
  
  display_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadResponse.display_info)
}
::std::string* ReadResponse::mutable_display_info() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadResponse.display_info)
  return display_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_display_info() {
  // @@protoc_insertion_point(field_release:read.ReadResponse.display_info)
  
  return display_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_display_info(::std::string* display_info) {
  if (display_info != NULL) {
    
  } else {
    
  }
  display_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_info);
  // @@protoc_insertion_point(field_set_allocated:read.ReadResponse.display_info)
}

// optional string safe_transaction_string = 4;
void ReadResponse::clear_safe_transaction_string() {
  safe_transaction_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ReadResponse::safe_transaction_string() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.safe_transaction_string)
  return safe_transaction_string_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_safe_transaction_string(const ::std::string& value) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.ReadResponse.safe_transaction_string)
}
void ReadResponse::set_safe_transaction_string(const char* value) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.ReadResponse.safe_transaction_string)
}
void ReadResponse::set_safe_transaction_string(const char* value, size_t size) {
  
  safe_transaction_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.ReadResponse.safe_transaction_string)
}
::std::string* ReadResponse::mutable_safe_transaction_string() {
  
  // @@protoc_insertion_point(field_mutable:read.ReadResponse.safe_transaction_string)
  return safe_transaction_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ReadResponse::release_safe_transaction_string() {
  // @@protoc_insertion_point(field_release:read.ReadResponse.safe_transaction_string)
  
  return safe_transaction_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ReadResponse::set_allocated_safe_transaction_string(::std::string* safe_transaction_string) {
  if (safe_transaction_string != NULL) {
    
  } else {
    
  }
  safe_transaction_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), safe_transaction_string);
  // @@protoc_insertion_point(field_set_allocated:read.ReadResponse.safe_transaction_string)
}

// optional bool already_buy = 5;
void ReadResponse::clear_already_buy() {
  already_buy_ = false;
}
bool ReadResponse::already_buy() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.already_buy)
  return already_buy_;
}
void ReadResponse::set_already_buy(bool value) {
  
  already_buy_ = value;
  // @@protoc_insertion_point(field_set:read.ReadResponse.already_buy)
}

// optional bool has_trade_power = 6;
void ReadResponse::clear_has_trade_power() {
  has_trade_power_ = false;
}
bool ReadResponse::has_trade_power() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.has_trade_power)
  return has_trade_power_;
}
void ReadResponse::set_has_trade_power(bool value) {
  
  has_trade_power_ = value;
  // @@protoc_insertion_point(field_set:read.ReadResponse.has_trade_power)
}

// optional .grpcCommon.GrpcError error = 7;
bool ReadResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void ReadResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& ReadResponse::error() const {
  // @@protoc_insertion_point(field_get:read.ReadResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* ReadResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:read.ReadResponse.error)
  return error_;
}
::grpcCommon::GrpcError* ReadResponse::release_error() {
  // @@protoc_insertion_point(field_release:read.ReadResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void ReadResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:read.ReadResponse.error)
}

inline const ReadResponse* ReadResponse::internal_default_instance() {
  return &ReadResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourceFileRequest::kResourceTypeFieldNumber;
const int GetResourceFileRequest::kResourceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourceFileRequest::GetResourceFileRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:read.GetResourceFileRequest)
}

void GetResourceFileRequest::InitAsDefaultInstance() {
}

GetResourceFileRequest::GetResourceFileRequest(const GetResourceFileRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:read.GetResourceFileRequest)
}

void GetResourceFileRequest::SharedCtor() {
  resource_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

GetResourceFileRequest::~GetResourceFileRequest() {
  // @@protoc_insertion_point(destructor:read.GetResourceFileRequest)
  SharedDtor();
}

void GetResourceFileRequest::SharedDtor() {
  resource_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResourceFileRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResourceFileRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetResourceFileRequest_descriptor_;
}

const GetResourceFileRequest& GetResourceFileRequest::default_instance() {
  protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetResourceFileRequest> GetResourceFileRequest_default_instance_;

GetResourceFileRequest* GetResourceFileRequest::New(::google::protobuf::Arena* arena) const {
  GetResourceFileRequest* n = new GetResourceFileRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResourceFileRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:read.GetResourceFileRequest)
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool GetResourceFileRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:read.GetResourceFileRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string resource_type = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_type().data(), this->resource_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.GetResourceFileRequest.resource_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_resource_id;
        break;
      }

      // optional string resource_id = 2;
      case 2: {
        if (tag == 18) {
         parse_resource_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_resource_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->resource_id().data(), this->resource_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.GetResourceFileRequest.resource_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:read.GetResourceFileRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:read.GetResourceFileRequest)
  return false;
#undef DO_
}

void GetResourceFileRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:read.GetResourceFileRequest)
  // optional string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileRequest.resource_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->resource_type(), output);
  }

  // optional string resource_id = 2;
  if (this->resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_id().data(), this->resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileRequest.resource_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->resource_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:read.GetResourceFileRequest)
}

::google::protobuf::uint8* GetResourceFileRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:read.GetResourceFileRequest)
  // optional string resource_type = 1;
  if (this->resource_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_type().data(), this->resource_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileRequest.resource_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->resource_type(), target);
  }

  // optional string resource_id = 2;
  if (this->resource_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->resource_id().data(), this->resource_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileRequest.resource_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->resource_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:read.GetResourceFileRequest)
  return target;
}

size_t GetResourceFileRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:read.GetResourceFileRequest)
  size_t total_size = 0;

  // optional string resource_type = 1;
  if (this->resource_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_type());
  }

  // optional string resource_id = 2;
  if (this->resource_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->resource_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResourceFileRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:read.GetResourceFileRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetResourceFileRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourceFileRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:read.GetResourceFileRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:read.GetResourceFileRequest)
    UnsafeMergeFrom(*source);
  }
}

void GetResourceFileRequest::MergeFrom(const GetResourceFileRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:read.GetResourceFileRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetResourceFileRequest::UnsafeMergeFrom(const GetResourceFileRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.resource_type().size() > 0) {

    resource_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_type_);
  }
  if (from.resource_id().size() > 0) {

    resource_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.resource_id_);
  }
}

void GetResourceFileRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:read.GetResourceFileRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourceFileRequest::CopyFrom(const GetResourceFileRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:read.GetResourceFileRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetResourceFileRequest::IsInitialized() const {

  return true;
}

void GetResourceFileRequest::Swap(GetResourceFileRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourceFileRequest::InternalSwap(GetResourceFileRequest* other) {
  resource_type_.Swap(&other->resource_type_);
  resource_id_.Swap(&other->resource_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResourceFileRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetResourceFileRequest_descriptor_;
  metadata.reflection = GetResourceFileRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResourceFileRequest

// optional string resource_type = 1;
void GetResourceFileRequest::clear_resource_type() {
  resource_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResourceFileRequest::resource_type() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileRequest.resource_type)
  return resource_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileRequest::set_resource_type(const ::std::string& value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.GetResourceFileRequest.resource_type)
}
void GetResourceFileRequest::set_resource_type(const char* value) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.GetResourceFileRequest.resource_type)
}
void GetResourceFileRequest::set_resource_type(const char* value, size_t size) {
  
  resource_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.GetResourceFileRequest.resource_type)
}
::std::string* GetResourceFileRequest::mutable_resource_type() {
  
  // @@protoc_insertion_point(field_mutable:read.GetResourceFileRequest.resource_type)
  return resource_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResourceFileRequest::release_resource_type() {
  // @@protoc_insertion_point(field_release:read.GetResourceFileRequest.resource_type)
  
  return resource_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileRequest::set_allocated_resource_type(::std::string* resource_type) {
  if (resource_type != NULL) {
    
  } else {
    
  }
  resource_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_type);
  // @@protoc_insertion_point(field_set_allocated:read.GetResourceFileRequest.resource_type)
}

// optional string resource_id = 2;
void GetResourceFileRequest::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResourceFileRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileRequest.resource_id)
  return resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileRequest::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.GetResourceFileRequest.resource_id)
}
void GetResourceFileRequest::set_resource_id(const char* value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.GetResourceFileRequest.resource_id)
}
void GetResourceFileRequest::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.GetResourceFileRequest.resource_id)
}
::std::string* GetResourceFileRequest::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:read.GetResourceFileRequest.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResourceFileRequest::release_resource_id() {
  // @@protoc_insertion_point(field_release:read.GetResourceFileRequest.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileRequest::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != NULL) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:read.GetResourceFileRequest.resource_id)
}

inline const GetResourceFileRequest* GetResourceFileRequest::internal_default_instance() {
  return &GetResourceFileRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetResourceFileResponse::kFileNameFieldNumber;
const int GetResourceFileResponse::kContentTypeFieldNumber;
const int GetResourceFileResponse::kTotalByteLengthFieldNumber;
const int GetResourceFileResponse::kLoadingByteLengthFieldNumber;
const int GetResourceFileResponse::kFileByteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetResourceFileResponse::GetResourceFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:read.GetResourceFileResponse)
}

void GetResourceFileResponse::InitAsDefaultInstance() {
}

GetResourceFileResponse::GetResourceFileResponse(const GetResourceFileResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:read.GetResourceFileResponse)
}

void GetResourceFileResponse::SharedCtor() {
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_byte_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_byte_length_, 0, reinterpret_cast<char*>(&loading_byte_length_) -
    reinterpret_cast<char*>(&total_byte_length_) + sizeof(loading_byte_length_));
  _cached_size_ = 0;
}

GetResourceFileResponse::~GetResourceFileResponse() {
  // @@protoc_insertion_point(destructor:read.GetResourceFileResponse)
  SharedDtor();
}

void GetResourceFileResponse::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_byte_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetResourceFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetResourceFileResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetResourceFileResponse_descriptor_;
}

const GetResourceFileResponse& GetResourceFileResponse::default_instance() {
  protobuf_InitDefaults_read_2fmsg_5fread_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GetResourceFileResponse> GetResourceFileResponse_default_instance_;

GetResourceFileResponse* GetResourceFileResponse::New(::google::protobuf::Arena* arena) const {
  GetResourceFileResponse* n = new GetResourceFileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GetResourceFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:read.GetResourceFileResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(GetResourceFileResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<GetResourceFileResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(total_byte_length_, loading_byte_length_);
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_byte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool GetResourceFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:read.GetResourceFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string file_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.GetResourceFileResponse.file_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_content_type;
        break;
      }

      // optional string content_type = 2;
      case 2: {
        if (tag == 18) {
         parse_content_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->content_type().data(), this->content_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "read.GetResourceFileResponse.content_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_total_byte_length;
        break;
      }

      // optional int64 total_byte_length = 3;
      case 3: {
        if (tag == 24) {
         parse_total_byte_length:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &total_byte_length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_loading_byte_length;
        break;
      }

      // optional int64 loading_byte_length = 4;
      case 4: {
        if (tag == 32) {
         parse_loading_byte_length:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &loading_byte_length_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_file_byte;
        break;
      }

      // optional bytes file_byte = 5;
      case 5: {
        if (tag == 42) {
         parse_file_byte:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_file_byte()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:read.GetResourceFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:read.GetResourceFileResponse)
  return false;
#undef DO_
}

void GetResourceFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:read.GetResourceFileResponse)
  // optional string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileResponse.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->file_name(), output);
  }

  // optional string content_type = 2;
  if (this->content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileResponse.content_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->content_type(), output);
  }

  // optional int64 total_byte_length = 3;
  if (this->total_byte_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->total_byte_length(), output);
  }

  // optional int64 loading_byte_length = 4;
  if (this->loading_byte_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->loading_byte_length(), output);
  }

  // optional bytes file_byte = 5;
  if (this->file_byte().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->file_byte(), output);
  }

  // @@protoc_insertion_point(serialize_end:read.GetResourceFileResponse)
}

::google::protobuf::uint8* GetResourceFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:read.GetResourceFileResponse)
  // optional string file_name = 1;
  if (this->file_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileResponse.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->file_name(), target);
  }

  // optional string content_type = 2;
  if (this->content_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->content_type().data(), this->content_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "read.GetResourceFileResponse.content_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->content_type(), target);
  }

  // optional int64 total_byte_length = 3;
  if (this->total_byte_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->total_byte_length(), target);
  }

  // optional int64 loading_byte_length = 4;
  if (this->loading_byte_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->loading_byte_length(), target);
  }

  // optional bytes file_byte = 5;
  if (this->file_byte().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->file_byte(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:read.GetResourceFileResponse)
  return target;
}

size_t GetResourceFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:read.GetResourceFileResponse)
  size_t total_size = 0;

  // optional string file_name = 1;
  if (this->file_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file_name());
  }

  // optional string content_type = 2;
  if (this->content_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content_type());
  }

  // optional int64 total_byte_length = 3;
  if (this->total_byte_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->total_byte_length());
  }

  // optional int64 loading_byte_length = 4;
  if (this->loading_byte_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->loading_byte_length());
  }

  // optional bytes file_byte = 5;
  if (this->file_byte().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->file_byte());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetResourceFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:read.GetResourceFileResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GetResourceFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetResourceFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:read.GetResourceFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:read.GetResourceFileResponse)
    UnsafeMergeFrom(*source);
  }
}

void GetResourceFileResponse::MergeFrom(const GetResourceFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:read.GetResourceFileResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GetResourceFileResponse::UnsafeMergeFrom(const GetResourceFileResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.file_name().size() > 0) {

    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  if (from.content_type().size() > 0) {

    content_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_type_);
  }
  if (from.total_byte_length() != 0) {
    set_total_byte_length(from.total_byte_length());
  }
  if (from.loading_byte_length() != 0) {
    set_loading_byte_length(from.loading_byte_length());
  }
  if (from.file_byte().size() > 0) {

    file_byte_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_byte_);
  }
}

void GetResourceFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:read.GetResourceFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResourceFileResponse::CopyFrom(const GetResourceFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:read.GetResourceFileResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GetResourceFileResponse::IsInitialized() const {

  return true;
}

void GetResourceFileResponse::Swap(GetResourceFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetResourceFileResponse::InternalSwap(GetResourceFileResponse* other) {
  file_name_.Swap(&other->file_name_);
  content_type_.Swap(&other->content_type_);
  std::swap(total_byte_length_, other->total_byte_length_);
  std::swap(loading_byte_length_, other->loading_byte_length_);
  file_byte_.Swap(&other->file_byte_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GetResourceFileResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetResourceFileResponse_descriptor_;
  metadata.reflection = GetResourceFileResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GetResourceFileResponse

// optional string file_name = 1;
void GetResourceFileResponse::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResourceFileResponse::file_name() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileResponse.file_name)
  return file_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_file_name(const ::std::string& value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.GetResourceFileResponse.file_name)
}
void GetResourceFileResponse::set_file_name(const char* value) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.GetResourceFileResponse.file_name)
}
void GetResourceFileResponse::set_file_name(const char* value, size_t size) {
  
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.GetResourceFileResponse.file_name)
}
::std::string* GetResourceFileResponse::mutable_file_name() {
  
  // @@protoc_insertion_point(field_mutable:read.GetResourceFileResponse.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResourceFileResponse::release_file_name() {
  // @@protoc_insertion_point(field_release:read.GetResourceFileResponse.file_name)
  
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    
  } else {
    
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:read.GetResourceFileResponse.file_name)
}

// optional string content_type = 2;
void GetResourceFileResponse::clear_content_type() {
  content_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResourceFileResponse::content_type() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileResponse.content_type)
  return content_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_content_type(const ::std::string& value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.GetResourceFileResponse.content_type)
}
void GetResourceFileResponse::set_content_type(const char* value) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.GetResourceFileResponse.content_type)
}
void GetResourceFileResponse::set_content_type(const char* value, size_t size) {
  
  content_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.GetResourceFileResponse.content_type)
}
::std::string* GetResourceFileResponse::mutable_content_type() {
  
  // @@protoc_insertion_point(field_mutable:read.GetResourceFileResponse.content_type)
  return content_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResourceFileResponse::release_content_type() {
  // @@protoc_insertion_point(field_release:read.GetResourceFileResponse.content_type)
  
  return content_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_allocated_content_type(::std::string* content_type) {
  if (content_type != NULL) {
    
  } else {
    
  }
  content_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content_type);
  // @@protoc_insertion_point(field_set_allocated:read.GetResourceFileResponse.content_type)
}

// optional int64 total_byte_length = 3;
void GetResourceFileResponse::clear_total_byte_length() {
  total_byte_length_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetResourceFileResponse::total_byte_length() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileResponse.total_byte_length)
  return total_byte_length_;
}
void GetResourceFileResponse::set_total_byte_length(::google::protobuf::int64 value) {
  
  total_byte_length_ = value;
  // @@protoc_insertion_point(field_set:read.GetResourceFileResponse.total_byte_length)
}

// optional int64 loading_byte_length = 4;
void GetResourceFileResponse::clear_loading_byte_length() {
  loading_byte_length_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 GetResourceFileResponse::loading_byte_length() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileResponse.loading_byte_length)
  return loading_byte_length_;
}
void GetResourceFileResponse::set_loading_byte_length(::google::protobuf::int64 value) {
  
  loading_byte_length_ = value;
  // @@protoc_insertion_point(field_set:read.GetResourceFileResponse.loading_byte_length)
}

// optional bytes file_byte = 5;
void GetResourceFileResponse::clear_file_byte() {
  file_byte_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& GetResourceFileResponse::file_byte() const {
  // @@protoc_insertion_point(field_get:read.GetResourceFileResponse.file_byte)
  return file_byte_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_file_byte(const ::std::string& value) {
  
  file_byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:read.GetResourceFileResponse.file_byte)
}
void GetResourceFileResponse::set_file_byte(const char* value) {
  
  file_byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:read.GetResourceFileResponse.file_byte)
}
void GetResourceFileResponse::set_file_byte(const void* value, size_t size) {
  
  file_byte_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:read.GetResourceFileResponse.file_byte)
}
::std::string* GetResourceFileResponse::mutable_file_byte() {
  
  // @@protoc_insertion_point(field_mutable:read.GetResourceFileResponse.file_byte)
  return file_byte_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GetResourceFileResponse::release_file_byte() {
  // @@protoc_insertion_point(field_release:read.GetResourceFileResponse.file_byte)
  
  return file_byte_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GetResourceFileResponse::set_allocated_file_byte(::std::string* file_byte) {
  if (file_byte != NULL) {
    
  } else {
    
  }
  file_byte_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_byte);
  // @@protoc_insertion_point(field_set_allocated:read.GetResourceFileResponse.file_byte)
}

inline const GetResourceFileResponse* GetResourceFileResponse::internal_default_instance() {
  return &GetResourceFileResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace read

// @@protoc_insertion_point(global_scope)
