// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_password.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "personalCenter/msg_password.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace personal {

namespace {

const ::google::protobuf::Descriptor* PasswordByEmailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordByEmailRequest_reflection_ = NULL;
struct PasswordByEmailRequestOneofInstance {
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr email_;
}* PasswordByEmailRequest_default_oneof_instance_ = NULL;
const ::google::protobuf::Descriptor* PasswordByEmailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordByEmailResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordEmailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordEmailRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordEmailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordEmailResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordByPhoneRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordByPhoneRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordByPhoneResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordByPhoneResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordUpdateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordUpdateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordVerifyRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordVerifyRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* PasswordVerifyResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PasswordVerifyResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto() {
  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "personalCenter/msg_password.proto");
  GOOGLE_CHECK(file != NULL);
  PasswordByEmailRequest_descriptor_ = file->message_type(0);
  static const int PasswordByEmailRequest_offsets_[3] = {
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(PasswordByEmailRequest_default_oneof_instance_, user_name_),
    PROTO2_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET(PasswordByEmailRequest_default_oneof_instance_, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailRequest, field_oneof_),
  };
  PasswordByEmailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordByEmailRequest_descriptor_,
      PasswordByEmailRequest::internal_default_instance(),
      PasswordByEmailRequest_offsets_,
      -1,
      -1,
      -1,
      PasswordByEmailRequest_default_oneof_instance_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailRequest, _oneof_case_[0]),
      sizeof(PasswordByEmailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailRequest, _internal_metadata_));
  PasswordByEmailResponse_descriptor_ = file->message_type(1);
  static const int PasswordByEmailResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailResponse, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailResponse, user_name_),
  };
  PasswordByEmailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordByEmailResponse_descriptor_,
      PasswordByEmailResponse::internal_default_instance(),
      PasswordByEmailResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordByEmailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByEmailResponse, _internal_metadata_));
  PasswordEmailRequest_descriptor_ = file->message_type(2);
  static const int PasswordEmailRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordEmailRequest, email_),
  };
  PasswordEmailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordEmailRequest_descriptor_,
      PasswordEmailRequest::internal_default_instance(),
      PasswordEmailRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordEmailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordEmailRequest, _internal_metadata_));
  PasswordEmailResponse_descriptor_ = file->message_type(3);
  static const int PasswordEmailResponse_offsets_[1] = {
  };
  PasswordEmailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordEmailResponse_descriptor_,
      PasswordEmailResponse::internal_default_instance(),
      PasswordEmailResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordEmailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordEmailResponse, _internal_metadata_));
  PasswordByPhoneRequest_descriptor_ = file->message_type(4);
  static const int PasswordByPhoneRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneRequest, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneRequest, phone_captcha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneRequest, token_),
  };
  PasswordByPhoneRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordByPhoneRequest_descriptor_,
      PasswordByPhoneRequest::internal_default_instance(),
      PasswordByPhoneRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordByPhoneRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneRequest, _internal_metadata_));
  PasswordByPhoneResponse_descriptor_ = file->message_type(5);
  static const int PasswordByPhoneResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneResponse, user_id_),
  };
  PasswordByPhoneResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordByPhoneResponse_descriptor_,
      PasswordByPhoneResponse::internal_default_instance(),
      PasswordByPhoneResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordByPhoneResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordByPhoneResponse, _internal_metadata_));
  PasswordUpdateRequest_descriptor_ = file->message_type(6);
  static const int PasswordUpdateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordUpdateRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordUpdateRequest, new_password_),
  };
  PasswordUpdateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordUpdateRequest_descriptor_,
      PasswordUpdateRequest::internal_default_instance(),
      PasswordUpdateRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordUpdateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordUpdateRequest, _internal_metadata_));
  PasswordUpdateResponse_descriptor_ = file->message_type(7);
  static const int PasswordUpdateResponse_offsets_[1] = {
  };
  PasswordUpdateResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordUpdateResponse_descriptor_,
      PasswordUpdateResponse::internal_default_instance(),
      PasswordUpdateResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordUpdateResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordUpdateResponse, _internal_metadata_));
  PasswordVerifyRequest_descriptor_ = file->message_type(8);
  static const int PasswordVerifyRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordVerifyRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordVerifyRequest, password_),
  };
  PasswordVerifyRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordVerifyRequest_descriptor_,
      PasswordVerifyRequest::internal_default_instance(),
      PasswordVerifyRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordVerifyRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordVerifyRequest, _internal_metadata_));
  PasswordVerifyResponse_descriptor_ = file->message_type(9);
  static const int PasswordVerifyResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordVerifyResponse, is_right_),
  };
  PasswordVerifyResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PasswordVerifyResponse_descriptor_,
      PasswordVerifyResponse::internal_default_instance(),
      PasswordVerifyResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(PasswordVerifyResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PasswordVerifyResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordByEmailRequest_descriptor_, PasswordByEmailRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordByEmailResponse_descriptor_, PasswordByEmailResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordEmailRequest_descriptor_, PasswordEmailRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordEmailResponse_descriptor_, PasswordEmailResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordByPhoneRequest_descriptor_, PasswordByPhoneRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordByPhoneResponse_descriptor_, PasswordByPhoneResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordUpdateRequest_descriptor_, PasswordUpdateRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordUpdateResponse_descriptor_, PasswordUpdateResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordVerifyRequest_descriptor_, PasswordVerifyRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PasswordVerifyResponse_descriptor_, PasswordVerifyResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto() {
  PasswordByEmailRequest_default_instance_.Shutdown();
  delete PasswordByEmailRequest_default_oneof_instance_;
  delete PasswordByEmailRequest_reflection_;
  PasswordByEmailResponse_default_instance_.Shutdown();
  delete PasswordByEmailResponse_reflection_;
  PasswordEmailRequest_default_instance_.Shutdown();
  delete PasswordEmailRequest_reflection_;
  PasswordEmailResponse_default_instance_.Shutdown();
  delete PasswordEmailResponse_reflection_;
  PasswordByPhoneRequest_default_instance_.Shutdown();
  delete PasswordByPhoneRequest_reflection_;
  PasswordByPhoneResponse_default_instance_.Shutdown();
  delete PasswordByPhoneResponse_reflection_;
  PasswordUpdateRequest_default_instance_.Shutdown();
  delete PasswordUpdateRequest_reflection_;
  PasswordUpdateResponse_default_instance_.Shutdown();
  delete PasswordUpdateResponse_reflection_;
  PasswordVerifyRequest_default_instance_.Shutdown();
  delete PasswordVerifyRequest_reflection_;
  PasswordVerifyResponse_default_instance_.Shutdown();
  delete PasswordVerifyResponse_reflection_;
}

void protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  PasswordByEmailRequest_default_instance_.DefaultConstruct();
  PasswordByEmailRequest_default_oneof_instance_ = new PasswordByEmailRequestOneofInstance();
  ::google::protobuf::internal::GetEmptyString();
  PasswordByEmailResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PasswordEmailRequest_default_instance_.DefaultConstruct();
  PasswordEmailResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PasswordByPhoneRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PasswordByPhoneResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PasswordUpdateRequest_default_instance_.DefaultConstruct();
  PasswordUpdateResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  PasswordVerifyRequest_default_instance_.DefaultConstruct();
  PasswordVerifyResponse_default_instance_.DefaultConstruct();
  PasswordByEmailRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordByEmailResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordEmailRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordEmailResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordByPhoneRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordByPhoneResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordUpdateRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordUpdateResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordVerifyRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  PasswordVerifyResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_once_);
void protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_once_,
                 &protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl);
}
void protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n!personalCenter/msg_password.proto\022\010per"
    "sonal\"M\n\026PasswordByEmailRequest\022\023\n\tuser_"
    "name\030\003 \001(\tH\000\022\017\n\005email\030\004 \001(\tH\000B\r\n\013field_o"
    "neof\";\n\027PasswordByEmailResponse\022\r\n\005email"
    "\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\"%\n\024PasswordEma"
    "ilRequest\022\r\n\005email\030\001 \001(\t\"\027\n\025PasswordEmai"
    "lResponse\"M\n\026PasswordByPhoneRequest\022\r\n\005p"
    "hone\030\001 \001(\t\022\025\n\rphone_captcha\030\002 \001(\t\022\r\n\005tok"
    "en\030\003 \001(\t\"*\n\027PasswordByPhoneResponse\022\017\n\007u"
    "ser_id\030\001 \001(\t\">\n\025PasswordUpdateRequest\022\017\n"
    "\007user_id\030\001 \001(\t\022\024\n\014new_password\030\002 \001(\t\"\030\n\026"
    "PasswordUpdateResponse\":\n\025PasswordVerify"
    "Request\022\017\n\007user_id\030\001 \001(\t\022\020\n\010password\030\002 \001"
    "(\t\"*\n\026PasswordVerifyResponse\022\020\n\010is_right"
    "\030\001 \001(\010B\037\n\024com.wanfang.personalP\001\242\002\004WFPRb"
    "\006proto3", 607);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "personalCenter/msg_password.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_once_);
void protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_once_,
                 &protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_personalCenter_2fmsg_5fpassword_2eproto {
  StaticDescriptorInitializer_personalCenter_2fmsg_5fpassword_2eproto() {
    protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto();
  }
} static_descriptor_initializer_personalCenter_2fmsg_5fpassword_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordByEmailRequest::kUserNameFieldNumber;
const int PasswordByEmailRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordByEmailRequest::PasswordByEmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordByEmailRequest)
}

void PasswordByEmailRequest::InitAsDefaultInstance() {
  PasswordByEmailRequest_default_oneof_instance_->user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  PasswordByEmailRequest_default_oneof_instance_->email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PasswordByEmailRequest::PasswordByEmailRequest(const PasswordByEmailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordByEmailRequest)
}

void PasswordByEmailRequest::SharedCtor() {
  clear_has_field_oneof();
  _cached_size_ = 0;
}

PasswordByEmailRequest::~PasswordByEmailRequest() {
  // @@protoc_insertion_point(destructor:personal.PasswordByEmailRequest)
  SharedDtor();
}

void PasswordByEmailRequest::SharedDtor() {
  if (has_field_oneof()) {
    clear_field_oneof();
  }
}

void PasswordByEmailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordByEmailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordByEmailRequest_descriptor_;
}

const PasswordByEmailRequest& PasswordByEmailRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordByEmailRequest> PasswordByEmailRequest_default_instance_;

PasswordByEmailRequest* PasswordByEmailRequest::New(::google::protobuf::Arena* arena) const {
  PasswordByEmailRequest* n = new PasswordByEmailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordByEmailRequest::clear_field_oneof() {
// @@protoc_insertion_point(one_of_clear_start:personal.PasswordByEmailRequest)
  switch (field_oneof_case()) {
    case kUserName: {
      field_oneof_.user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kEmail: {
      field_oneof_.email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case FIELD_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = FIELD_ONEOF_NOT_SET;
}


void PasswordByEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordByEmailRequest)
  clear_field_oneof();
}

bool PasswordByEmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordByEmailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_name = 3;
      case 3: {
        if (tag == 26) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByEmailRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        goto after_email;
        break;
      }

      // optional string email = 4;
      case 4: {
        if (tag == 34) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByEmailRequest.email"));
        } else {
          goto handle_unusual;
        }
       after_email:
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordByEmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordByEmailRequest)
  return false;
#undef DO_
}

void PasswordByEmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordByEmailRequest)
  // optional string user_name = 3;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_name(), output);
  }

  // optional string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->email(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordByEmailRequest)
}

::google::protobuf::uint8* PasswordByEmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordByEmailRequest)
  // optional string user_name = 3;
  if (has_user_name()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_name(), target);
  }

  // optional string email = 4;
  if (has_email()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordByEmailRequest)
  return target;
}

size_t PasswordByEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordByEmailRequest)
  size_t total_size = 0;

  switch (field_oneof_case()) {
    // optional string user_name = 3;
    case kUserName: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->user_name());
      break;
    }
    // optional string email = 4;
    case kEmail: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
      break;
    }
    case FIELD_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordByEmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordByEmailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordByEmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordByEmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordByEmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordByEmailRequest)
    UnsafeMergeFrom(*source);
  }
}

void PasswordByEmailRequest::MergeFrom(const PasswordByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordByEmailRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordByEmailRequest::UnsafeMergeFrom(const PasswordByEmailRequest& from) {
  GOOGLE_DCHECK(&from != this);
  switch (from.field_oneof_case()) {
    case kUserName: {
      set_user_name(from.user_name());
      break;
    }
    case kEmail: {
      set_email(from.email());
      break;
    }
    case FIELD_ONEOF_NOT_SET: {
      break;
    }
  }
}

void PasswordByEmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordByEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordByEmailRequest::CopyFrom(const PasswordByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordByEmailRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordByEmailRequest::IsInitialized() const {

  return true;
}

void PasswordByEmailRequest::Swap(PasswordByEmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordByEmailRequest::InternalSwap(PasswordByEmailRequest* other) {
  std::swap(field_oneof_, other->field_oneof_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordByEmailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordByEmailRequest_descriptor_;
  metadata.reflection = PasswordByEmailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordByEmailRequest

// optional string user_name = 3;
bool PasswordByEmailRequest::has_user_name() const {
  return field_oneof_case() == kUserName;
}
void PasswordByEmailRequest::set_has_user_name() {
  _oneof_case_[0] = kUserName;
}
void PasswordByEmailRequest::clear_user_name() {
  if (has_user_name()) {
    field_oneof_.user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_field_oneof();
  }
}
const ::std::string& PasswordByEmailRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailRequest.user_name)
  if (has_user_name()) {
    return field_oneof_.user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void PasswordByEmailRequest::set_user_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.user_name)
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.user_name)
}
void PasswordByEmailRequest::set_user_name(const char* value) {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailRequest.user_name)
}
void PasswordByEmailRequest::set_user_name(const char* value, size_t size) {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailRequest.user_name)
}
::std::string* PasswordByEmailRequest::mutable_user_name() {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailRequest.user_name)
  return field_oneof_.user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByEmailRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailRequest.user_name)
  if (has_user_name()) {
    clear_has_field_oneof();
    return field_oneof_.user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void PasswordByEmailRequest::set_allocated_user_name(::std::string* user_name) {
  if (!has_user_name()) {
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_field_oneof();
  if (user_name != NULL) {
    set_has_user_name();
    field_oneof_.user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        user_name);
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailRequest.user_name)
}

// optional string email = 4;
bool PasswordByEmailRequest::has_email() const {
  return field_oneof_case() == kEmail;
}
void PasswordByEmailRequest::set_has_email() {
  _oneof_case_[0] = kEmail;
}
void PasswordByEmailRequest::clear_email() {
  if (has_email()) {
    field_oneof_.email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_field_oneof();
  }
}
const ::std::string& PasswordByEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailRequest.email)
  if (has_email()) {
    return field_oneof_.email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void PasswordByEmailRequest::set_email(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.email)
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.email)
}
void PasswordByEmailRequest::set_email(const char* value) {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailRequest.email)
}
void PasswordByEmailRequest::set_email(const char* value, size_t size) {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailRequest.email)
}
::std::string* PasswordByEmailRequest::mutable_email() {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailRequest.email)
  return field_oneof_.email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailRequest.email)
  if (has_email()) {
    clear_has_field_oneof();
    return field_oneof_.email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void PasswordByEmailRequest::set_allocated_email(::std::string* email) {
  if (!has_email()) {
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_field_oneof();
  if (email != NULL) {
    set_has_email();
    field_oneof_.email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        email);
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailRequest.email)
}

bool PasswordByEmailRequest::has_field_oneof() const {
  return field_oneof_case() != FIELD_ONEOF_NOT_SET;
}
void PasswordByEmailRequest::clear_has_field_oneof() {
  _oneof_case_[0] = FIELD_ONEOF_NOT_SET;
}
PasswordByEmailRequest::FieldOneofCase PasswordByEmailRequest::field_oneof_case() const {
  return PasswordByEmailRequest::FieldOneofCase(_oneof_case_[0]);
}
inline const PasswordByEmailRequest* PasswordByEmailRequest::internal_default_instance() {
  return &PasswordByEmailRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordByEmailResponse::kEmailFieldNumber;
const int PasswordByEmailResponse::kUserNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordByEmailResponse::PasswordByEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordByEmailResponse)
}

void PasswordByEmailResponse::InitAsDefaultInstance() {
}

PasswordByEmailResponse::PasswordByEmailResponse(const PasswordByEmailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordByEmailResponse)
}

void PasswordByEmailResponse::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordByEmailResponse::~PasswordByEmailResponse() {
  // @@protoc_insertion_point(destructor:personal.PasswordByEmailResponse)
  SharedDtor();
}

void PasswordByEmailResponse::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordByEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordByEmailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordByEmailResponse_descriptor_;
}

const PasswordByEmailResponse& PasswordByEmailResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordByEmailResponse> PasswordByEmailResponse_default_instance_;

PasswordByEmailResponse* PasswordByEmailResponse::New(::google::protobuf::Arena* arena) const {
  PasswordByEmailResponse* n = new PasswordByEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordByEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordByEmailResponse)
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordByEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordByEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByEmailResponse.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByEmailResponse.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordByEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordByEmailResponse)
  return false;
#undef DO_
}

void PasswordByEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordByEmailResponse)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailResponse.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailResponse.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordByEmailResponse)
}

::google::protobuf::uint8* PasswordByEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordByEmailResponse)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailResponse.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByEmailResponse.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordByEmailResponse)
  return target;
}

size_t PasswordByEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordByEmailResponse)
  size_t total_size = 0;

  // optional string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordByEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordByEmailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordByEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordByEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordByEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordByEmailResponse)
    UnsafeMergeFrom(*source);
  }
}

void PasswordByEmailResponse::MergeFrom(const PasswordByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordByEmailResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordByEmailResponse::UnsafeMergeFrom(const PasswordByEmailResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
}

void PasswordByEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordByEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordByEmailResponse::CopyFrom(const PasswordByEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordByEmailResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordByEmailResponse::IsInitialized() const {

  return true;
}

void PasswordByEmailResponse::Swap(PasswordByEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordByEmailResponse::InternalSwap(PasswordByEmailResponse* other) {
  email_.Swap(&other->email_);
  user_name_.Swap(&other->user_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordByEmailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordByEmailResponse_descriptor_;
  metadata.reflection = PasswordByEmailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordByEmailResponse

// optional string email = 1;
void PasswordByEmailResponse::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByEmailResponse::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailResponse.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByEmailResponse::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailResponse.email)
}
void PasswordByEmailResponse::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailResponse.email)
}
void PasswordByEmailResponse::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailResponse.email)
}
::std::string* PasswordByEmailResponse::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailResponse.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByEmailResponse::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailResponse.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByEmailResponse::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailResponse.email)
}

// optional string user_name = 2;
void PasswordByEmailResponse::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByEmailResponse::user_name() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailResponse.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByEmailResponse::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailResponse.user_name)
}
void PasswordByEmailResponse::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailResponse.user_name)
}
void PasswordByEmailResponse::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailResponse.user_name)
}
::std::string* PasswordByEmailResponse::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailResponse.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByEmailResponse::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailResponse.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByEmailResponse::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailResponse.user_name)
}

inline const PasswordByEmailResponse* PasswordByEmailResponse::internal_default_instance() {
  return &PasswordByEmailResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordEmailRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordEmailRequest::PasswordEmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordEmailRequest)
}

void PasswordEmailRequest::InitAsDefaultInstance() {
}

PasswordEmailRequest::PasswordEmailRequest(const PasswordEmailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordEmailRequest)
}

void PasswordEmailRequest::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordEmailRequest::~PasswordEmailRequest() {
  // @@protoc_insertion_point(destructor:personal.PasswordEmailRequest)
  SharedDtor();
}

void PasswordEmailRequest::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordEmailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordEmailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordEmailRequest_descriptor_;
}

const PasswordEmailRequest& PasswordEmailRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordEmailRequest> PasswordEmailRequest_default_instance_;

PasswordEmailRequest* PasswordEmailRequest::New(::google::protobuf::Arena* arena) const {
  PasswordEmailRequest* n = new PasswordEmailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordEmailRequest)
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordEmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordEmailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordEmailRequest.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordEmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordEmailRequest)
  return false;
#undef DO_
}

void PasswordEmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordEmailRequest)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordEmailRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordEmailRequest)
}

::google::protobuf::uint8* PasswordEmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordEmailRequest)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordEmailRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordEmailRequest)
  return target;
}

size_t PasswordEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordEmailRequest)
  size_t total_size = 0;

  // optional string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordEmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordEmailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordEmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordEmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordEmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordEmailRequest)
    UnsafeMergeFrom(*source);
  }
}

void PasswordEmailRequest::MergeFrom(const PasswordEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordEmailRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordEmailRequest::UnsafeMergeFrom(const PasswordEmailRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void PasswordEmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordEmailRequest::CopyFrom(const PasswordEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordEmailRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordEmailRequest::IsInitialized() const {

  return true;
}

void PasswordEmailRequest::Swap(PasswordEmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordEmailRequest::InternalSwap(PasswordEmailRequest* other) {
  email_.Swap(&other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordEmailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordEmailRequest_descriptor_;
  metadata.reflection = PasswordEmailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordEmailRequest

// optional string email = 1;
void PasswordEmailRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordEmailRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordEmailRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordEmailRequest.email)
}
void PasswordEmailRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordEmailRequest.email)
}
void PasswordEmailRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordEmailRequest.email)
}
::std::string* PasswordEmailRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordEmailRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordEmailRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordEmailRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordEmailRequest.email)
}

inline const PasswordEmailRequest* PasswordEmailRequest::internal_default_instance() {
  return &PasswordEmailRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordEmailResponse::PasswordEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordEmailResponse)
}

void PasswordEmailResponse::InitAsDefaultInstance() {
}

PasswordEmailResponse::PasswordEmailResponse(const PasswordEmailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordEmailResponse)
}

void PasswordEmailResponse::SharedCtor() {
  _cached_size_ = 0;
}

PasswordEmailResponse::~PasswordEmailResponse() {
  // @@protoc_insertion_point(destructor:personal.PasswordEmailResponse)
  SharedDtor();
}

void PasswordEmailResponse::SharedDtor() {
}

void PasswordEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordEmailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordEmailResponse_descriptor_;
}

const PasswordEmailResponse& PasswordEmailResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordEmailResponse> PasswordEmailResponse_default_instance_;

PasswordEmailResponse* PasswordEmailResponse::New(::google::protobuf::Arena* arena) const {
  PasswordEmailResponse* n = new PasswordEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordEmailResponse)
}

bool PasswordEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordEmailResponse)
  return false;
#undef DO_
}

void PasswordEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordEmailResponse)
  // @@protoc_insertion_point(serialize_end:personal.PasswordEmailResponse)
}

::google::protobuf::uint8* PasswordEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordEmailResponse)
  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordEmailResponse)
  return target;
}

size_t PasswordEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordEmailResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordEmailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordEmailResponse)
    UnsafeMergeFrom(*source);
  }
}

void PasswordEmailResponse::MergeFrom(const PasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordEmailResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordEmailResponse::UnsafeMergeFrom(const PasswordEmailResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void PasswordEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordEmailResponse::CopyFrom(const PasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordEmailResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordEmailResponse::IsInitialized() const {

  return true;
}

void PasswordEmailResponse::Swap(PasswordEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordEmailResponse::InternalSwap(PasswordEmailResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordEmailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordEmailResponse_descriptor_;
  metadata.reflection = PasswordEmailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordEmailResponse

inline const PasswordEmailResponse* PasswordEmailResponse::internal_default_instance() {
  return &PasswordEmailResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordByPhoneRequest::kPhoneFieldNumber;
const int PasswordByPhoneRequest::kPhoneCaptchaFieldNumber;
const int PasswordByPhoneRequest::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordByPhoneRequest::PasswordByPhoneRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordByPhoneRequest)
}

void PasswordByPhoneRequest::InitAsDefaultInstance() {
}

PasswordByPhoneRequest::PasswordByPhoneRequest(const PasswordByPhoneRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordByPhoneRequest)
}

void PasswordByPhoneRequest::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordByPhoneRequest::~PasswordByPhoneRequest() {
  // @@protoc_insertion_point(destructor:personal.PasswordByPhoneRequest)
  SharedDtor();
}

void PasswordByPhoneRequest::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordByPhoneRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordByPhoneRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordByPhoneRequest_descriptor_;
}

const PasswordByPhoneRequest& PasswordByPhoneRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordByPhoneRequest> PasswordByPhoneRequest_default_instance_;

PasswordByPhoneRequest* PasswordByPhoneRequest::New(::google::protobuf::Arena* arena) const {
  PasswordByPhoneRequest* n = new PasswordByPhoneRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordByPhoneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordByPhoneRequest)
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordByPhoneRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordByPhoneRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string phone = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByPhoneRequest.phone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phone_captcha;
        break;
      }

      // optional string phone_captcha = 2;
      case 2: {
        if (tag == 18) {
         parse_phone_captcha:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_captcha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_captcha().data(), this->phone_captcha().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByPhoneRequest.phone_captcha"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_token;
        break;
      }

      // optional string token = 3;
      case 3: {
        if (tag == 26) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByPhoneRequest.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordByPhoneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordByPhoneRequest)
  return false;
#undef DO_
}

void PasswordByPhoneRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordByPhoneRequest)
  // optional string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone(), output);
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.phone_captcha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone_captcha(), output);
  }

  // optional string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordByPhoneRequest)
}

::google::protobuf::uint8* PasswordByPhoneRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordByPhoneRequest)
  // optional string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.phone_captcha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_captcha(), target);
  }

  // optional string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordByPhoneRequest)
  return target;
}

size_t PasswordByPhoneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordByPhoneRequest)
  size_t total_size = 0;

  // optional string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_captcha());
  }

  // optional string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordByPhoneRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordByPhoneRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordByPhoneRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordByPhoneRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordByPhoneRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordByPhoneRequest)
    UnsafeMergeFrom(*source);
  }
}

void PasswordByPhoneRequest::MergeFrom(const PasswordByPhoneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordByPhoneRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordByPhoneRequest::UnsafeMergeFrom(const PasswordByPhoneRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.phone_captcha().size() > 0) {

    phone_captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_captcha_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void PasswordByPhoneRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordByPhoneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordByPhoneRequest::CopyFrom(const PasswordByPhoneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordByPhoneRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordByPhoneRequest::IsInitialized() const {

  return true;
}

void PasswordByPhoneRequest::Swap(PasswordByPhoneRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordByPhoneRequest::InternalSwap(PasswordByPhoneRequest* other) {
  phone_.Swap(&other->phone_);
  phone_captcha_.Swap(&other->phone_captcha_);
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordByPhoneRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordByPhoneRequest_descriptor_;
  metadata.reflection = PasswordByPhoneRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordByPhoneRequest

// optional string phone = 1;
void PasswordByPhoneRequest::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByPhoneRequest::phone() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneRequest.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneRequest.phone)
}
void PasswordByPhoneRequest::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneRequest.phone)
}
void PasswordByPhoneRequest::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneRequest.phone)
}
::std::string* PasswordByPhoneRequest::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneRequest.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByPhoneRequest::release_phone() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneRequest.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneRequest.phone)
}

// optional string phone_captcha = 2;
void PasswordByPhoneRequest::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByPhoneRequest::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneRequest.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneRequest.phone_captcha)
}
void PasswordByPhoneRequest::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneRequest.phone_captcha)
}
void PasswordByPhoneRequest::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneRequest.phone_captcha)
}
::std::string* PasswordByPhoneRequest::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneRequest.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByPhoneRequest::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneRequest.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneRequest.phone_captcha)
}

// optional string token = 3;
void PasswordByPhoneRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByPhoneRequest::token() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneRequest.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneRequest.token)
}
void PasswordByPhoneRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneRequest.token)
}
void PasswordByPhoneRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneRequest.token)
}
::std::string* PasswordByPhoneRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByPhoneRequest::release_token() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneRequest.token)
}

inline const PasswordByPhoneRequest* PasswordByPhoneRequest::internal_default_instance() {
  return &PasswordByPhoneRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordByPhoneResponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordByPhoneResponse::PasswordByPhoneResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordByPhoneResponse)
}

void PasswordByPhoneResponse::InitAsDefaultInstance() {
}

PasswordByPhoneResponse::PasswordByPhoneResponse(const PasswordByPhoneResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordByPhoneResponse)
}

void PasswordByPhoneResponse::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordByPhoneResponse::~PasswordByPhoneResponse() {
  // @@protoc_insertion_point(destructor:personal.PasswordByPhoneResponse)
  SharedDtor();
}

void PasswordByPhoneResponse::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordByPhoneResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordByPhoneResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordByPhoneResponse_descriptor_;
}

const PasswordByPhoneResponse& PasswordByPhoneResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordByPhoneResponse> PasswordByPhoneResponse_default_instance_;

PasswordByPhoneResponse* PasswordByPhoneResponse::New(::google::protobuf::Arena* arena) const {
  PasswordByPhoneResponse* n = new PasswordByPhoneResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordByPhoneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordByPhoneResponse)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordByPhoneResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordByPhoneResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordByPhoneResponse.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordByPhoneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordByPhoneResponse)
  return false;
#undef DO_
}

void PasswordByPhoneResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordByPhoneResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneResponse.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordByPhoneResponse)
}

::google::protobuf::uint8* PasswordByPhoneResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordByPhoneResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordByPhoneResponse.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordByPhoneResponse)
  return target;
}

size_t PasswordByPhoneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordByPhoneResponse)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordByPhoneResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordByPhoneResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordByPhoneResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordByPhoneResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordByPhoneResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordByPhoneResponse)
    UnsafeMergeFrom(*source);
  }
}

void PasswordByPhoneResponse::MergeFrom(const PasswordByPhoneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordByPhoneResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordByPhoneResponse::UnsafeMergeFrom(const PasswordByPhoneResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void PasswordByPhoneResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordByPhoneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordByPhoneResponse::CopyFrom(const PasswordByPhoneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordByPhoneResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordByPhoneResponse::IsInitialized() const {

  return true;
}

void PasswordByPhoneResponse::Swap(PasswordByPhoneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordByPhoneResponse::InternalSwap(PasswordByPhoneResponse* other) {
  user_id_.Swap(&other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordByPhoneResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordByPhoneResponse_descriptor_;
  metadata.reflection = PasswordByPhoneResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordByPhoneResponse

// optional string user_id = 1;
void PasswordByPhoneResponse::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordByPhoneResponse::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneResponse.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneResponse::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneResponse.user_id)
}
void PasswordByPhoneResponse::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneResponse.user_id)
}
void PasswordByPhoneResponse::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneResponse.user_id)
}
::std::string* PasswordByPhoneResponse::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneResponse.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordByPhoneResponse::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneResponse.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordByPhoneResponse::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneResponse.user_id)
}

inline const PasswordByPhoneResponse* PasswordByPhoneResponse::internal_default_instance() {
  return &PasswordByPhoneResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordUpdateRequest::kUserIdFieldNumber;
const int PasswordUpdateRequest::kNewPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordUpdateRequest::PasswordUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordUpdateRequest)
}

void PasswordUpdateRequest::InitAsDefaultInstance() {
}

PasswordUpdateRequest::PasswordUpdateRequest(const PasswordUpdateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordUpdateRequest)
}

void PasswordUpdateRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordUpdateRequest::~PasswordUpdateRequest() {
  // @@protoc_insertion_point(destructor:personal.PasswordUpdateRequest)
  SharedDtor();
}

void PasswordUpdateRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordUpdateRequest_descriptor_;
}

const PasswordUpdateRequest& PasswordUpdateRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateRequest> PasswordUpdateRequest_default_instance_;

PasswordUpdateRequest* PasswordUpdateRequest::New(::google::protobuf::Arena* arena) const {
  PasswordUpdateRequest* n = new PasswordUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordUpdateRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordUpdateRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_new_password;
        break;
      }

      // optional string new_password = 2;
      case 2: {
        if (tag == 18) {
         parse_new_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->new_password().data(), this->new_password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordUpdateRequest.new_password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordUpdateRequest)
  return false;
#undef DO_
}

void PasswordUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordUpdateRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordUpdateRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string new_password = 2;
  if (this->new_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordUpdateRequest.new_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->new_password(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordUpdateRequest)
}

::google::protobuf::uint8* PasswordUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordUpdateRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordUpdateRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string new_password = 2;
  if (this->new_password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordUpdateRequest.new_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->new_password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordUpdateRequest)
  return target;
}

size_t PasswordUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordUpdateRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string new_password = 2;
  if (this->new_password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->new_password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordUpdateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordUpdateRequest)
    UnsafeMergeFrom(*source);
  }
}

void PasswordUpdateRequest::MergeFrom(const PasswordUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordUpdateRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordUpdateRequest::UnsafeMergeFrom(const PasswordUpdateRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.new_password().size() > 0) {

    new_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_password_);
  }
}

void PasswordUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordUpdateRequest::CopyFrom(const PasswordUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordUpdateRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordUpdateRequest::IsInitialized() const {

  return true;
}

void PasswordUpdateRequest::Swap(PasswordUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordUpdateRequest::InternalSwap(PasswordUpdateRequest* other) {
  user_id_.Swap(&other->user_id_);
  new_password_.Swap(&other->new_password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordUpdateRequest_descriptor_;
  metadata.reflection = PasswordUpdateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordUpdateRequest

// optional string user_id = 1;
void PasswordUpdateRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordUpdateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordUpdateRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordUpdateRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordUpdateRequest.user_id)
}
void PasswordUpdateRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordUpdateRequest.user_id)
}
void PasswordUpdateRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordUpdateRequest.user_id)
}
::std::string* PasswordUpdateRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordUpdateRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordUpdateRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordUpdateRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordUpdateRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordUpdateRequest.user_id)
}

// optional string new_password = 2;
void PasswordUpdateRequest::clear_new_password() {
  new_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordUpdateRequest::new_password() const {
  // @@protoc_insertion_point(field_get:personal.PasswordUpdateRequest.new_password)
  return new_password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordUpdateRequest::set_new_password(const ::std::string& value) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordUpdateRequest.new_password)
}
void PasswordUpdateRequest::set_new_password(const char* value) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordUpdateRequest.new_password)
}
void PasswordUpdateRequest::set_new_password(const char* value, size_t size) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordUpdateRequest.new_password)
}
::std::string* PasswordUpdateRequest::mutable_new_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordUpdateRequest.new_password)
  return new_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordUpdateRequest::release_new_password() {
  // @@protoc_insertion_point(field_release:personal.PasswordUpdateRequest.new_password)
  
  return new_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordUpdateRequest::set_allocated_new_password(::std::string* new_password) {
  if (new_password != NULL) {
    
  } else {
    
  }
  new_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_password);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordUpdateRequest.new_password)
}

inline const PasswordUpdateRequest* PasswordUpdateRequest::internal_default_instance() {
  return &PasswordUpdateRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordUpdateResponse::PasswordUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordUpdateResponse)
}

void PasswordUpdateResponse::InitAsDefaultInstance() {
}

PasswordUpdateResponse::PasswordUpdateResponse(const PasswordUpdateResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordUpdateResponse)
}

void PasswordUpdateResponse::SharedCtor() {
  _cached_size_ = 0;
}

PasswordUpdateResponse::~PasswordUpdateResponse() {
  // @@protoc_insertion_point(destructor:personal.PasswordUpdateResponse)
  SharedDtor();
}

void PasswordUpdateResponse::SharedDtor() {
}

void PasswordUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordUpdateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordUpdateResponse_descriptor_;
}

const PasswordUpdateResponse& PasswordUpdateResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateResponse> PasswordUpdateResponse_default_instance_;

PasswordUpdateResponse* PasswordUpdateResponse::New(::google::protobuf::Arena* arena) const {
  PasswordUpdateResponse* n = new PasswordUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordUpdateResponse)
}

bool PasswordUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordUpdateResponse)
  return false;
#undef DO_
}

void PasswordUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordUpdateResponse)
  // @@protoc_insertion_point(serialize_end:personal.PasswordUpdateResponse)
}

::google::protobuf::uint8* PasswordUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordUpdateResponse)
  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordUpdateResponse)
  return target;
}

size_t PasswordUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordUpdateResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordUpdateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordUpdateResponse)
    UnsafeMergeFrom(*source);
  }
}

void PasswordUpdateResponse::MergeFrom(const PasswordUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordUpdateResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordUpdateResponse::UnsafeMergeFrom(const PasswordUpdateResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void PasswordUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordUpdateResponse::CopyFrom(const PasswordUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordUpdateResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordUpdateResponse::IsInitialized() const {

  return true;
}

void PasswordUpdateResponse::Swap(PasswordUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordUpdateResponse::InternalSwap(PasswordUpdateResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordUpdateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordUpdateResponse_descriptor_;
  metadata.reflection = PasswordUpdateResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordUpdateResponse

inline const PasswordUpdateResponse* PasswordUpdateResponse::internal_default_instance() {
  return &PasswordUpdateResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordVerifyRequest::kUserIdFieldNumber;
const int PasswordVerifyRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordVerifyRequest::PasswordVerifyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordVerifyRequest)
}

void PasswordVerifyRequest::InitAsDefaultInstance() {
}

PasswordVerifyRequest::PasswordVerifyRequest(const PasswordVerifyRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordVerifyRequest)
}

void PasswordVerifyRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

PasswordVerifyRequest::~PasswordVerifyRequest() {
  // @@protoc_insertion_point(destructor:personal.PasswordVerifyRequest)
  SharedDtor();
}

void PasswordVerifyRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PasswordVerifyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordVerifyRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordVerifyRequest_descriptor_;
}

const PasswordVerifyRequest& PasswordVerifyRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordVerifyRequest> PasswordVerifyRequest_default_instance_;

PasswordVerifyRequest* PasswordVerifyRequest::New(::google::protobuf::Arena* arena) const {
  PasswordVerifyRequest* n = new PasswordVerifyRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordVerifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordVerifyRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool PasswordVerifyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordVerifyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordVerifyRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_password;
        break;
      }

      // optional string password = 2;
      case 2: {
        if (tag == 18) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.PasswordVerifyRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordVerifyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordVerifyRequest)
  return false;
#undef DO_
}

void PasswordVerifyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordVerifyRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordVerifyRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordVerifyRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordVerifyRequest)
}

::google::protobuf::uint8* PasswordVerifyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordVerifyRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordVerifyRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.PasswordVerifyRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordVerifyRequest)
  return target;
}

size_t PasswordVerifyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordVerifyRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordVerifyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordVerifyRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordVerifyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordVerifyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordVerifyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordVerifyRequest)
    UnsafeMergeFrom(*source);
  }
}

void PasswordVerifyRequest::MergeFrom(const PasswordVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordVerifyRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordVerifyRequest::UnsafeMergeFrom(const PasswordVerifyRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void PasswordVerifyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordVerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordVerifyRequest::CopyFrom(const PasswordVerifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordVerifyRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordVerifyRequest::IsInitialized() const {

  return true;
}

void PasswordVerifyRequest::Swap(PasswordVerifyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordVerifyRequest::InternalSwap(PasswordVerifyRequest* other) {
  user_id_.Swap(&other->user_id_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordVerifyRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordVerifyRequest_descriptor_;
  metadata.reflection = PasswordVerifyRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordVerifyRequest

// optional string user_id = 1;
void PasswordVerifyRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordVerifyRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyRequest.user_id)
}
void PasswordVerifyRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordVerifyRequest.user_id)
}
void PasswordVerifyRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordVerifyRequest.user_id)
}
::std::string* PasswordVerifyRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordVerifyRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordVerifyRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordVerifyRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordVerifyRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordVerifyRequest.user_id)
}

// optional string password = 2;
void PasswordVerifyRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& PasswordVerifyRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordVerifyRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyRequest.password)
}
void PasswordVerifyRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordVerifyRequest.password)
}
void PasswordVerifyRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordVerifyRequest.password)
}
::std::string* PasswordVerifyRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordVerifyRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PasswordVerifyRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.PasswordVerifyRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PasswordVerifyRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordVerifyRequest.password)
}

inline const PasswordVerifyRequest* PasswordVerifyRequest::internal_default_instance() {
  return &PasswordVerifyRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PasswordVerifyResponse::kIsRightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PasswordVerifyResponse::PasswordVerifyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.PasswordVerifyResponse)
}

void PasswordVerifyResponse::InitAsDefaultInstance() {
}

PasswordVerifyResponse::PasswordVerifyResponse(const PasswordVerifyResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.PasswordVerifyResponse)
}

void PasswordVerifyResponse::SharedCtor() {
  is_right_ = false;
  _cached_size_ = 0;
}

PasswordVerifyResponse::~PasswordVerifyResponse() {
  // @@protoc_insertion_point(destructor:personal.PasswordVerifyResponse)
  SharedDtor();
}

void PasswordVerifyResponse::SharedDtor() {
}

void PasswordVerifyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PasswordVerifyResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PasswordVerifyResponse_descriptor_;
}

const PasswordVerifyResponse& PasswordVerifyResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<PasswordVerifyResponse> PasswordVerifyResponse_default_instance_;

PasswordVerifyResponse* PasswordVerifyResponse::New(::google::protobuf::Arena* arena) const {
  PasswordVerifyResponse* n = new PasswordVerifyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PasswordVerifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.PasswordVerifyResponse)
  is_right_ = false;
}

bool PasswordVerifyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.PasswordVerifyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool is_right = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_right_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.PasswordVerifyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.PasswordVerifyResponse)
  return false;
#undef DO_
}

void PasswordVerifyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.PasswordVerifyResponse)
  // optional bool is_right = 1;
  if (this->is_right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->is_right(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.PasswordVerifyResponse)
}

::google::protobuf::uint8* PasswordVerifyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.PasswordVerifyResponse)
  // optional bool is_right = 1;
  if (this->is_right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->is_right(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.PasswordVerifyResponse)
  return target;
}

size_t PasswordVerifyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.PasswordVerifyResponse)
  size_t total_size = 0;

  // optional bool is_right = 1;
  if (this->is_right() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PasswordVerifyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.PasswordVerifyResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PasswordVerifyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PasswordVerifyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.PasswordVerifyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.PasswordVerifyResponse)
    UnsafeMergeFrom(*source);
  }
}

void PasswordVerifyResponse::MergeFrom(const PasswordVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.PasswordVerifyResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void PasswordVerifyResponse::UnsafeMergeFrom(const PasswordVerifyResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.is_right() != 0) {
    set_is_right(from.is_right());
  }
}

void PasswordVerifyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.PasswordVerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PasswordVerifyResponse::CopyFrom(const PasswordVerifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.PasswordVerifyResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool PasswordVerifyResponse::IsInitialized() const {

  return true;
}

void PasswordVerifyResponse::Swap(PasswordVerifyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PasswordVerifyResponse::InternalSwap(PasswordVerifyResponse* other) {
  std::swap(is_right_, other->is_right_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PasswordVerifyResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PasswordVerifyResponse_descriptor_;
  metadata.reflection = PasswordVerifyResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordVerifyResponse

// optional bool is_right = 1;
void PasswordVerifyResponse::clear_is_right() {
  is_right_ = false;
}
bool PasswordVerifyResponse::is_right() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyResponse.is_right)
  return is_right_;
}
void PasswordVerifyResponse::set_is_right(bool value) {
  
  is_right_ = value;
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyResponse.is_right)
}

inline const PasswordVerifyResponse* PasswordVerifyResponse::internal_default_instance() {
  return &PasswordVerifyResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)
