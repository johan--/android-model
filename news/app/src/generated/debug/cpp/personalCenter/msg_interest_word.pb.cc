// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_interest_word.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "personalCenter/msg_interest_word.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace personal {

namespace {

const ::google::protobuf::Descriptor* InterestSubjectRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterestSubjectRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* InterestSubjectResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterestSubjectResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_personalCenter_2fmsg_5finterest_5fword_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_personalCenter_2fmsg_5finterest_5fword_2eproto() {
  protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "personalCenter/msg_interest_word.proto");
  GOOGLE_CHECK(file != NULL);
  InterestSubjectRequest_descriptor_ = file->message_type(0);
  static const int InterestSubjectRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectRequest, keyword_),
  };
  InterestSubjectRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InterestSubjectRequest_descriptor_,
      InterestSubjectRequest::internal_default_instance(),
      InterestSubjectRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(InterestSubjectRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectRequest, _internal_metadata_));
  InterestSubjectResponse_descriptor_ = file->message_type(1);
  static const int InterestSubjectResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectResponse, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectResponse, total_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectResponse, error_),
  };
  InterestSubjectResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InterestSubjectResponse_descriptor_,
      InterestSubjectResponse::internal_default_instance(),
      InterestSubjectResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(InterestSubjectResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterestSubjectResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_personalCenter_2fmsg_5finterest_5fword_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InterestSubjectRequest_descriptor_, InterestSubjectRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InterestSubjectResponse_descriptor_, InterestSubjectResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_personalCenter_2fmsg_5finterest_5fword_2eproto() {
  InterestSubjectRequest_default_instance_.Shutdown();
  delete InterestSubjectRequest_reflection_;
  InterestSubjectResponse_default_instance_.Shutdown();
  delete InterestSubjectResponse_reflection_;
}

void protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  InterestSubjectRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InterestSubjectResponse_default_instance_.DefaultConstruct();
  InterestSubjectRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  InterestSubjectResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto_once_);
void protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto_once_,
                 &protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto_impl);
}
void protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n&personalCenter/msg_interest_word.proto"
    "\022\010personal\032\032grpcCommon/msg_error.proto\")"
    "\n\026InterestSubjectRequest\022\017\n\007keyword\030\001 \001("
    "\t\"e\n\027InterestSubjectResponse\022\017\n\007subject\030"
    "\001 \003(\t\022\023\n\013total_count\030\002 \001(\005\022$\n\005error\030\003 \001("
    "\0132\025.grpcCommon.GrpcErrorB\037\n\024com.wanfang."
    "personalP\001\242\002\004WFPRb\006proto3", 265);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "personalCenter/msg_interest_word.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_personalCenter_2fmsg_5finterest_5fword_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto_once_);
void protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto_once_,
                 &protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_personalCenter_2fmsg_5finterest_5fword_2eproto {
  StaticDescriptorInitializer_personalCenter_2fmsg_5finterest_5fword_2eproto() {
    protobuf_AddDesc_personalCenter_2fmsg_5finterest_5fword_2eproto();
  }
} static_descriptor_initializer_personalCenter_2fmsg_5finterest_5fword_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterestSubjectRequest::kKeywordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterestSubjectRequest::InterestSubjectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InterestSubjectRequest)
}

void InterestSubjectRequest::InitAsDefaultInstance() {
}

InterestSubjectRequest::InterestSubjectRequest(const InterestSubjectRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InterestSubjectRequest)
}

void InterestSubjectRequest::SharedCtor() {
  keyword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InterestSubjectRequest::~InterestSubjectRequest() {
  // @@protoc_insertion_point(destructor:personal.InterestSubjectRequest)
  SharedDtor();
}

void InterestSubjectRequest::SharedDtor() {
  keyword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InterestSubjectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterestSubjectRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterestSubjectRequest_descriptor_;
}

const InterestSubjectRequest& InterestSubjectRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InterestSubjectRequest> InterestSubjectRequest_default_instance_;

InterestSubjectRequest* InterestSubjectRequest::New(::google::protobuf::Arena* arena) const {
  InterestSubjectRequest* n = new InterestSubjectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterestSubjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InterestSubjectRequest)
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InterestSubjectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InterestSubjectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string keyword = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keyword()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keyword().data(), this->keyword().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InterestSubjectRequest.keyword"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InterestSubjectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InterestSubjectRequest)
  return false;
#undef DO_
}

void InterestSubjectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InterestSubjectRequest)
  // optional string keyword = 1;
  if (this->keyword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InterestSubjectRequest.keyword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->keyword(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InterestSubjectRequest)
}

::google::protobuf::uint8* InterestSubjectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InterestSubjectRequest)
  // optional string keyword = 1;
  if (this->keyword().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keyword().data(), this->keyword().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InterestSubjectRequest.keyword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->keyword(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InterestSubjectRequest)
  return target;
}

size_t InterestSubjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InterestSubjectRequest)
  size_t total_size = 0;

  // optional string keyword = 1;
  if (this->keyword().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keyword());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterestSubjectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InterestSubjectRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InterestSubjectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterestSubjectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InterestSubjectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InterestSubjectRequest)
    UnsafeMergeFrom(*source);
  }
}

void InterestSubjectRequest::MergeFrom(const InterestSubjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InterestSubjectRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InterestSubjectRequest::UnsafeMergeFrom(const InterestSubjectRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.keyword().size() > 0) {

    keyword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keyword_);
  }
}

void InterestSubjectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InterestSubjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterestSubjectRequest::CopyFrom(const InterestSubjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InterestSubjectRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InterestSubjectRequest::IsInitialized() const {

  return true;
}

void InterestSubjectRequest::Swap(InterestSubjectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterestSubjectRequest::InternalSwap(InterestSubjectRequest* other) {
  keyword_.Swap(&other->keyword_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterestSubjectRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterestSubjectRequest_descriptor_;
  metadata.reflection = InterestSubjectRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterestSubjectRequest

// optional string keyword = 1;
void InterestSubjectRequest::clear_keyword() {
  keyword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InterestSubjectRequest::keyword() const {
  // @@protoc_insertion_point(field_get:personal.InterestSubjectRequest.keyword)
  return keyword_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InterestSubjectRequest::set_keyword(const ::std::string& value) {
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InterestSubjectRequest.keyword)
}
void InterestSubjectRequest::set_keyword(const char* value) {
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InterestSubjectRequest.keyword)
}
void InterestSubjectRequest::set_keyword(const char* value, size_t size) {
  
  keyword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InterestSubjectRequest.keyword)
}
::std::string* InterestSubjectRequest::mutable_keyword() {
  
  // @@protoc_insertion_point(field_mutable:personal.InterestSubjectRequest.keyword)
  return keyword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InterestSubjectRequest::release_keyword() {
  // @@protoc_insertion_point(field_release:personal.InterestSubjectRequest.keyword)
  
  return keyword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InterestSubjectRequest::set_allocated_keyword(::std::string* keyword) {
  if (keyword != NULL) {
    
  } else {
    
  }
  keyword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keyword);
  // @@protoc_insertion_point(field_set_allocated:personal.InterestSubjectRequest.keyword)
}

inline const InterestSubjectRequest* InterestSubjectRequest::internal_default_instance() {
  return &InterestSubjectRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterestSubjectResponse::kSubjectFieldNumber;
const int InterestSubjectResponse::kTotalCountFieldNumber;
const int InterestSubjectResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterestSubjectResponse::InterestSubjectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InterestSubjectResponse)
}

void InterestSubjectResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

InterestSubjectResponse::InterestSubjectResponse(const InterestSubjectResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InterestSubjectResponse)
}

void InterestSubjectResponse::SharedCtor() {
  error_ = NULL;
  total_count_ = 0;
  _cached_size_ = 0;
}

InterestSubjectResponse::~InterestSubjectResponse() {
  // @@protoc_insertion_point(destructor:personal.InterestSubjectResponse)
  SharedDtor();
}

void InterestSubjectResponse::SharedDtor() {
  if (this != &InterestSubjectResponse_default_instance_.get()) {
    delete error_;
  }
}

void InterestSubjectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterestSubjectResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterestSubjectResponse_descriptor_;
}

const InterestSubjectResponse& InterestSubjectResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5finterest_5fword_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InterestSubjectResponse> InterestSubjectResponse_default_instance_;

InterestSubjectResponse* InterestSubjectResponse::New(::google::protobuf::Arena* arena) const {
  InterestSubjectResponse* n = new InterestSubjectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterestSubjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InterestSubjectResponse)
  total_count_ = 0;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  subject_.Clear();
}

bool InterestSubjectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InterestSubjectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string subject = 1;
      case 1: {
        if (tag == 10) {
         parse_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject(this->subject_size() - 1).data(),
            this->subject(this->subject_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InterestSubjectResponse.subject"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_subject;
        if (input->ExpectTag(16)) goto parse_total_count;
        break;
      }

      // optional int32 total_count = 2;
      case 2: {
        if (tag == 16) {
         parse_total_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InterestSubjectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InterestSubjectResponse)
  return false;
#undef DO_
}

void InterestSubjectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InterestSubjectResponse)
  // repeated string subject = 1;
  for (int i = 0; i < this->subject_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject(i).data(), this->subject(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InterestSubjectResponse.subject");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->subject(i), output);
  }

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_count(), output);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InterestSubjectResponse)
}

::google::protobuf::uint8* InterestSubjectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InterestSubjectResponse)
  // repeated string subject = 1;
  for (int i = 0; i < this->subject_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject(i).data(), this->subject(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InterestSubjectResponse.subject");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->subject(i), target);
  }

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_count(), target);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InterestSubjectResponse)
  return target;
}

size_t InterestSubjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InterestSubjectResponse)
  size_t total_size = 0;

  // optional int32 total_count = 2;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // repeated string subject = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->subject_size());
  for (int i = 0; i < this->subject_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->subject(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterestSubjectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InterestSubjectResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InterestSubjectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InterestSubjectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InterestSubjectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InterestSubjectResponse)
    UnsafeMergeFrom(*source);
  }
}

void InterestSubjectResponse::MergeFrom(const InterestSubjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InterestSubjectResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InterestSubjectResponse::UnsafeMergeFrom(const InterestSubjectResponse& from) {
  GOOGLE_DCHECK(&from != this);
  subject_.UnsafeMergeFrom(from.subject_);
  if (from.total_count() != 0) {
    set_total_count(from.total_count());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void InterestSubjectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InterestSubjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterestSubjectResponse::CopyFrom(const InterestSubjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InterestSubjectResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InterestSubjectResponse::IsInitialized() const {

  return true;
}

void InterestSubjectResponse::Swap(InterestSubjectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterestSubjectResponse::InternalSwap(InterestSubjectResponse* other) {
  subject_.UnsafeArenaSwap(&other->subject_);
  std::swap(total_count_, other->total_count_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterestSubjectResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterestSubjectResponse_descriptor_;
  metadata.reflection = InterestSubjectResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterestSubjectResponse

// repeated string subject = 1;
int InterestSubjectResponse::subject_size() const {
  return subject_.size();
}
void InterestSubjectResponse::clear_subject() {
  subject_.Clear();
}
const ::std::string& InterestSubjectResponse::subject(int index) const {
  // @@protoc_insertion_point(field_get:personal.InterestSubjectResponse.subject)
  return subject_.Get(index);
}
::std::string* InterestSubjectResponse::mutable_subject(int index) {
  // @@protoc_insertion_point(field_mutable:personal.InterestSubjectResponse.subject)
  return subject_.Mutable(index);
}
void InterestSubjectResponse::set_subject(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.InterestSubjectResponse.subject)
  subject_.Mutable(index)->assign(value);
}
void InterestSubjectResponse::set_subject(int index, const char* value) {
  subject_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:personal.InterestSubjectResponse.subject)
}
void InterestSubjectResponse::set_subject(int index, const char* value, size_t size) {
  subject_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:personal.InterestSubjectResponse.subject)
}
::std::string* InterestSubjectResponse::add_subject() {
  // @@protoc_insertion_point(field_add_mutable:personal.InterestSubjectResponse.subject)
  return subject_.Add();
}
void InterestSubjectResponse::add_subject(const ::std::string& value) {
  subject_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:personal.InterestSubjectResponse.subject)
}
void InterestSubjectResponse::add_subject(const char* value) {
  subject_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:personal.InterestSubjectResponse.subject)
}
void InterestSubjectResponse::add_subject(const char* value, size_t size) {
  subject_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:personal.InterestSubjectResponse.subject)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
InterestSubjectResponse::subject() const {
  // @@protoc_insertion_point(field_list:personal.InterestSubjectResponse.subject)
  return subject_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
InterestSubjectResponse::mutable_subject() {
  // @@protoc_insertion_point(field_mutable_list:personal.InterestSubjectResponse.subject)
  return &subject_;
}

// optional int32 total_count = 2;
void InterestSubjectResponse::clear_total_count() {
  total_count_ = 0;
}
::google::protobuf::int32 InterestSubjectResponse::total_count() const {
  // @@protoc_insertion_point(field_get:personal.InterestSubjectResponse.total_count)
  return total_count_;
}
void InterestSubjectResponse::set_total_count(::google::protobuf::int32 value) {
  
  total_count_ = value;
  // @@protoc_insertion_point(field_set:personal.InterestSubjectResponse.total_count)
}

// optional .grpcCommon.GrpcError error = 3;
bool InterestSubjectResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void InterestSubjectResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& InterestSubjectResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.InterestSubjectResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* InterestSubjectResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.InterestSubjectResponse.error)
  return error_;
}
::grpcCommon::GrpcError* InterestSubjectResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.InterestSubjectResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void InterestSubjectResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.InterestSubjectResponse.error)
}

inline const InterestSubjectResponse* InterestSubjectResponse::internal_default_instance() {
  return &InterestSubjectResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)
