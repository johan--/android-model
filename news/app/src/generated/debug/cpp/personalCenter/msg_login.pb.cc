// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_login.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "personalCenter/msg_login.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace personal {

namespace {

const ::google::protobuf::Descriptor* LoginOutRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginOutRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginOutResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginOutResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* LoginResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LoginResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* QuickLoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  QuickLoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ThirdPartyLoginRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThirdPartyLoginRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ThirdPartyBindRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThirdPartyBindRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* ThirdPartyBindResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ThirdPartyBindResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindExistAccountRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindExistAccountRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* BindNewRegistRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BindNewRegistRequest_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ThirdPartyType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* LoginDeviceType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto() {
  protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "personalCenter/msg_login.proto");
  GOOGLE_CHECK(file != NULL);
  LoginOutRequest_descriptor_ = file->message_type(0);
  static const int LoginOutRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginOutRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginOutRequest, login_token_),
  };
  LoginOutRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginOutRequest_descriptor_,
      LoginOutRequest::internal_default_instance(),
      LoginOutRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginOutRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginOutRequest, _internal_metadata_));
  LoginOutResponse_descriptor_ = file->message_type(1);
  static const int LoginOutResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginOutResponse, error_),
  };
  LoginOutResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginOutResponse_descriptor_,
      LoginOutResponse::internal_default_instance(),
      LoginOutResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginOutResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginOutResponse, _internal_metadata_));
  LoginRequest_descriptor_ = file->message_type(2);
  static const int LoginRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, device_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, device_type_),
  };
  LoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginRequest_descriptor_,
      LoginRequest::internal_default_instance(),
      LoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_));
  LoginResponse_descriptor_ = file->message_type(3);
  static const int LoginResponse_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_nick_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_real_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_used_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, user_avatar_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, login_token_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, error_),
  };
  LoginResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LoginResponse_descriptor_,
      LoginResponse::internal_default_instance(),
      LoginResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(LoginResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginResponse, _internal_metadata_));
  QuickLoginRequest_descriptor_ = file->message_type(4);
  static const int QuickLoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickLoginRequest, phone_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickLoginRequest, phone_captcha_),
  };
  QuickLoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      QuickLoginRequest_descriptor_,
      QuickLoginRequest::internal_default_instance(),
      QuickLoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(QuickLoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(QuickLoginRequest, _internal_metadata_));
  ThirdPartyLoginRequest_descriptor_ = file->message_type(5);
  static const int ThirdPartyLoginRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyLoginRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyLoginRequest, third_party_code_),
  };
  ThirdPartyLoginRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ThirdPartyLoginRequest_descriptor_,
      ThirdPartyLoginRequest::internal_default_instance(),
      ThirdPartyLoginRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ThirdPartyLoginRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyLoginRequest, _internal_metadata_));
  ThirdPartyBindRequest_descriptor_ = file->message_type(6);
  static const int ThirdPartyBindRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindRequest, third_party_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindRequest, user_status_),
  };
  ThirdPartyBindRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ThirdPartyBindRequest_descriptor_,
      ThirdPartyBindRequest::internal_default_instance(),
      ThirdPartyBindRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(ThirdPartyBindRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindRequest, _internal_metadata_));
  ThirdPartyBindResponse_descriptor_ = file->message_type(7);
  static const int ThirdPartyBindResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindResponse, bind_status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindResponse, error_),
  };
  ThirdPartyBindResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ThirdPartyBindResponse_descriptor_,
      ThirdPartyBindResponse::internal_default_instance(),
      ThirdPartyBindResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(ThirdPartyBindResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ThirdPartyBindResponse, _internal_metadata_));
  BindExistAccountRequest_descriptor_ = file->message_type(8);
  static const int BindExistAccountRequest_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, device_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, device_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, third_party_type_),
  };
  BindExistAccountRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindExistAccountRequest_descriptor_,
      BindExistAccountRequest::internal_default_instance(),
      BindExistAccountRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindExistAccountRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindExistAccountRequest, _internal_metadata_));
  BindNewRegistRequest_descriptor_ = file->message_type(9);
  static const int BindNewRegistRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindNewRegistRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindNewRegistRequest, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindNewRegistRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindNewRegistRequest, third_party_type_),
  };
  BindNewRegistRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      BindNewRegistRequest_descriptor_,
      BindNewRegistRequest::internal_default_instance(),
      BindNewRegistRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(BindNewRegistRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BindNewRegistRequest, _internal_metadata_));
  ThirdPartyType_descriptor_ = file->enum_type(0);
  LoginDeviceType_descriptor_ = file->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_personalCenter_2fmsg_5flogin_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginOutRequest_descriptor_, LoginOutRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginOutResponse_descriptor_, LoginOutResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginRequest_descriptor_, LoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LoginResponse_descriptor_, LoginResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      QuickLoginRequest_descriptor_, QuickLoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ThirdPartyLoginRequest_descriptor_, ThirdPartyLoginRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ThirdPartyBindRequest_descriptor_, ThirdPartyBindRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ThirdPartyBindResponse_descriptor_, ThirdPartyBindResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindExistAccountRequest_descriptor_, BindExistAccountRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      BindNewRegistRequest_descriptor_, BindNewRegistRequest::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto() {
  LoginOutRequest_default_instance_.Shutdown();
  delete LoginOutRequest_reflection_;
  LoginOutResponse_default_instance_.Shutdown();
  delete LoginOutResponse_reflection_;
  LoginRequest_default_instance_.Shutdown();
  delete LoginRequest_reflection_;
  LoginResponse_default_instance_.Shutdown();
  delete LoginResponse_reflection_;
  QuickLoginRequest_default_instance_.Shutdown();
  delete QuickLoginRequest_reflection_;
  ThirdPartyLoginRequest_default_instance_.Shutdown();
  delete ThirdPartyLoginRequest_reflection_;
  ThirdPartyBindRequest_default_instance_.Shutdown();
  delete ThirdPartyBindRequest_reflection_;
  ThirdPartyBindResponse_default_instance_.Shutdown();
  delete ThirdPartyBindResponse_reflection_;
  BindExistAccountRequest_default_instance_.Shutdown();
  delete BindExistAccountRequest_reflection_;
  BindNewRegistRequest_default_instance_.Shutdown();
  delete BindNewRegistRequest_reflection_;
}

void protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  LoginOutRequest_default_instance_.DefaultConstruct();
  LoginOutResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  LoginResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  QuickLoginRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ThirdPartyLoginRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ThirdPartyBindRequest_default_instance_.DefaultConstruct();
  ThirdPartyBindResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindExistAccountRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  BindNewRegistRequest_default_instance_.DefaultConstruct();
  LoginOutRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginOutResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  LoginResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  QuickLoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ThirdPartyLoginRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ThirdPartyBindRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  ThirdPartyBindResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindExistAccountRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  BindNewRegistRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_once_);
void protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_once_,
                 &protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto_impl);
}
void protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\036personalCenter/msg_login.proto\022\010person"
    "al\032\032grpcCommon/msg_error.proto\"7\n\017LoginO"
    "utRequest\022\017\n\007user_id\030\001 \001(\t\022\023\n\013login_toke"
    "n\030\002 \001(\t\"8\n\020LoginOutResponse\022$\n\005error\030\002 \001"
    "(\0132\025.grpcCommon.GrpcError\"v\n\014LoginReques"
    "t\022\020\n\010password\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\021"
    "\n\tdevice_id\030\003 \001(\t\022.\n\013device_type\030\004 \001(\0162\031"
    ".personal.LoginDeviceType\"\274\001\n\rLoginRespo"
    "nse\022\017\n\007user_id\030\001 \001(\t\022\026\n\016user_nick_name\030\002"
    " \001(\t\022\026\n\016user_real_name\030\003 \001(\t\022\026\n\016user_use"
    "d_name\030\004 \001(\t\022\027\n\017user_avatar_url\030\005 \001(\t\022\023\n"
    "\013login_token\030\006 \001(\t\022$\n\005error\030\007 \001(\0132\025.grpc"
    "Common.GrpcError\"@\n\021QuickLoginRequest\022\024\n"
    "\014phone_number\030\001 \001(\t\022\025\n\rphone_captcha\030\002 \001"
    "(\t\"\?\n\026ThirdPartyLoginRequest\022\013\n\003uid\030\001 \001("
    "\t\022\030\n\020third_party_code\030\002 \001(\005\"d\n\025ThirdPart"
    "yBindRequest\022\013\n\003uid\030\001 \001(\t\022\017\n\007user_id\030\002 \001"
    "(\t\022\030\n\020third_party_code\030\003 \001(\005\022\023\n\013user_sta"
    "tus\030\004 \001(\005\"S\n\026ThirdPartyBindResponse\022\023\n\013b"
    "ind_status\030\001 \001(\005\022$\n\005error\030\002 \001(\0132\025.grpcCo"
    "mmon.GrpcError\"\302\001\n\027BindExistAccountReque"
    "st\022\013\n\003uid\030\001 \001(\t\022\021\n\tuser_name\030\002 \001(\t\022\020\n\010pa"
    "ssword\030\003 \001(\t\022\021\n\tdevice_id\030\004 \001(\t\022.\n\013devic"
    "e_type\030\005 \001(\0162\031.personal.LoginDeviceType\022"
    "2\n\020third_party_type\030\006 \001(\0162\030.personal.Thi"
    "rdPartyType\"~\n\024BindNewRegistRequest\022\021\n\tu"
    "ser_name\030\001 \001(\t\022\r\n\005email\030\002 \001(\t\022\020\n\010passwor"
    "d\030\003 \001(\t\0222\n\020third_party_type\030\004 \001(\0162\030.pers"
    "onal.ThirdPartyType*.\n\016ThirdPartyType\022\n\n"
    "\006WECHAT\020\000\022\006\n\002QQ\020\001\022\010\n\004SINA\020\003*\'\n\017LoginDevi"
    "ceType\022\013\n\007ANDROID\020\000\022\007\n\003IOS\020\001B\037\n\024com.wanf"
    "ang.personalP\001\242\002\004WFPRb\006proto3", 1269);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "personalCenter/msg_login.proto", &protobuf_RegisterTypes);
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_personalCenter_2fmsg_5flogin_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_once_);
void protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_once_,
                 &protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_personalCenter_2fmsg_5flogin_2eproto {
  StaticDescriptorInitializer_personalCenter_2fmsg_5flogin_2eproto() {
    protobuf_AddDesc_personalCenter_2fmsg_5flogin_2eproto();
  }
} static_descriptor_initializer_personalCenter_2fmsg_5flogin_2eproto_;
const ::google::protobuf::EnumDescriptor* ThirdPartyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThirdPartyType_descriptor_;
}
bool ThirdPartyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginDeviceType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginDeviceType_descriptor_;
}
bool LoginDeviceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginOutRequest::kUserIdFieldNumber;
const int LoginOutRequest::kLoginTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOutRequest::LoginOutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.LoginOutRequest)
}

void LoginOutRequest::InitAsDefaultInstance() {
}

LoginOutRequest::LoginOutRequest(const LoginOutRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.LoginOutRequest)
}

void LoginOutRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginOutRequest::~LoginOutRequest() {
  // @@protoc_insertion_point(destructor:personal.LoginOutRequest)
  SharedDtor();
}

void LoginOutRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginOutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginOutRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginOutRequest_descriptor_;
}

const LoginOutRequest& LoginOutRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginOutRequest> LoginOutRequest_default_instance_;

LoginOutRequest* LoginOutRequest::New(::google::protobuf::Arena* arena) const {
  LoginOutRequest* n = new LoginOutRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginOutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.LoginOutRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool LoginOutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.LoginOutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginOutRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_login_token;
        break;
      }

      // optional string login_token = 2;
      case 2: {
        if (tag == 18) {
         parse_login_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_token().data(), this->login_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginOutRequest.login_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.LoginOutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.LoginOutRequest)
  return false;
#undef DO_
}

void LoginOutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.LoginOutRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginOutRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginOutRequest.login_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->login_token(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.LoginOutRequest)
}

::google::protobuf::uint8* LoginOutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.LoginOutRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginOutRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginOutRequest.login_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->login_token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.LoginOutRequest)
  return target;
}

size_t LoginOutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.LoginOutRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string login_token = 2;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginOutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.LoginOutRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginOutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.LoginOutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.LoginOutRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoginOutRequest::MergeFrom(const LoginOutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.LoginOutRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginOutRequest::UnsafeMergeFrom(const LoginOutRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.login_token().size() > 0) {

    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
}

void LoginOutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.LoginOutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOutRequest::CopyFrom(const LoginOutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.LoginOutRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginOutRequest::IsInitialized() const {

  return true;
}

void LoginOutRequest::Swap(LoginOutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOutRequest::InternalSwap(LoginOutRequest* other) {
  user_id_.Swap(&other->user_id_);
  login_token_.Swap(&other->login_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginOutRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginOutRequest_descriptor_;
  metadata.reflection = LoginOutRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginOutRequest

// optional string user_id = 1;
void LoginOutRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginOutRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginOutRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginOutRequest.user_id)
}
void LoginOutRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginOutRequest.user_id)
}
void LoginOutRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginOutRequest.user_id)
}
::std::string* LoginOutRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginOutRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginOutRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.LoginOutRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginOutRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutRequest.user_id)
}

// optional string login_token = 2;
void LoginOutRequest::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginOutRequest::login_token() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutRequest.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginOutRequest::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginOutRequest.login_token)
}
void LoginOutRequest::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginOutRequest.login_token)
}
void LoginOutRequest::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginOutRequest.login_token)
}
::std::string* LoginOutRequest::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginOutRequest.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginOutRequest::release_login_token() {
  // @@protoc_insertion_point(field_release:personal.LoginOutRequest.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginOutRequest::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutRequest.login_token)
}

inline const LoginOutRequest* LoginOutRequest::internal_default_instance() {
  return &LoginOutRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginOutResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginOutResponse::LoginOutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.LoginOutResponse)
}

void LoginOutResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

LoginOutResponse::LoginOutResponse(const LoginOutResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.LoginOutResponse)
}

void LoginOutResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

LoginOutResponse::~LoginOutResponse() {
  // @@protoc_insertion_point(destructor:personal.LoginOutResponse)
  SharedDtor();
}

void LoginOutResponse::SharedDtor() {
  if (this != &LoginOutResponse_default_instance_.get()) {
    delete error_;
  }
}

void LoginOutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginOutResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginOutResponse_descriptor_;
}

const LoginOutResponse& LoginOutResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginOutResponse> LoginOutResponse_default_instance_;

LoginOutResponse* LoginOutResponse::New(::google::protobuf::Arena* arena) const {
  LoginOutResponse* n = new LoginOutResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginOutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.LoginOutResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool LoginOutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.LoginOutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.LoginOutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.LoginOutResponse)
  return false;
#undef DO_
}

void LoginOutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.LoginOutResponse)
  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.LoginOutResponse)
}

::google::protobuf::uint8* LoginOutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.LoginOutResponse)
  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.LoginOutResponse)
  return target;
}

size_t LoginOutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.LoginOutResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginOutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.LoginOutResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginOutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginOutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.LoginOutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.LoginOutResponse)
    UnsafeMergeFrom(*source);
  }
}

void LoginOutResponse::MergeFrom(const LoginOutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.LoginOutResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginOutResponse::UnsafeMergeFrom(const LoginOutResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void LoginOutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.LoginOutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginOutResponse::CopyFrom(const LoginOutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.LoginOutResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginOutResponse::IsInitialized() const {

  return true;
}

void LoginOutResponse::Swap(LoginOutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginOutResponse::InternalSwap(LoginOutResponse* other) {
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginOutResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginOutResponse_descriptor_;
  metadata.reflection = LoginOutResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginOutResponse

// optional .grpcCommon.GrpcError error = 2;
bool LoginOutResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void LoginOutResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& LoginOutResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.LoginOutResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* LoginOutResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.LoginOutResponse.error)
  return error_;
}
::grpcCommon::GrpcError* LoginOutResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.LoginOutResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void LoginOutResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.LoginOutResponse.error)
}

inline const LoginOutResponse* LoginOutResponse::internal_default_instance() {
  return &LoginOutResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kPasswordFieldNumber;
const int LoginRequest::kUserNameFieldNumber;
const int LoginRequest::kDeviceIdFieldNumber;
const int LoginRequest::kDeviceTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.LoginRequest)
}

void LoginRequest::InitAsDefaultInstance() {
}

LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.LoginRequest)
}

void LoginRequest::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_ = 0;
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:personal.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginRequest_descriptor_;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> LoginRequest_default_instance_;

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.LoginRequest)
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_type_ = 0;
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_device_id;
        break;
      }

      // optional string device_id = 3;
      case 3: {
        if (tag == 26) {
         parse_device_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginRequest.device_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_device_type;
        break;
      }

      // optional .personal.LoginDeviceType device_type = 4;
      case 4: {
        if (tag == 32) {
         parse_device_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device_type(static_cast< ::personal::LoginDeviceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.LoginRequest)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional string device_id = 3;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->device_id(), output);
  }

  // optional .personal.LoginDeviceType device_type = 4;
  if (this->device_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->device_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.LoginRequest)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional string device_id = 3;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginRequest.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->device_id(), target);
  }

  // optional .personal.LoginDeviceType device_type = 4;
  if (this->device_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->device_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.LoginRequest)
  size_t total_size = 0;

  // optional string password = 1;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string device_id = 3;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // optional .personal.LoginDeviceType device_type = 4;
  if (this->device_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.LoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.LoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.LoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginRequest::UnsafeMergeFrom(const LoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.device_type() != 0) {
    set_device_type(from.device_type());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.LoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginRequest::IsInitialized() const {

  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  password_.Swap(&other->password_);
  user_name_.Swap(&other->user_name_);
  device_id_.Swap(&other->device_id_);
  std::swap(device_type_, other->device_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginRequest_descriptor_;
  metadata.reflection = LoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// optional string password = 1;
void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.password)
}
void LoginRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.password)
}
void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.password)
}
::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.password)
}

// optional string user_name = 2;
void LoginRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.user_name)
}
void LoginRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.user_name)
}
void LoginRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.user_name)
}
::std::string* LoginRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.user_name)
}

// optional string device_id = 3;
void LoginRequest::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::device_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginRequest.device_id)
}
void LoginRequest::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginRequest.device_id)
}
void LoginRequest::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginRequest.device_id)
}
::std::string* LoginRequest::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginRequest.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_device_id() {
  // @@protoc_insertion_point(field_release:personal.LoginRequest.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginRequest.device_id)
}

// optional .personal.LoginDeviceType device_type = 4;
void LoginRequest::clear_device_type() {
  device_type_ = 0;
}
::personal::LoginDeviceType LoginRequest::device_type() const {
  // @@protoc_insertion_point(field_get:personal.LoginRequest.device_type)
  return static_cast< ::personal::LoginDeviceType >(device_type_);
}
void LoginRequest::set_device_type(::personal::LoginDeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:personal.LoginRequest.device_type)
}

inline const LoginRequest* LoginRequest::internal_default_instance() {
  return &LoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kUserIdFieldNumber;
const int LoginResponse::kUserNickNameFieldNumber;
const int LoginResponse::kUserRealNameFieldNumber;
const int LoginResponse::kUserUsedNameFieldNumber;
const int LoginResponse::kUserAvatarUrlFieldNumber;
const int LoginResponse::kLoginTokenFieldNumber;
const int LoginResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.LoginResponse)
}

void LoginResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.LoginResponse)
}

void LoginResponse::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_used_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:personal.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_used_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &LoginResponse_default_instance_.get()) {
    delete error_;
  }
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LoginResponse_descriptor_;
}

const LoginResponse& LoginResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<LoginResponse> LoginResponse_default_instance_;

LoginResponse* LoginResponse::New(::google::protobuf::Arena* arena) const {
  LoginResponse* n = new LoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.LoginResponse)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_used_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_nick_name;
        break;
      }

      // optional string user_nick_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_nick_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_nick_name().data(), this->user_nick_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.user_nick_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_user_real_name;
        break;
      }

      // optional string user_real_name = 3;
      case 3: {
        if (tag == 26) {
         parse_user_real_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_real_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_real_name().data(), this->user_real_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.user_real_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user_used_name;
        break;
      }

      // optional string user_used_name = 4;
      case 4: {
        if (tag == 34) {
         parse_user_used_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_used_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_used_name().data(), this->user_used_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.user_used_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_user_avatar_url;
        break;
      }

      // optional string user_avatar_url = 5;
      case 5: {
        if (tag == 42) {
         parse_user_avatar_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_avatar_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_avatar_url().data(), this->user_avatar_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.user_avatar_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_login_token;
        break;
      }

      // optional string login_token = 6;
      case 6: {
        if (tag == 50) {
         parse_login_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_login_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->login_token().data(), this->login_token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.LoginResponse.login_token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 7;
      case 7: {
        if (tag == 58) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.LoginResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string user_nick_name = 2;
  if (this->user_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick_name().data(), this->user_nick_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_nick_name(), output);
  }

  // optional string user_real_name = 3;
  if (this->user_real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_real_name().data(), this->user_real_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_real_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->user_real_name(), output);
  }

  // optional string user_used_name = 4;
  if (this->user_used_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_used_name().data(), this->user_used_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_used_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_used_name(), output);
  }

  // optional string user_avatar_url = 5;
  if (this->user_avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_avatar_url().data(), this->user_avatar_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_avatar_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->user_avatar_url(), output);
  }

  // optional string login_token = 6;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.login_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->login_token(), output);
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.LoginResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string user_nick_name = 2;
  if (this->user_nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_nick_name().data(), this->user_nick_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_nick_name(), target);
  }

  // optional string user_real_name = 3;
  if (this->user_real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_real_name().data(), this->user_real_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_real_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->user_real_name(), target);
  }

  // optional string user_used_name = 4;
  if (this->user_used_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_used_name().data(), this->user_used_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_used_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_used_name(), target);
  }

  // optional string user_avatar_url = 5;
  if (this->user_avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_avatar_url().data(), this->user_avatar_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.user_avatar_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->user_avatar_url(), target);
  }

  // optional string login_token = 6;
  if (this->login_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->login_token().data(), this->login_token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.LoginResponse.login_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->login_token(), target);
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.LoginResponse)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string user_nick_name = 2;
  if (this->user_nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_nick_name());
  }

  // optional string user_real_name = 3;
  if (this->user_real_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_real_name());
  }

  // optional string user_used_name = 4;
  if (this->user_used_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_used_name());
  }

  // optional string user_avatar_url = 5;
  if (this->user_avatar_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_avatar_url());
  }

  // optional string login_token = 6;
  if (this->login_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->login_token());
  }

  // optional .grpcCommon.GrpcError error = 7;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.LoginResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.LoginResponse)
    UnsafeMergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.LoginResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void LoginResponse::UnsafeMergeFrom(const LoginResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.user_nick_name().size() > 0) {

    user_nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_nick_name_);
  }
  if (from.user_real_name().size() > 0) {

    user_real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_real_name_);
  }
  if (from.user_used_name().size() > 0) {

    user_used_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_used_name_);
  }
  if (from.user_avatar_url().size() > 0) {

    user_avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_avatar_url_);
  }
  if (from.login_token().size() > 0) {

    login_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.login_token_);
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.LoginResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool LoginResponse::IsInitialized() const {

  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  user_id_.Swap(&other->user_id_);
  user_nick_name_.Swap(&other->user_nick_name_);
  user_real_name_.Swap(&other->user_real_name_);
  user_used_name_.Swap(&other->user_used_name_);
  user_avatar_url_.Swap(&other->user_avatar_url_);
  login_token_.Swap(&other->login_token_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LoginResponse_descriptor_;
  metadata.reflection = LoginResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginResponse

// optional string user_id = 1;
void LoginResponse::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::user_id() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_id)
}
void LoginResponse::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_id)
}
void LoginResponse::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_id)
}
::std::string* LoginResponse::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_id)
}

// optional string user_nick_name = 2;
void LoginResponse::clear_user_nick_name() {
  user_nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::user_nick_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_nick_name)
  return user_nick_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_user_nick_name(const ::std::string& value) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_nick_name)
}
void LoginResponse::set_user_nick_name(const char* value) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_nick_name)
}
void LoginResponse::set_user_nick_name(const char* value, size_t size) {
  
  user_nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_nick_name)
}
::std::string* LoginResponse::mutable_user_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_nick_name)
  return user_nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_user_nick_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_nick_name)
  
  return user_nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_user_nick_name(::std::string* user_nick_name) {
  if (user_nick_name != NULL) {
    
  } else {
    
  }
  user_nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_nick_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_nick_name)
}

// optional string user_real_name = 3;
void LoginResponse::clear_user_real_name() {
  user_real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::user_real_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_real_name)
  return user_real_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_user_real_name(const ::std::string& value) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_real_name)
}
void LoginResponse::set_user_real_name(const char* value) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_real_name)
}
void LoginResponse::set_user_real_name(const char* value, size_t size) {
  
  user_real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_real_name)
}
::std::string* LoginResponse::mutable_user_real_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_real_name)
  return user_real_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_user_real_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_real_name)
  
  return user_real_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_user_real_name(::std::string* user_real_name) {
  if (user_real_name != NULL) {
    
  } else {
    
  }
  user_real_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_real_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_real_name)
}

// optional string user_used_name = 4;
void LoginResponse::clear_user_used_name() {
  user_used_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::user_used_name() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_used_name)
  return user_used_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_user_used_name(const ::std::string& value) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_used_name)
}
void LoginResponse::set_user_used_name(const char* value) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_used_name)
}
void LoginResponse::set_user_used_name(const char* value, size_t size) {
  
  user_used_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_used_name)
}
::std::string* LoginResponse::mutable_user_used_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_used_name)
  return user_used_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_user_used_name() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_used_name)
  
  return user_used_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_user_used_name(::std::string* user_used_name) {
  if (user_used_name != NULL) {
    
  } else {
    
  }
  user_used_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_used_name);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_used_name)
}

// optional string user_avatar_url = 5;
void LoginResponse::clear_user_avatar_url() {
  user_avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::user_avatar_url() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.user_avatar_url)
  return user_avatar_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_user_avatar_url(const ::std::string& value) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.user_avatar_url)
}
void LoginResponse::set_user_avatar_url(const char* value) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.user_avatar_url)
}
void LoginResponse::set_user_avatar_url(const char* value, size_t size) {
  
  user_avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.user_avatar_url)
}
::std::string* LoginResponse::mutable_user_avatar_url() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.user_avatar_url)
  return user_avatar_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_user_avatar_url() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.user_avatar_url)
  
  return user_avatar_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_user_avatar_url(::std::string* user_avatar_url) {
  if (user_avatar_url != NULL) {
    
  } else {
    
  }
  user_avatar_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_avatar_url);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.user_avatar_url)
}

// optional string login_token = 6;
void LoginResponse::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginResponse::login_token() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.LoginResponse.login_token)
}
void LoginResponse::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.LoginResponse.login_token)
}
void LoginResponse::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.LoginResponse.login_token)
}
::std::string* LoginResponse::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginResponse::release_login_token() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginResponse::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.login_token)
}

// optional .grpcCommon.GrpcError error = 7;
bool LoginResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void LoginResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& LoginResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.LoginResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* LoginResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.LoginResponse.error)
  return error_;
}
::grpcCommon::GrpcError* LoginResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.LoginResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void LoginResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.LoginResponse.error)
}

inline const LoginResponse* LoginResponse::internal_default_instance() {
  return &LoginResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QuickLoginRequest::kPhoneNumberFieldNumber;
const int QuickLoginRequest::kPhoneCaptchaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QuickLoginRequest::QuickLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.QuickLoginRequest)
}

void QuickLoginRequest::InitAsDefaultInstance() {
}

QuickLoginRequest::QuickLoginRequest(const QuickLoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.QuickLoginRequest)
}

void QuickLoginRequest::SharedCtor() {
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

QuickLoginRequest::~QuickLoginRequest() {
  // @@protoc_insertion_point(destructor:personal.QuickLoginRequest)
  SharedDtor();
}

void QuickLoginRequest::SharedDtor() {
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void QuickLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* QuickLoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return QuickLoginRequest_descriptor_;
}

const QuickLoginRequest& QuickLoginRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<QuickLoginRequest> QuickLoginRequest_default_instance_;

QuickLoginRequest* QuickLoginRequest::New(::google::protobuf::Arena* arena) const {
  QuickLoginRequest* n = new QuickLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void QuickLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.QuickLoginRequest)
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool QuickLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.QuickLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string phone_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), this->phone_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.QuickLoginRequest.phone_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phone_captcha;
        break;
      }

      // optional string phone_captcha = 2;
      case 2: {
        if (tag == 18) {
         parse_phone_captcha:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_captcha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_captcha().data(), this->phone_captcha().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.QuickLoginRequest.phone_captcha"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.QuickLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.QuickLoginRequest)
  return false;
#undef DO_
}

void QuickLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.QuickLoginRequest)
  // optional string phone_number = 1;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.QuickLoginRequest.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone_number(), output);
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.QuickLoginRequest.phone_captcha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone_captcha(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.QuickLoginRequest)
}

::google::protobuf::uint8* QuickLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.QuickLoginRequest)
  // optional string phone_number = 1;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), this->phone_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.QuickLoginRequest.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone_number(), target);
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.QuickLoginRequest.phone_captcha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone_captcha(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.QuickLoginRequest)
  return target;
}

size_t QuickLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.QuickLoginRequest)
  size_t total_size = 0;

  // optional string phone_number = 1;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  // optional string phone_captcha = 2;
  if (this->phone_captcha().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_captcha());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void QuickLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.QuickLoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const QuickLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QuickLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.QuickLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.QuickLoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void QuickLoginRequest::MergeFrom(const QuickLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.QuickLoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void QuickLoginRequest::UnsafeMergeFrom(const QuickLoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.phone_captcha().size() > 0) {

    phone_captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_captcha_);
  }
}

void QuickLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.QuickLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QuickLoginRequest::CopyFrom(const QuickLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.QuickLoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool QuickLoginRequest::IsInitialized() const {

  return true;
}

void QuickLoginRequest::Swap(QuickLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QuickLoginRequest::InternalSwap(QuickLoginRequest* other) {
  phone_number_.Swap(&other->phone_number_);
  phone_captcha_.Swap(&other->phone_captcha_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata QuickLoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = QuickLoginRequest_descriptor_;
  metadata.reflection = QuickLoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// QuickLoginRequest

// optional string phone_number = 1;
void QuickLoginRequest::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuickLoginRequest::phone_number() const {
  // @@protoc_insertion_point(field_get:personal.QuickLoginRequest.phone_number)
  return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuickLoginRequest::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.QuickLoginRequest.phone_number)
}
void QuickLoginRequest::set_phone_number(const char* value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.QuickLoginRequest.phone_number)
}
void QuickLoginRequest::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.QuickLoginRequest.phone_number)
}
::std::string* QuickLoginRequest::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.QuickLoginRequest.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuickLoginRequest::release_phone_number() {
  // @@protoc_insertion_point(field_release:personal.QuickLoginRequest.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuickLoginRequest::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:personal.QuickLoginRequest.phone_number)
}

// optional string phone_captcha = 2;
void QuickLoginRequest::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& QuickLoginRequest::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.QuickLoginRequest.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuickLoginRequest::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.QuickLoginRequest.phone_captcha)
}
void QuickLoginRequest::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.QuickLoginRequest.phone_captcha)
}
void QuickLoginRequest::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.QuickLoginRequest.phone_captcha)
}
::std::string* QuickLoginRequest::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.QuickLoginRequest.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* QuickLoginRequest::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.QuickLoginRequest.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void QuickLoginRequest::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.QuickLoginRequest.phone_captcha)
}

inline const QuickLoginRequest* QuickLoginRequest::internal_default_instance() {
  return &QuickLoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdPartyLoginRequest::kUidFieldNumber;
const int ThirdPartyLoginRequest::kThirdPartyCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdPartyLoginRequest::ThirdPartyLoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.ThirdPartyLoginRequest)
}

void ThirdPartyLoginRequest::InitAsDefaultInstance() {
}

ThirdPartyLoginRequest::ThirdPartyLoginRequest(const ThirdPartyLoginRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.ThirdPartyLoginRequest)
}

void ThirdPartyLoginRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_party_code_ = 0;
  _cached_size_ = 0;
}

ThirdPartyLoginRequest::~ThirdPartyLoginRequest() {
  // @@protoc_insertion_point(destructor:personal.ThirdPartyLoginRequest)
  SharedDtor();
}

void ThirdPartyLoginRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdPartyLoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdPartyLoginRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThirdPartyLoginRequest_descriptor_;
}

const ThirdPartyLoginRequest& ThirdPartyLoginRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyLoginRequest> ThirdPartyLoginRequest_default_instance_;

ThirdPartyLoginRequest* ThirdPartyLoginRequest::New(::google::protobuf::Arena* arena) const {
  ThirdPartyLoginRequest* n = new ThirdPartyLoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdPartyLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.ThirdPartyLoginRequest)
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_party_code_ = 0;
}

bool ThirdPartyLoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.ThirdPartyLoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.ThirdPartyLoginRequest.uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_third_party_code;
        break;
      }

      // optional int32 third_party_code = 2;
      case 2: {
        if (tag == 16) {
         parse_third_party_code:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &third_party_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.ThirdPartyLoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.ThirdPartyLoginRequest)
  return false;
#undef DO_
}

void ThirdPartyLoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.ThirdPartyLoginRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyLoginRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional int32 third_party_code = 2;
  if (this->third_party_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->third_party_code(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.ThirdPartyLoginRequest)
}

::google::protobuf::uint8* ThirdPartyLoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.ThirdPartyLoginRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyLoginRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional int32 third_party_code = 2;
  if (this->third_party_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->third_party_code(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.ThirdPartyLoginRequest)
  return target;
}

size_t ThirdPartyLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.ThirdPartyLoginRequest)
  size_t total_size = 0;

  // optional string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // optional int32 third_party_code = 2;
  if (this->third_party_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->third_party_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdPartyLoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.ThirdPartyLoginRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ThirdPartyLoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdPartyLoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.ThirdPartyLoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.ThirdPartyLoginRequest)
    UnsafeMergeFrom(*source);
  }
}

void ThirdPartyLoginRequest::MergeFrom(const ThirdPartyLoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.ThirdPartyLoginRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ThirdPartyLoginRequest::UnsafeMergeFrom(const ThirdPartyLoginRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.third_party_code() != 0) {
    set_third_party_code(from.third_party_code());
  }
}

void ThirdPartyLoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.ThirdPartyLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdPartyLoginRequest::CopyFrom(const ThirdPartyLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.ThirdPartyLoginRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ThirdPartyLoginRequest::IsInitialized() const {

  return true;
}

void ThirdPartyLoginRequest::Swap(ThirdPartyLoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdPartyLoginRequest::InternalSwap(ThirdPartyLoginRequest* other) {
  uid_.Swap(&other->uid_);
  std::swap(third_party_code_, other->third_party_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdPartyLoginRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThirdPartyLoginRequest_descriptor_;
  metadata.reflection = ThirdPartyLoginRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThirdPartyLoginRequest

// optional string uid = 1;
void ThirdPartyLoginRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ThirdPartyLoginRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyLoginRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyLoginRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyLoginRequest.uid)
}
void ThirdPartyLoginRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyLoginRequest.uid)
}
void ThirdPartyLoginRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyLoginRequest.uid)
}
::std::string* ThirdPartyLoginRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyLoginRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThirdPartyLoginRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyLoginRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyLoginRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyLoginRequest.uid)
}

// optional int32 third_party_code = 2;
void ThirdPartyLoginRequest::clear_third_party_code() {
  third_party_code_ = 0;
}
::google::protobuf::int32 ThirdPartyLoginRequest::third_party_code() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyLoginRequest.third_party_code)
  return third_party_code_;
}
void ThirdPartyLoginRequest::set_third_party_code(::google::protobuf::int32 value) {
  
  third_party_code_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyLoginRequest.third_party_code)
}

inline const ThirdPartyLoginRequest* ThirdPartyLoginRequest::internal_default_instance() {
  return &ThirdPartyLoginRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdPartyBindRequest::kUidFieldNumber;
const int ThirdPartyBindRequest::kUserIdFieldNumber;
const int ThirdPartyBindRequest::kThirdPartyCodeFieldNumber;
const int ThirdPartyBindRequest::kUserStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdPartyBindRequest::ThirdPartyBindRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.ThirdPartyBindRequest)
}

void ThirdPartyBindRequest::InitAsDefaultInstance() {
}

ThirdPartyBindRequest::ThirdPartyBindRequest(const ThirdPartyBindRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.ThirdPartyBindRequest)
}

void ThirdPartyBindRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&third_party_code_, 0, reinterpret_cast<char*>(&user_status_) -
    reinterpret_cast<char*>(&third_party_code_) + sizeof(user_status_));
  _cached_size_ = 0;
}

ThirdPartyBindRequest::~ThirdPartyBindRequest() {
  // @@protoc_insertion_point(destructor:personal.ThirdPartyBindRequest)
  SharedDtor();
}

void ThirdPartyBindRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ThirdPartyBindRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdPartyBindRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThirdPartyBindRequest_descriptor_;
}

const ThirdPartyBindRequest& ThirdPartyBindRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyBindRequest> ThirdPartyBindRequest_default_instance_;

ThirdPartyBindRequest* ThirdPartyBindRequest::New(::google::protobuf::Arena* arena) const {
  ThirdPartyBindRequest* n = new ThirdPartyBindRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdPartyBindRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.ThirdPartyBindRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(ThirdPartyBindRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ThirdPartyBindRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(third_party_code_, user_status_);
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ThirdPartyBindRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.ThirdPartyBindRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.ThirdPartyBindRequest.uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_id;
        break;
      }

      // optional string user_id = 2;
      case 2: {
        if (tag == 18) {
         parse_user_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.ThirdPartyBindRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_third_party_code;
        break;
      }

      // optional int32 third_party_code = 3;
      case 3: {
        if (tag == 24) {
         parse_third_party_code:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &third_party_code_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_user_status;
        break;
      }

      // optional int32 user_status = 4;
      case 4: {
        if (tag == 32) {
         parse_user_status:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.ThirdPartyBindRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.ThirdPartyBindRequest)
  return false;
#undef DO_
}

void ThirdPartyBindRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.ThirdPartyBindRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyBindRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyBindRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // optional int32 third_party_code = 3;
  if (this->third_party_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->third_party_code(), output);
  }

  // optional int32 user_status = 4;
  if (this->user_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->user_status(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.ThirdPartyBindRequest)
}

::google::protobuf::uint8* ThirdPartyBindRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.ThirdPartyBindRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyBindRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.ThirdPartyBindRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // optional int32 third_party_code = 3;
  if (this->third_party_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->third_party_code(), target);
  }

  // optional int32 user_status = 4;
  if (this->user_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->user_status(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.ThirdPartyBindRequest)
  return target;
}

size_t ThirdPartyBindRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.ThirdPartyBindRequest)
  size_t total_size = 0;

  // optional string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // optional string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional int32 third_party_code = 3;
  if (this->third_party_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->third_party_code());
  }

  // optional int32 user_status = 4;
  if (this->user_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->user_status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdPartyBindRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.ThirdPartyBindRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ThirdPartyBindRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdPartyBindRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.ThirdPartyBindRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.ThirdPartyBindRequest)
    UnsafeMergeFrom(*source);
  }
}

void ThirdPartyBindRequest::MergeFrom(const ThirdPartyBindRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.ThirdPartyBindRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ThirdPartyBindRequest::UnsafeMergeFrom(const ThirdPartyBindRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.third_party_code() != 0) {
    set_third_party_code(from.third_party_code());
  }
  if (from.user_status() != 0) {
    set_user_status(from.user_status());
  }
}

void ThirdPartyBindRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.ThirdPartyBindRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdPartyBindRequest::CopyFrom(const ThirdPartyBindRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.ThirdPartyBindRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ThirdPartyBindRequest::IsInitialized() const {

  return true;
}

void ThirdPartyBindRequest::Swap(ThirdPartyBindRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdPartyBindRequest::InternalSwap(ThirdPartyBindRequest* other) {
  uid_.Swap(&other->uid_);
  user_id_.Swap(&other->user_id_);
  std::swap(third_party_code_, other->third_party_code_);
  std::swap(user_status_, other->user_status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdPartyBindRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThirdPartyBindRequest_descriptor_;
  metadata.reflection = ThirdPartyBindRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThirdPartyBindRequest

// optional string uid = 1;
void ThirdPartyBindRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ThirdPartyBindRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyBindRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.uid)
}
void ThirdPartyBindRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyBindRequest.uid)
}
void ThirdPartyBindRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyBindRequest.uid)
}
::std::string* ThirdPartyBindRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThirdPartyBindRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyBindRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindRequest.uid)
}

// optional string user_id = 2;
void ThirdPartyBindRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ThirdPartyBindRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyBindRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.user_id)
}
void ThirdPartyBindRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.ThirdPartyBindRequest.user_id)
}
void ThirdPartyBindRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.ThirdPartyBindRequest.user_id)
}
::std::string* ThirdPartyBindRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ThirdPartyBindRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ThirdPartyBindRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindRequest.user_id)
}

// optional int32 third_party_code = 3;
void ThirdPartyBindRequest::clear_third_party_code() {
  third_party_code_ = 0;
}
::google::protobuf::int32 ThirdPartyBindRequest::third_party_code() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.third_party_code)
  return third_party_code_;
}
void ThirdPartyBindRequest::set_third_party_code(::google::protobuf::int32 value) {
  
  third_party_code_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.third_party_code)
}

// optional int32 user_status = 4;
void ThirdPartyBindRequest::clear_user_status() {
  user_status_ = 0;
}
::google::protobuf::int32 ThirdPartyBindRequest::user_status() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindRequest.user_status)
  return user_status_;
}
void ThirdPartyBindRequest::set_user_status(::google::protobuf::int32 value) {
  
  user_status_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindRequest.user_status)
}

inline const ThirdPartyBindRequest* ThirdPartyBindRequest::internal_default_instance() {
  return &ThirdPartyBindRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ThirdPartyBindResponse::kBindStatusFieldNumber;
const int ThirdPartyBindResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ThirdPartyBindResponse::ThirdPartyBindResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.ThirdPartyBindResponse)
}

void ThirdPartyBindResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

ThirdPartyBindResponse::ThirdPartyBindResponse(const ThirdPartyBindResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.ThirdPartyBindResponse)
}

void ThirdPartyBindResponse::SharedCtor() {
  error_ = NULL;
  bind_status_ = 0;
  _cached_size_ = 0;
}

ThirdPartyBindResponse::~ThirdPartyBindResponse() {
  // @@protoc_insertion_point(destructor:personal.ThirdPartyBindResponse)
  SharedDtor();
}

void ThirdPartyBindResponse::SharedDtor() {
  if (this != &ThirdPartyBindResponse_default_instance_.get()) {
    delete error_;
  }
}

void ThirdPartyBindResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ThirdPartyBindResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ThirdPartyBindResponse_descriptor_;
}

const ThirdPartyBindResponse& ThirdPartyBindResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ThirdPartyBindResponse> ThirdPartyBindResponse_default_instance_;

ThirdPartyBindResponse* ThirdPartyBindResponse::New(::google::protobuf::Arena* arena) const {
  ThirdPartyBindResponse* n = new ThirdPartyBindResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ThirdPartyBindResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.ThirdPartyBindResponse)
  bind_status_ = 0;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool ThirdPartyBindResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.ThirdPartyBindResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 bind_status = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &bind_status_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.ThirdPartyBindResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.ThirdPartyBindResponse)
  return false;
#undef DO_
}

void ThirdPartyBindResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.ThirdPartyBindResponse)
  // optional int32 bind_status = 1;
  if (this->bind_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->bind_status(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.ThirdPartyBindResponse)
}

::google::protobuf::uint8* ThirdPartyBindResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.ThirdPartyBindResponse)
  // optional int32 bind_status = 1;
  if (this->bind_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->bind_status(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.ThirdPartyBindResponse)
  return target;
}

size_t ThirdPartyBindResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.ThirdPartyBindResponse)
  size_t total_size = 0;

  // optional int32 bind_status = 1;
  if (this->bind_status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->bind_status());
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ThirdPartyBindResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.ThirdPartyBindResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ThirdPartyBindResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ThirdPartyBindResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.ThirdPartyBindResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.ThirdPartyBindResponse)
    UnsafeMergeFrom(*source);
  }
}

void ThirdPartyBindResponse::MergeFrom(const ThirdPartyBindResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.ThirdPartyBindResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ThirdPartyBindResponse::UnsafeMergeFrom(const ThirdPartyBindResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.bind_status() != 0) {
    set_bind_status(from.bind_status());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void ThirdPartyBindResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.ThirdPartyBindResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ThirdPartyBindResponse::CopyFrom(const ThirdPartyBindResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.ThirdPartyBindResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ThirdPartyBindResponse::IsInitialized() const {

  return true;
}

void ThirdPartyBindResponse::Swap(ThirdPartyBindResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ThirdPartyBindResponse::InternalSwap(ThirdPartyBindResponse* other) {
  std::swap(bind_status_, other->bind_status_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ThirdPartyBindResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ThirdPartyBindResponse_descriptor_;
  metadata.reflection = ThirdPartyBindResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ThirdPartyBindResponse

// optional int32 bind_status = 1;
void ThirdPartyBindResponse::clear_bind_status() {
  bind_status_ = 0;
}
::google::protobuf::int32 ThirdPartyBindResponse::bind_status() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindResponse.bind_status)
  return bind_status_;
}
void ThirdPartyBindResponse::set_bind_status(::google::protobuf::int32 value) {
  
  bind_status_ = value;
  // @@protoc_insertion_point(field_set:personal.ThirdPartyBindResponse.bind_status)
}

// optional .grpcCommon.GrpcError error = 2;
bool ThirdPartyBindResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void ThirdPartyBindResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& ThirdPartyBindResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.ThirdPartyBindResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* ThirdPartyBindResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.ThirdPartyBindResponse.error)
  return error_;
}
::grpcCommon::GrpcError* ThirdPartyBindResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.ThirdPartyBindResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void ThirdPartyBindResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.ThirdPartyBindResponse.error)
}

inline const ThirdPartyBindResponse* ThirdPartyBindResponse::internal_default_instance() {
  return &ThirdPartyBindResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindExistAccountRequest::kUidFieldNumber;
const int BindExistAccountRequest::kUserNameFieldNumber;
const int BindExistAccountRequest::kPasswordFieldNumber;
const int BindExistAccountRequest::kDeviceIdFieldNumber;
const int BindExistAccountRequest::kDeviceTypeFieldNumber;
const int BindExistAccountRequest::kThirdPartyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindExistAccountRequest::BindExistAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.BindExistAccountRequest)
}

void BindExistAccountRequest::InitAsDefaultInstance() {
}

BindExistAccountRequest::BindExistAccountRequest(const BindExistAccountRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.BindExistAccountRequest)
}

void BindExistAccountRequest::SharedCtor() {
  uid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&device_type_, 0, reinterpret_cast<char*>(&third_party_type_) -
    reinterpret_cast<char*>(&device_type_) + sizeof(third_party_type_));
  _cached_size_ = 0;
}

BindExistAccountRequest::~BindExistAccountRequest() {
  // @@protoc_insertion_point(destructor:personal.BindExistAccountRequest)
  SharedDtor();
}

void BindExistAccountRequest::SharedDtor() {
  uid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindExistAccountRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindExistAccountRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindExistAccountRequest_descriptor_;
}

const BindExistAccountRequest& BindExistAccountRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindExistAccountRequest> BindExistAccountRequest_default_instance_;

BindExistAccountRequest* BindExistAccountRequest::New(::google::protobuf::Arena* arena) const {
  BindExistAccountRequest* n = new BindExistAccountRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindExistAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.BindExistAccountRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(BindExistAccountRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<BindExistAccountRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(device_type_, third_party_type_);
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool BindExistAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.BindExistAccountRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string uid = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uid().data(), this->uid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindExistAccountRequest.uid"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_user_name;
        break;
      }

      // optional string user_name = 2;
      case 2: {
        if (tag == 18) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindExistAccountRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindExistAccountRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_device_id;
        break;
      }

      // optional string device_id = 4;
      case 4: {
        if (tag == 34) {
         parse_device_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->device_id().data(), this->device_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindExistAccountRequest.device_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_device_type;
        break;
      }

      // optional .personal.LoginDeviceType device_type = 5;
      case 5: {
        if (tag == 40) {
         parse_device_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_device_type(static_cast< ::personal::LoginDeviceType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_third_party_type;
        break;
      }

      // optional .personal.ThirdPartyType third_party_type = 6;
      case 6: {
        if (tag == 48) {
         parse_third_party_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_third_party_type(static_cast< ::personal::ThirdPartyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.BindExistAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.BindExistAccountRequest)
  return false;
#undef DO_
}

void BindExistAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.BindExistAccountRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.uid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uid(), output);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_name(), output);
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.device_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->device_id(), output);
  }

  // optional .personal.LoginDeviceType device_type = 5;
  if (this->device_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->device_type(), output);
  }

  // optional .personal.ThirdPartyType third_party_type = 6;
  if (this->third_party_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->third_party_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.BindExistAccountRequest)
}

::google::protobuf::uint8* BindExistAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.BindExistAccountRequest)
  // optional string uid = 1;
  if (this->uid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uid().data(), this->uid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.uid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uid(), target);
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_name(), target);
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->device_id().data(), this->device_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindExistAccountRequest.device_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->device_id(), target);
  }

  // optional .personal.LoginDeviceType device_type = 5;
  if (this->device_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->device_type(), target);
  }

  // optional .personal.ThirdPartyType third_party_type = 6;
  if (this->third_party_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->third_party_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.BindExistAccountRequest)
  return target;
}

size_t BindExistAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.BindExistAccountRequest)
  size_t total_size = 0;

  // optional string uid = 1;
  if (this->uid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uid());
  }

  // optional string user_name = 2;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string device_id = 4;
  if (this->device_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->device_id());
  }

  // optional .personal.LoginDeviceType device_type = 5;
  if (this->device_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->device_type());
  }

  // optional .personal.ThirdPartyType third_party_type = 6;
  if (this->third_party_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->third_party_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindExistAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.BindExistAccountRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindExistAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindExistAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.BindExistAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.BindExistAccountRequest)
    UnsafeMergeFrom(*source);
  }
}

void BindExistAccountRequest::MergeFrom(const BindExistAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.BindExistAccountRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindExistAccountRequest::UnsafeMergeFrom(const BindExistAccountRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.uid().size() > 0) {

    uid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uid_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.device_id().size() > 0) {

    device_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_id_);
  }
  if (from.device_type() != 0) {
    set_device_type(from.device_type());
  }
  if (from.third_party_type() != 0) {
    set_third_party_type(from.third_party_type());
  }
}

void BindExistAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.BindExistAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindExistAccountRequest::CopyFrom(const BindExistAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.BindExistAccountRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindExistAccountRequest::IsInitialized() const {

  return true;
}

void BindExistAccountRequest::Swap(BindExistAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindExistAccountRequest::InternalSwap(BindExistAccountRequest* other) {
  uid_.Swap(&other->uid_);
  user_name_.Swap(&other->user_name_);
  password_.Swap(&other->password_);
  device_id_.Swap(&other->device_id_);
  std::swap(device_type_, other->device_type_);
  std::swap(third_party_type_, other->third_party_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindExistAccountRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindExistAccountRequest_descriptor_;
  metadata.reflection = BindExistAccountRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindExistAccountRequest

// optional string uid = 1;
void BindExistAccountRequest::clear_uid() {
  uid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindExistAccountRequest::uid() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.uid)
  return uid_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_uid(const ::std::string& value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.uid)
}
void BindExistAccountRequest::set_uid(const char* value) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.uid)
}
void BindExistAccountRequest::set_uid(const char* value, size_t size) {
  
  uid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.uid)
}
::std::string* BindExistAccountRequest::mutable_uid() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.uid)
  return uid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindExistAccountRequest::release_uid() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.uid)
  
  return uid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_allocated_uid(::std::string* uid) {
  if (uid != NULL) {
    
  } else {
    
  }
  uid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), uid);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.uid)
}

// optional string user_name = 2;
void BindExistAccountRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindExistAccountRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.user_name)
}
void BindExistAccountRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.user_name)
}
void BindExistAccountRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.user_name)
}
::std::string* BindExistAccountRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindExistAccountRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.user_name)
}

// optional string password = 3;
void BindExistAccountRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindExistAccountRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.password)
}
void BindExistAccountRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.password)
}
void BindExistAccountRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.password)
}
::std::string* BindExistAccountRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindExistAccountRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.password)
}

// optional string device_id = 4;
void BindExistAccountRequest::clear_device_id() {
  device_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindExistAccountRequest::device_id() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.device_id)
  return device_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_device_id(const ::std::string& value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.device_id)
}
void BindExistAccountRequest::set_device_id(const char* value) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindExistAccountRequest.device_id)
}
void BindExistAccountRequest::set_device_id(const char* value, size_t size) {
  
  device_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindExistAccountRequest.device_id)
}
::std::string* BindExistAccountRequest::mutable_device_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindExistAccountRequest.device_id)
  return device_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindExistAccountRequest::release_device_id() {
  // @@protoc_insertion_point(field_release:personal.BindExistAccountRequest.device_id)
  
  return device_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindExistAccountRequest::set_allocated_device_id(::std::string* device_id) {
  if (device_id != NULL) {
    
  } else {
    
  }
  device_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_id);
  // @@protoc_insertion_point(field_set_allocated:personal.BindExistAccountRequest.device_id)
}

// optional .personal.LoginDeviceType device_type = 5;
void BindExistAccountRequest::clear_device_type() {
  device_type_ = 0;
}
::personal::LoginDeviceType BindExistAccountRequest::device_type() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.device_type)
  return static_cast< ::personal::LoginDeviceType >(device_type_);
}
void BindExistAccountRequest::set_device_type(::personal::LoginDeviceType value) {
  
  device_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.device_type)
}

// optional .personal.ThirdPartyType third_party_type = 6;
void BindExistAccountRequest::clear_third_party_type() {
  third_party_type_ = 0;
}
::personal::ThirdPartyType BindExistAccountRequest::third_party_type() const {
  // @@protoc_insertion_point(field_get:personal.BindExistAccountRequest.third_party_type)
  return static_cast< ::personal::ThirdPartyType >(third_party_type_);
}
void BindExistAccountRequest::set_third_party_type(::personal::ThirdPartyType value) {
  
  third_party_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindExistAccountRequest.third_party_type)
}

inline const BindExistAccountRequest* BindExistAccountRequest::internal_default_instance() {
  return &BindExistAccountRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BindNewRegistRequest::kUserNameFieldNumber;
const int BindNewRegistRequest::kEmailFieldNumber;
const int BindNewRegistRequest::kPasswordFieldNumber;
const int BindNewRegistRequest::kThirdPartyTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BindNewRegistRequest::BindNewRegistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.BindNewRegistRequest)
}

void BindNewRegistRequest::InitAsDefaultInstance() {
}

BindNewRegistRequest::BindNewRegistRequest(const BindNewRegistRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.BindNewRegistRequest)
}

void BindNewRegistRequest::SharedCtor() {
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_party_type_ = 0;
  _cached_size_ = 0;
}

BindNewRegistRequest::~BindNewRegistRequest() {
  // @@protoc_insertion_point(destructor:personal.BindNewRegistRequest)
  SharedDtor();
}

void BindNewRegistRequest::SharedDtor() {
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BindNewRegistRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BindNewRegistRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BindNewRegistRequest_descriptor_;
}

const BindNewRegistRequest& BindNewRegistRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5flogin_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<BindNewRegistRequest> BindNewRegistRequest_default_instance_;

BindNewRegistRequest* BindNewRegistRequest::New(::google::protobuf::Arena* arena) const {
  BindNewRegistRequest* n = new BindNewRegistRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BindNewRegistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.BindNewRegistRequest)
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  third_party_type_ = 0;
}

bool BindNewRegistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.BindNewRegistRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindNewRegistRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // optional string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindNewRegistRequest.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_password;
        break;
      }

      // optional string password = 3;
      case 3: {
        if (tag == 26) {
         parse_password:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.BindNewRegistRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_third_party_type;
        break;
      }

      // optional .personal.ThirdPartyType third_party_type = 4;
      case 4: {
        if (tag == 32) {
         parse_third_party_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_third_party_type(static_cast< ::personal::ThirdPartyType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.BindNewRegistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.BindNewRegistRequest)
  return false;
#undef DO_
}

void BindNewRegistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.BindNewRegistRequest)
  // optional string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_name(), output);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional .personal.ThirdPartyType third_party_type = 4;
  if (this->third_party_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->third_party_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.BindNewRegistRequest)
}

::google::protobuf::uint8* BindNewRegistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.BindNewRegistRequest)
  // optional string user_name = 1;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_name(), target);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.BindNewRegistRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional .personal.ThirdPartyType third_party_type = 4;
  if (this->third_party_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->third_party_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.BindNewRegistRequest)
  return target;
}

size_t BindNewRegistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.BindNewRegistRequest)
  size_t total_size = 0;

  // optional string user_name = 1;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional .personal.ThirdPartyType third_party_type = 4;
  if (this->third_party_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->third_party_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BindNewRegistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.BindNewRegistRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const BindNewRegistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BindNewRegistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.BindNewRegistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.BindNewRegistRequest)
    UnsafeMergeFrom(*source);
  }
}

void BindNewRegistRequest::MergeFrom(const BindNewRegistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.BindNewRegistRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void BindNewRegistRequest::UnsafeMergeFrom(const BindNewRegistRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.third_party_type() != 0) {
    set_third_party_type(from.third_party_type());
  }
}

void BindNewRegistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.BindNewRegistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BindNewRegistRequest::CopyFrom(const BindNewRegistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.BindNewRegistRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool BindNewRegistRequest::IsInitialized() const {

  return true;
}

void BindNewRegistRequest::Swap(BindNewRegistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BindNewRegistRequest::InternalSwap(BindNewRegistRequest* other) {
  user_name_.Swap(&other->user_name_);
  email_.Swap(&other->email_);
  password_.Swap(&other->password_);
  std::swap(third_party_type_, other->third_party_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BindNewRegistRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BindNewRegistRequest_descriptor_;
  metadata.reflection = BindNewRegistRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BindNewRegistRequest

// optional string user_name = 1;
void BindNewRegistRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindNewRegistRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.user_name)
}
void BindNewRegistRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.user_name)
}
void BindNewRegistRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.user_name)
}
::std::string* BindNewRegistRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindNewRegistRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.user_name)
}

// optional string email = 2;
void BindNewRegistRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindNewRegistRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.email)
}
void BindNewRegistRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.email)
}
void BindNewRegistRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.email)
}
::std::string* BindNewRegistRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindNewRegistRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.email)
}

// optional string password = 3;
void BindNewRegistRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& BindNewRegistRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.password)
}
void BindNewRegistRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.BindNewRegistRequest.password)
}
void BindNewRegistRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.BindNewRegistRequest.password)
}
::std::string* BindNewRegistRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.BindNewRegistRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* BindNewRegistRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.BindNewRegistRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void BindNewRegistRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.BindNewRegistRequest.password)
}

// optional .personal.ThirdPartyType third_party_type = 4;
void BindNewRegistRequest::clear_third_party_type() {
  third_party_type_ = 0;
}
::personal::ThirdPartyType BindNewRegistRequest::third_party_type() const {
  // @@protoc_insertion_point(field_get:personal.BindNewRegistRequest.third_party_type)
  return static_cast< ::personal::ThirdPartyType >(third_party_type_);
}
void BindNewRegistRequest::set_third_party_type(::personal::ThirdPartyType value) {
  
  third_party_type_ = value;
  // @@protoc_insertion_point(field_set:personal.BindNewRegistRequest.third_party_type)
}

inline const BindNewRegistRequest* BindNewRegistRequest::internal_default_instance() {
  return &BindNewRegistRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)
