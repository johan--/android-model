// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_personInfo.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "personalCenter/msg_personInfo.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace personal {

namespace {

const ::google::protobuf::Descriptor* UserRolesListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRolesListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRolesListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UserRolesListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UserRolesListResponse_RolesEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* EducationLevelListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EducationLevelListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* EducationLevelListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EducationLevelListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* EducationLevelListResponse_EducationLevelsEntry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* SubjectListRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubjectListRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubjectListResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubjectListResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* SubjectMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SubjectMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyInfoResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyInfoUpdateRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyInfoUpdateRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyInfoUpdateResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyInfoUpdateResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoNickName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoNickName_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoRealName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoRealName_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoIdNumber_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoIdNumber_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoSex_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoSex_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoBirthday_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoBirthday_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoUserRoles_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoUserRoles_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoWorkUnit_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoWorkUnit_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoEducationLevel_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoEducationLevel_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoGraduatedSchool_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoGraduatedSchool_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoAward_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoAward_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoSubject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoSubject_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoInterestSubject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoInterestSubject_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoEmail_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoEmail_reflection_ = NULL;
const ::google::protobuf::Descriptor* InfoAvatar_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InfoAvatar_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_personalCenter_2fmsg_5fpersonInfo_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_personalCenter_2fmsg_5fpersonInfo_2eproto() {
  protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "personalCenter/msg_personInfo.proto");
  GOOGLE_CHECK(file != NULL);
  UserRolesListRequest_descriptor_ = file->message_type(0);
  static const int UserRolesListRequest_offsets_[1] = {
  };
  UserRolesListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserRolesListRequest_descriptor_,
      UserRolesListRequest::internal_default_instance(),
      UserRolesListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserRolesListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRolesListRequest, _internal_metadata_));
  UserRolesListResponse_descriptor_ = file->message_type(1);
  static const int UserRolesListResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRolesListResponse, roles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRolesListResponse, list_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRolesListResponse, error_),
  };
  UserRolesListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UserRolesListResponse_descriptor_,
      UserRolesListResponse::internal_default_instance(),
      UserRolesListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UserRolesListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UserRolesListResponse, _internal_metadata_));
  UserRolesListResponse_RolesEntry_descriptor_ = UserRolesListResponse_descriptor_->nested_type(0);
  EducationLevelListRequest_descriptor_ = file->message_type(2);
  static const int EducationLevelListRequest_offsets_[1] = {
  };
  EducationLevelListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EducationLevelListRequest_descriptor_,
      EducationLevelListRequest::internal_default_instance(),
      EducationLevelListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(EducationLevelListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EducationLevelListRequest, _internal_metadata_));
  EducationLevelListResponse_descriptor_ = file->message_type(3);
  static const int EducationLevelListResponse_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EducationLevelListResponse, educationlevels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EducationLevelListResponse, list_version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EducationLevelListResponse, error_),
  };
  EducationLevelListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      EducationLevelListResponse_descriptor_,
      EducationLevelListResponse::internal_default_instance(),
      EducationLevelListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(EducationLevelListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EducationLevelListResponse, _internal_metadata_));
  EducationLevelListResponse_EducationLevelsEntry_descriptor_ = EducationLevelListResponse_descriptor_->nested_type(0);
  SubjectListRequest_descriptor_ = file->message_type(4);
  static const int SubjectListRequest_offsets_[1] = {
  };
  SubjectListRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubjectListRequest_descriptor_,
      SubjectListRequest::internal_default_instance(),
      SubjectListRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubjectListRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectListRequest, _internal_metadata_));
  SubjectListResponse_descriptor_ = file->message_type(5);
  static const int SubjectListResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectListResponse, subject_list_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectListResponse, error_),
  };
  SubjectListResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubjectListResponse_descriptor_,
      SubjectListResponse::internal_default_instance(),
      SubjectListResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubjectListResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectListResponse, _internal_metadata_));
  SubjectMessage_descriptor_ = file->message_type(6);
  static const int SubjectMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectMessage, subject_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectMessage, sub_subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectMessage, has_sub_subject_),
  };
  SubjectMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SubjectMessage_descriptor_,
      SubjectMessage::internal_default_instance(),
      SubjectMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(SubjectMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SubjectMessage, _internal_metadata_));
  MyInfoRequest_descriptor_ = file->message_type(7);
  static const int MyInfoRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoRequest, user_id_),
  };
  MyInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyInfoRequest_descriptor_,
      MyInfoRequest::internal_default_instance(),
      MyInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoRequest, _internal_metadata_));
  MyInfoResponse_descriptor_ = file->message_type(8);
  static const int MyInfoResponse_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, nick_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, real_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, id_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, sex_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, birthday_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, user_roles_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, workunit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, educationlevel_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, graduated_school_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, award_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, interest_subject_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, avatar_url_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, error_),
  };
  MyInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyInfoResponse_descriptor_,
      MyInfoResponse::internal_default_instance(),
      MyInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoResponse, _internal_metadata_));
  MyInfoUpdateRequest_descriptor_ = file->message_type(9);
  static const int MyInfoUpdateRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoUpdateRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoUpdateRequest, field_),
  };
  MyInfoUpdateRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyInfoUpdateRequest_descriptor_,
      MyInfoUpdateRequest::internal_default_instance(),
      MyInfoUpdateRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyInfoUpdateRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoUpdateRequest, _internal_metadata_));
  MyInfoUpdateResponse_descriptor_ = file->message_type(10);
  static const int MyInfoUpdateResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoUpdateResponse, error_),
  };
  MyInfoUpdateResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyInfoUpdateResponse_descriptor_,
      MyInfoUpdateResponse::internal_default_instance(),
      MyInfoUpdateResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyInfoUpdateResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyInfoUpdateResponse, _internal_metadata_));
  InfoNickName_descriptor_ = file->message_type(11);
  static const int InfoNickName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoNickName, nick_name_),
  };
  InfoNickName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoNickName_descriptor_,
      InfoNickName::internal_default_instance(),
      InfoNickName_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoNickName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoNickName, _internal_metadata_));
  InfoRealName_descriptor_ = file->message_type(12);
  static const int InfoRealName_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoRealName, real_name_),
  };
  InfoRealName_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoRealName_descriptor_,
      InfoRealName::internal_default_instance(),
      InfoRealName_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoRealName),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoRealName, _internal_metadata_));
  InfoIdNumber_descriptor_ = file->message_type(13);
  static const int InfoIdNumber_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoIdNumber, id_number_),
  };
  InfoIdNumber_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoIdNumber_descriptor_,
      InfoIdNumber::internal_default_instance(),
      InfoIdNumber_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoIdNumber),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoIdNumber, _internal_metadata_));
  InfoSex_descriptor_ = file->message_type(14);
  static const int InfoSex_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoSex, sex_),
  };
  InfoSex_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoSex_descriptor_,
      InfoSex::internal_default_instance(),
      InfoSex_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoSex),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoSex, _internal_metadata_));
  InfoBirthday_descriptor_ = file->message_type(15);
  static const int InfoBirthday_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoBirthday, birthday_),
  };
  InfoBirthday_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoBirthday_descriptor_,
      InfoBirthday::internal_default_instance(),
      InfoBirthday_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoBirthday),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoBirthday, _internal_metadata_));
  InfoUserRoles_descriptor_ = file->message_type(16);
  static const int InfoUserRoles_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoUserRoles, user_roles_),
  };
  InfoUserRoles_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoUserRoles_descriptor_,
      InfoUserRoles::internal_default_instance(),
      InfoUserRoles_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoUserRoles),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoUserRoles, _internal_metadata_));
  InfoWorkUnit_descriptor_ = file->message_type(17);
  static const int InfoWorkUnit_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoWorkUnit, workunit_),
  };
  InfoWorkUnit_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoWorkUnit_descriptor_,
      InfoWorkUnit::internal_default_instance(),
      InfoWorkUnit_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoWorkUnit),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoWorkUnit, _internal_metadata_));
  InfoEducationLevel_descriptor_ = file->message_type(18);
  static const int InfoEducationLevel_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEducationLevel, educationlevel_),
  };
  InfoEducationLevel_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoEducationLevel_descriptor_,
      InfoEducationLevel::internal_default_instance(),
      InfoEducationLevel_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoEducationLevel),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEducationLevel, _internal_metadata_));
  InfoGraduatedSchool_descriptor_ = file->message_type(19);
  static const int InfoGraduatedSchool_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoGraduatedSchool, graduated_school_),
  };
  InfoGraduatedSchool_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoGraduatedSchool_descriptor_,
      InfoGraduatedSchool::internal_default_instance(),
      InfoGraduatedSchool_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoGraduatedSchool),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoGraduatedSchool, _internal_metadata_));
  InfoAward_descriptor_ = file->message_type(20);
  static const int InfoAward_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoAward, award_),
  };
  InfoAward_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoAward_descriptor_,
      InfoAward::internal_default_instance(),
      InfoAward_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoAward),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoAward, _internal_metadata_));
  InfoSubject_descriptor_ = file->message_type(21);
  static const int InfoSubject_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoSubject, subject_),
  };
  InfoSubject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoSubject_descriptor_,
      InfoSubject::internal_default_instance(),
      InfoSubject_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoSubject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoSubject, _internal_metadata_));
  InfoInterestSubject_descriptor_ = file->message_type(22);
  static const int InfoInterestSubject_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoInterestSubject, interest_subject_),
  };
  InfoInterestSubject_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoInterestSubject_descriptor_,
      InfoInterestSubject::internal_default_instance(),
      InfoInterestSubject_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoInterestSubject),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoInterestSubject, _internal_metadata_));
  InfoEmail_descriptor_ = file->message_type(23);
  static const int InfoEmail_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEmail, email_),
  };
  InfoEmail_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoEmail_descriptor_,
      InfoEmail::internal_default_instance(),
      InfoEmail_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoEmail),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoEmail, _internal_metadata_));
  InfoAvatar_descriptor_ = file->message_type(24);
  static const int InfoAvatar_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoAvatar, avatar_url_),
  };
  InfoAvatar_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InfoAvatar_descriptor_,
      InfoAvatar::internal_default_instance(),
      InfoAvatar_offsets_,
      -1,
      -1,
      -1,
      sizeof(InfoAvatar),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InfoAvatar, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_personalCenter_2fmsg_5fpersonInfo_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserRolesListRequest_descriptor_, UserRolesListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UserRolesListResponse_descriptor_, UserRolesListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        UserRolesListResponse_RolesEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                UserRolesListResponse_RolesEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EducationLevelListRequest_descriptor_, EducationLevelListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      EducationLevelListResponse_descriptor_, EducationLevelListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
        EducationLevelListResponse_EducationLevelsEntry_descriptor_,
        ::google::protobuf::internal::MapEntry<
            ::std::string,
            ::std::string,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
            0>::CreateDefaultInstance(
                EducationLevelListResponse_EducationLevelsEntry_descriptor_));
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubjectListRequest_descriptor_, SubjectListRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubjectListResponse_descriptor_, SubjectListResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SubjectMessage_descriptor_, SubjectMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyInfoRequest_descriptor_, MyInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyInfoResponse_descriptor_, MyInfoResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyInfoUpdateRequest_descriptor_, MyInfoUpdateRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyInfoUpdateResponse_descriptor_, MyInfoUpdateResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoNickName_descriptor_, InfoNickName::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoRealName_descriptor_, InfoRealName::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoIdNumber_descriptor_, InfoIdNumber::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoSex_descriptor_, InfoSex::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoBirthday_descriptor_, InfoBirthday::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoUserRoles_descriptor_, InfoUserRoles::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoWorkUnit_descriptor_, InfoWorkUnit::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoEducationLevel_descriptor_, InfoEducationLevel::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoGraduatedSchool_descriptor_, InfoGraduatedSchool::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoAward_descriptor_, InfoAward::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoSubject_descriptor_, InfoSubject::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoInterestSubject_descriptor_, InfoInterestSubject::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoEmail_descriptor_, InfoEmail::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InfoAvatar_descriptor_, InfoAvatar::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_personalCenter_2fmsg_5fpersonInfo_2eproto() {
  UserRolesListRequest_default_instance_.Shutdown();
  delete UserRolesListRequest_reflection_;
  UserRolesListResponse_default_instance_.Shutdown();
  delete UserRolesListResponse_reflection_;
  EducationLevelListRequest_default_instance_.Shutdown();
  delete EducationLevelListRequest_reflection_;
  EducationLevelListResponse_default_instance_.Shutdown();
  delete EducationLevelListResponse_reflection_;
  SubjectListRequest_default_instance_.Shutdown();
  delete SubjectListRequest_reflection_;
  SubjectListResponse_default_instance_.Shutdown();
  delete SubjectListResponse_reflection_;
  SubjectMessage_default_instance_.Shutdown();
  delete SubjectMessage_reflection_;
  MyInfoRequest_default_instance_.Shutdown();
  delete MyInfoRequest_reflection_;
  MyInfoResponse_default_instance_.Shutdown();
  delete MyInfoResponse_reflection_;
  MyInfoUpdateRequest_default_instance_.Shutdown();
  delete MyInfoUpdateRequest_reflection_;
  MyInfoUpdateResponse_default_instance_.Shutdown();
  delete MyInfoUpdateResponse_reflection_;
  InfoNickName_default_instance_.Shutdown();
  delete InfoNickName_reflection_;
  InfoRealName_default_instance_.Shutdown();
  delete InfoRealName_reflection_;
  InfoIdNumber_default_instance_.Shutdown();
  delete InfoIdNumber_reflection_;
  InfoSex_default_instance_.Shutdown();
  delete InfoSex_reflection_;
  InfoBirthday_default_instance_.Shutdown();
  delete InfoBirthday_reflection_;
  InfoUserRoles_default_instance_.Shutdown();
  delete InfoUserRoles_reflection_;
  InfoWorkUnit_default_instance_.Shutdown();
  delete InfoWorkUnit_reflection_;
  InfoEducationLevel_default_instance_.Shutdown();
  delete InfoEducationLevel_reflection_;
  InfoGraduatedSchool_default_instance_.Shutdown();
  delete InfoGraduatedSchool_reflection_;
  InfoAward_default_instance_.Shutdown();
  delete InfoAward_reflection_;
  InfoSubject_default_instance_.Shutdown();
  delete InfoSubject_reflection_;
  InfoInterestSubject_default_instance_.Shutdown();
  delete InfoInterestSubject_reflection_;
  InfoEmail_default_instance_.Shutdown();
  delete InfoEmail_reflection_;
  InfoAvatar_default_instance_.Shutdown();
  delete InfoAvatar_reflection_;
}

void protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  UserRolesListRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UserRolesListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EducationLevelListRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  EducationLevelListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubjectListRequest_default_instance_.DefaultConstruct();
  SubjectListResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  SubjectMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyInfoRequest_default_instance_.DefaultConstruct();
  MyInfoResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyInfoUpdateRequest_default_instance_.DefaultConstruct();
  MyInfoUpdateResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoNickName_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoRealName_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoIdNumber_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoSex_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoBirthday_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoUserRoles_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoWorkUnit_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoEducationLevel_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoGraduatedSchool_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoAward_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoSubject_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoInterestSubject_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoEmail_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  InfoAvatar_default_instance_.DefaultConstruct();
  UserRolesListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UserRolesListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  EducationLevelListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  EducationLevelListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubjectListRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubjectListResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  SubjectMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyInfoUpdateRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyInfoUpdateResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoNickName_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoRealName_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoIdNumber_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoSex_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoBirthday_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoUserRoles_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoWorkUnit_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoEducationLevel_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoGraduatedSchool_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoAward_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoSubject_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoInterestSubject_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoEmail_default_instance_.get_mutable()->InitAsDefaultInstance();
  InfoAvatar_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto_once_);
void protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto_once_,
                 &protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto_impl);
}
void protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n#personalCenter/msg_personInfo.proto\022\010p"
    "ersonal\032\031google/protobuf/any.proto\032\032grpc"
    "Common/msg_error.proto\"\026\n\024UserRolesListR"
    "equest\"\274\001\n\025UserRolesListResponse\0229\n\005role"
    "s\030\001 \003(\0132*.personal.UserRolesListResponse"
    ".RolesEntry\022\024\n\014list_version\030\002 \001(\t\022$\n\005err"
    "or\030\003 \001(\0132\025.grpcCommon.GrpcError\032,\n\nRoles"
    "Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\033\n"
    "\031EducationLevelListRequest\"\344\001\n\032Education"
    "LevelListResponse\022R\n\017educationLevels\030\001 \003"
    "(\01329.personal.EducationLevelListResponse"
    ".EducationLevelsEntry\022\024\n\014list_version\030\002 "
    "\001(\t\022$\n\005error\030\003 \001(\0132\025.grpcCommon.GrpcErro"
    "r\0326\n\024EducationLevelsEntry\022\013\n\003key\030\001 \001(\t\022\r"
    "\n\005value\030\002 \001(\t:\0028\001\"\024\n\022SubjectListRequest\""
    "k\n\023SubjectListResponse\022.\n\014subject_list\030\001"
    " \001(\0132\030.personal.SubjectMessage\022$\n\005error\030"
    "\002 \001(\0132\025.grpcCommon.GrpcError\"o\n\016SubjectM"
    "essage\022\025\n\rsubject_title\030\001 \001(\t\022-\n\013sub_sub"
    "ject\030\002 \003(\0132\030.personal.SubjectMessage\022\027\n\017"
    "has_sub_subject\030\003 \001(\010\" \n\rMyInfoRequest\022\017"
    "\n\007user_id\030\001 \001(\t\"\232\005\n\016MyInfoResponse\022)\n\tni"
    "ck_name\030\001 \001(\0132\026.personal.InfoNickName\022)\n"
    "\treal_name\030\002 \001(\0132\026.personal.InfoRealName"
    "\022)\n\tid_number\030\003 \001(\0132\026.personal.InfoIdNum"
    "ber\022\036\n\003sex\030\004 \001(\0132\021.personal.InfoSex\022(\n\010b"
    "irthday\030\005 \001(\0132\026.personal.InfoBirthday\022+\n"
    "\nuser_roles\030\006 \001(\0132\027.personal.InfoUserRol"
    "es\022(\n\010workUnit\030\007 \001(\0132\026.personal.InfoWork"
    "Unit\0224\n\016educationLevel\030\010 \001(\0132\034.personal."
    "InfoEducationLevel\0227\n\020graduated_school\030\t"
    " \001(\0132\035.personal.InfoGraduatedSchool\022\"\n\005a"
    "ward\030\n \001(\0132\023.personal.InfoAward\022&\n\007subje"
    "ct\030\013 \001(\0132\025.personal.InfoSubject\0227\n\020inter"
    "est_subject\030\014 \001(\0132\035.personal.InfoInteres"
    "tSubject\022\"\n\005email\030\r \001(\0132\023.personal.InfoE"
    "mail\022(\n\navatar_url\030\016 \001(\0132\024.personal.Info"
    "Avatar\022$\n\005error\030\017 \001(\0132\025.grpcCommon.GrpcE"
    "rror\"K\n\023MyInfoUpdateRequest\022\017\n\007user_id\030\001"
    " \001(\t\022#\n\005field\030\002 \003(\0132\024.google.protobuf.An"
    "y\"<\n\024MyInfoUpdateResponse\022$\n\005error\030\001 \001(\013"
    "2\025.grpcCommon.GrpcError\"!\n\014InfoNickName\022"
    "\021\n\tnick_name\030\001 \001(\t\"!\n\014InfoRealName\022\021\n\tre"
    "al_name\030\001 \001(\t\"!\n\014InfoIdNumber\022\021\n\tid_numb"
    "er\030\001 \001(\t\"\026\n\007InfoSex\022\013\n\003sex\030\001 \001(\t\" \n\014Info"
    "Birthday\022\020\n\010birthday\030\001 \001(\t\"#\n\rInfoUserRo"
    "les\022\022\n\nuser_roles\030\001 \001(\t\" \n\014InfoWorkUnit\022"
    "\020\n\010workUnit\030\001 \001(\t\",\n\022InfoEducationLevel\022"
    "\026\n\016educationLevel\030\001 \001(\t\"/\n\023InfoGraduated"
    "School\022\030\n\020graduated_school\030\001 \001(\t\"\032\n\tInfo"
    "Award\022\r\n\005award\030\001 \001(\t\"\036\n\013InfoSubject\022\017\n\007s"
    "ubject\030\001 \001(\t\"/\n\023InfoInterestSubject\022\030\n\020i"
    "nterest_subject\030\001 \001(\t\"\032\n\tInfoEmail\022\r\n\005em"
    "ail\030\001 \001(\t\" \n\nInfoAvatar\022\022\n\navatar_url\030\001 "
    "\001(\tB\037\n\024com.wanfang.personalP\001\242\002\004WFPRb\006pr"
    "oto3", 2204);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "personalCenter/msg_personInfo.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_personalCenter_2fmsg_5fpersonInfo_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto_once_);
void protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto_once_,
                 &protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_personalCenter_2fmsg_5fpersonInfo_2eproto {
  StaticDescriptorInitializer_personalCenter_2fmsg_5fpersonInfo_2eproto() {
    protobuf_AddDesc_personalCenter_2fmsg_5fpersonInfo_2eproto();
  }
} static_descriptor_initializer_personalCenter_2fmsg_5fpersonInfo_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRolesListRequest::UserRolesListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.UserRolesListRequest)
}

void UserRolesListRequest::InitAsDefaultInstance() {
}

UserRolesListRequest::UserRolesListRequest(const UserRolesListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.UserRolesListRequest)
}

void UserRolesListRequest::SharedCtor() {
  _cached_size_ = 0;
}

UserRolesListRequest::~UserRolesListRequest() {
  // @@protoc_insertion_point(destructor:personal.UserRolesListRequest)
  SharedDtor();
}

void UserRolesListRequest::SharedDtor() {
}

void UserRolesListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRolesListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRolesListRequest_descriptor_;
}

const UserRolesListRequest& UserRolesListRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserRolesListRequest> UserRolesListRequest_default_instance_;

UserRolesListRequest* UserRolesListRequest::New(::google::protobuf::Arena* arena) const {
  UserRolesListRequest* n = new UserRolesListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRolesListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.UserRolesListRequest)
}

bool UserRolesListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.UserRolesListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.UserRolesListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.UserRolesListRequest)
  return false;
#undef DO_
}

void UserRolesListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.UserRolesListRequest)
  // @@protoc_insertion_point(serialize_end:personal.UserRolesListRequest)
}

::google::protobuf::uint8* UserRolesListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.UserRolesListRequest)
  // @@protoc_insertion_point(serialize_to_array_end:personal.UserRolesListRequest)
  return target;
}

size_t UserRolesListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.UserRolesListRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRolesListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.UserRolesListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserRolesListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRolesListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.UserRolesListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.UserRolesListRequest)
    UnsafeMergeFrom(*source);
  }
}

void UserRolesListRequest::MergeFrom(const UserRolesListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.UserRolesListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserRolesListRequest::UnsafeMergeFrom(const UserRolesListRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void UserRolesListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.UserRolesListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRolesListRequest::CopyFrom(const UserRolesListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.UserRolesListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserRolesListRequest::IsInitialized() const {

  return true;
}

void UserRolesListRequest::Swap(UserRolesListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRolesListRequest::InternalSwap(UserRolesListRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRolesListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRolesListRequest_descriptor_;
  metadata.reflection = UserRolesListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRolesListRequest

inline const UserRolesListRequest* UserRolesListRequest::internal_default_instance() {
  return &UserRolesListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRolesListResponse::kRolesFieldNumber;
const int UserRolesListResponse::kListVersionFieldNumber;
const int UserRolesListResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRolesListResponse::UserRolesListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.UserRolesListResponse)
}

void UserRolesListResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

UserRolesListResponse::UserRolesListResponse(const UserRolesListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.UserRolesListResponse)
}

void UserRolesListResponse::SharedCtor() {
  roles_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  roles_.SetEntryDescriptor(
      &::personal::UserRolesListResponse_RolesEntry_descriptor_);
  list_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

UserRolesListResponse::~UserRolesListResponse() {
  // @@protoc_insertion_point(destructor:personal.UserRolesListResponse)
  SharedDtor();
}

void UserRolesListResponse::SharedDtor() {
  list_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &UserRolesListResponse_default_instance_.get()) {
    delete error_;
  }
}

void UserRolesListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UserRolesListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UserRolesListResponse_descriptor_;
}

const UserRolesListResponse& UserRolesListResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UserRolesListResponse> UserRolesListResponse_default_instance_;

UserRolesListResponse* UserRolesListResponse::New(::google::protobuf::Arena* arena) const {
  UserRolesListResponse* n = new UserRolesListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UserRolesListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.UserRolesListResponse)
  list_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  roles_.Clear();
}

bool UserRolesListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.UserRolesListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> roles = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_roles:
          UserRolesListResponse_RolesEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&roles_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UserRolesListResponse.RolesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UserRolesListResponse.RolesEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_roles;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_list_version;
        break;
      }

      // optional string list_version = 2;
      case 2: {
        if (tag == 18) {
         parse_list_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list_version().data(), this->list_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UserRolesListResponse.list_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.UserRolesListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.UserRolesListResponse)
  return false;
#undef DO_
}

void UserRolesListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.UserRolesListResponse)
  // map<string, string> roles = 1;
  if (!this->roles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.UserRolesListResponse.RolesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.UserRolesListResponse.RolesEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->roles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->roles().begin();
          it != this->roles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UserRolesListResponse_RolesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<UserRolesListResponse_RolesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->roles().begin();
          it != this->roles().end(); ++it) {
        entry.reset(roles_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_version().data(), this->list_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UserRolesListResponse.list_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list_version(), output);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.UserRolesListResponse)
}

::google::protobuf::uint8* UserRolesListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.UserRolesListResponse)
  // map<string, string> roles = 1;
  if (!this->roles().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.UserRolesListResponse.RolesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.UserRolesListResponse.RolesEntry.value");
      }
    };

    if (deterministic &&
        this->roles().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->roles().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->roles().begin();
          it != this->roles().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<UserRolesListResponse_RolesEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(roles_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<UserRolesListResponse_RolesEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->roles().begin();
          it != this->roles().end(); ++it) {
        entry.reset(roles_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_version().data(), this->list_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UserRolesListResponse.list_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list_version(), target);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.UserRolesListResponse)
  return target;
}

size_t UserRolesListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.UserRolesListResponse)
  size_t total_size = 0;

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list_version());
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // map<string, string> roles = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->roles_size());
  {
    ::google::protobuf::scoped_ptr<UserRolesListResponse_RolesEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->roles().begin();
        it != this->roles().end(); ++it) {
      entry.reset(roles_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UserRolesListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.UserRolesListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UserRolesListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRolesListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.UserRolesListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.UserRolesListResponse)
    UnsafeMergeFrom(*source);
  }
}

void UserRolesListResponse::MergeFrom(const UserRolesListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.UserRolesListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UserRolesListResponse::UnsafeMergeFrom(const UserRolesListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  roles_.MergeFrom(from.roles_);
  if (from.list_version().size() > 0) {

    list_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_version_);
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void UserRolesListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.UserRolesListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRolesListResponse::CopyFrom(const UserRolesListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.UserRolesListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UserRolesListResponse::IsInitialized() const {

  return true;
}

void UserRolesListResponse::Swap(UserRolesListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRolesListResponse::InternalSwap(UserRolesListResponse* other) {
  roles_.Swap(&other->roles_);
  list_version_.Swap(&other->list_version_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UserRolesListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UserRolesListResponse_descriptor_;
  metadata.reflection = UserRolesListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UserRolesListResponse

// map<string, string> roles = 1;
int UserRolesListResponse::roles_size() const {
  return roles_.size();
}
void UserRolesListResponse::clear_roles() {
  roles_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
UserRolesListResponse::roles() const {
  // @@protoc_insertion_point(field_map:personal.UserRolesListResponse.roles)
  return roles_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
UserRolesListResponse::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_map:personal.UserRolesListResponse.roles)
  return roles_.MutableMap();
}

// optional string list_version = 2;
void UserRolesListResponse::clear_list_version() {
  list_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UserRolesListResponse::list_version() const {
  // @@protoc_insertion_point(field_get:personal.UserRolesListResponse.list_version)
  return list_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRolesListResponse::set_list_version(const ::std::string& value) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.UserRolesListResponse.list_version)
}
void UserRolesListResponse::set_list_version(const char* value) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.UserRolesListResponse.list_version)
}
void UserRolesListResponse::set_list_version(const char* value, size_t size) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.UserRolesListResponse.list_version)
}
::std::string* UserRolesListResponse::mutable_list_version() {
  
  // @@protoc_insertion_point(field_mutable:personal.UserRolesListResponse.list_version)
  return list_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UserRolesListResponse::release_list_version() {
  // @@protoc_insertion_point(field_release:personal.UserRolesListResponse.list_version)
  
  return list_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UserRolesListResponse::set_allocated_list_version(::std::string* list_version) {
  if (list_version != NULL) {
    
  } else {
    
  }
  list_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), list_version);
  // @@protoc_insertion_point(field_set_allocated:personal.UserRolesListResponse.list_version)
}

// optional .grpcCommon.GrpcError error = 3;
bool UserRolesListResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void UserRolesListResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& UserRolesListResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.UserRolesListResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* UserRolesListResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.UserRolesListResponse.error)
  return error_;
}
::grpcCommon::GrpcError* UserRolesListResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.UserRolesListResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void UserRolesListResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.UserRolesListResponse.error)
}

inline const UserRolesListResponse* UserRolesListResponse::internal_default_instance() {
  return &UserRolesListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EducationLevelListRequest::EducationLevelListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.EducationLevelListRequest)
}

void EducationLevelListRequest::InitAsDefaultInstance() {
}

EducationLevelListRequest::EducationLevelListRequest(const EducationLevelListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.EducationLevelListRequest)
}

void EducationLevelListRequest::SharedCtor() {
  _cached_size_ = 0;
}

EducationLevelListRequest::~EducationLevelListRequest() {
  // @@protoc_insertion_point(destructor:personal.EducationLevelListRequest)
  SharedDtor();
}

void EducationLevelListRequest::SharedDtor() {
}

void EducationLevelListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EducationLevelListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EducationLevelListRequest_descriptor_;
}

const EducationLevelListRequest& EducationLevelListRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EducationLevelListRequest> EducationLevelListRequest_default_instance_;

EducationLevelListRequest* EducationLevelListRequest::New(::google::protobuf::Arena* arena) const {
  EducationLevelListRequest* n = new EducationLevelListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EducationLevelListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.EducationLevelListRequest)
}

bool EducationLevelListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.EducationLevelListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.EducationLevelListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.EducationLevelListRequest)
  return false;
#undef DO_
}

void EducationLevelListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.EducationLevelListRequest)
  // @@protoc_insertion_point(serialize_end:personal.EducationLevelListRequest)
}

::google::protobuf::uint8* EducationLevelListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.EducationLevelListRequest)
  // @@protoc_insertion_point(serialize_to_array_end:personal.EducationLevelListRequest)
  return target;
}

size_t EducationLevelListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.EducationLevelListRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EducationLevelListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.EducationLevelListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EducationLevelListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EducationLevelListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.EducationLevelListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.EducationLevelListRequest)
    UnsafeMergeFrom(*source);
  }
}

void EducationLevelListRequest::MergeFrom(const EducationLevelListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.EducationLevelListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EducationLevelListRequest::UnsafeMergeFrom(const EducationLevelListRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void EducationLevelListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.EducationLevelListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EducationLevelListRequest::CopyFrom(const EducationLevelListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.EducationLevelListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EducationLevelListRequest::IsInitialized() const {

  return true;
}

void EducationLevelListRequest::Swap(EducationLevelListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EducationLevelListRequest::InternalSwap(EducationLevelListRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EducationLevelListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EducationLevelListRequest_descriptor_;
  metadata.reflection = EducationLevelListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EducationLevelListRequest

inline const EducationLevelListRequest* EducationLevelListRequest::internal_default_instance() {
  return &EducationLevelListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EducationLevelListResponse::kEducationLevelsFieldNumber;
const int EducationLevelListResponse::kListVersionFieldNumber;
const int EducationLevelListResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EducationLevelListResponse::EducationLevelListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.EducationLevelListResponse)
}

void EducationLevelListResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

EducationLevelListResponse::EducationLevelListResponse(const EducationLevelListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.EducationLevelListResponse)
}

void EducationLevelListResponse::SharedCtor() {
  educationlevels_.SetAssignDescriptorCallback(
      protobuf_AssignDescriptorsOnce);
  educationlevels_.SetEntryDescriptor(
      &::personal::EducationLevelListResponse_EducationLevelsEntry_descriptor_);
  list_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  _cached_size_ = 0;
}

EducationLevelListResponse::~EducationLevelListResponse() {
  // @@protoc_insertion_point(destructor:personal.EducationLevelListResponse)
  SharedDtor();
}

void EducationLevelListResponse::SharedDtor() {
  list_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &EducationLevelListResponse_default_instance_.get()) {
    delete error_;
  }
}

void EducationLevelListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EducationLevelListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EducationLevelListResponse_descriptor_;
}

const EducationLevelListResponse& EducationLevelListResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<EducationLevelListResponse> EducationLevelListResponse_default_instance_;

EducationLevelListResponse* EducationLevelListResponse::New(::google::protobuf::Arena* arena) const {
  EducationLevelListResponse* n = new EducationLevelListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EducationLevelListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.EducationLevelListResponse)
  list_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  educationlevels_.Clear();
}

bool EducationLevelListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.EducationLevelListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> educationLevels = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_educationLevels:
          EducationLevelListResponse_EducationLevelsEntry::Parser< ::google::protobuf::internal::MapField<
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&educationlevels_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.EducationLevelListResponse.EducationLevelsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), parser.value().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.EducationLevelListResponse.EducationLevelsEntry.value"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_educationLevels;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_list_version;
        break;
      }

      // optional string list_version = 2;
      case 2: {
        if (tag == 18) {
         parse_list_version:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_list_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->list_version().data(), this->list_version().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.EducationLevelListResponse.list_version"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 3;
      case 3: {
        if (tag == 26) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.EducationLevelListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.EducationLevelListResponse)
  return false;
#undef DO_
}

void EducationLevelListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.EducationLevelListResponse)
  // map<string, string> educationLevels = 1;
  if (!this->educationlevels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.EducationLevelListResponse.EducationLevelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.EducationLevelListResponse.EducationLevelsEntry.value");
      }
    };

    if (output->IsSerializationDeterminstic() &&
        this->educationlevels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->educationlevels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->educationlevels().begin();
          it != this->educationlevels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<EducationLevelListResponse_EducationLevelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(educationlevels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<EducationLevelListResponse_EducationLevelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->educationlevels().begin();
          it != this->educationlevels().end(); ++it) {
        entry.reset(educationlevels_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_version().data(), this->list_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.EducationLevelListResponse.list_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->list_version(), output);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.EducationLevelListResponse)
}

::google::protobuf::uint8* EducationLevelListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.EducationLevelListResponse)
  // map<string, string> educationLevels = 1;
  if (!this->educationlevels().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.EducationLevelListResponse.EducationLevelsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), p->second.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "personal.EducationLevelListResponse.EducationLevelsEntry.value");
      }
    };

    if (deterministic &&
        this->educationlevels().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->educationlevels().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->educationlevels().begin();
          it != this->educationlevels().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<EducationLevelListResponse_EducationLevelsEntry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(educationlevels_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<EducationLevelListResponse_EducationLevelsEntry> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->educationlevels().begin();
          it != this->educationlevels().end(); ++it) {
        entry.reset(educationlevels_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->list_version().data(), this->list_version().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.EducationLevelListResponse.list_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->list_version(), target);
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.EducationLevelListResponse)
  return target;
}

size_t EducationLevelListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.EducationLevelListResponse)
  size_t total_size = 0;

  // optional string list_version = 2;
  if (this->list_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->list_version());
  }

  // optional .grpcCommon.GrpcError error = 3;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // map<string, string> educationLevels = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->educationlevels_size());
  {
    ::google::protobuf::scoped_ptr<EducationLevelListResponse_EducationLevelsEntry> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->educationlevels().begin();
        it != this->educationlevels().end(); ++it) {
      entry.reset(educationlevels_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EducationLevelListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.EducationLevelListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const EducationLevelListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EducationLevelListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.EducationLevelListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.EducationLevelListResponse)
    UnsafeMergeFrom(*source);
  }
}

void EducationLevelListResponse::MergeFrom(const EducationLevelListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.EducationLevelListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void EducationLevelListResponse::UnsafeMergeFrom(const EducationLevelListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  educationlevels_.MergeFrom(from.educationlevels_);
  if (from.list_version().size() > 0) {

    list_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.list_version_);
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void EducationLevelListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.EducationLevelListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EducationLevelListResponse::CopyFrom(const EducationLevelListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.EducationLevelListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool EducationLevelListResponse::IsInitialized() const {

  return true;
}

void EducationLevelListResponse::Swap(EducationLevelListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EducationLevelListResponse::InternalSwap(EducationLevelListResponse* other) {
  educationlevels_.Swap(&other->educationlevels_);
  list_version_.Swap(&other->list_version_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EducationLevelListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EducationLevelListResponse_descriptor_;
  metadata.reflection = EducationLevelListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EducationLevelListResponse

// map<string, string> educationLevels = 1;
int EducationLevelListResponse::educationlevels_size() const {
  return educationlevels_.size();
}
void EducationLevelListResponse::clear_educationlevels() {
  educationlevels_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::std::string >&
EducationLevelListResponse::educationlevels() const {
  // @@protoc_insertion_point(field_map:personal.EducationLevelListResponse.educationLevels)
  return educationlevels_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::std::string >*
EducationLevelListResponse::mutable_educationlevels() {
  // @@protoc_insertion_point(field_mutable_map:personal.EducationLevelListResponse.educationLevels)
  return educationlevels_.MutableMap();
}

// optional string list_version = 2;
void EducationLevelListResponse::clear_list_version() {
  list_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EducationLevelListResponse::list_version() const {
  // @@protoc_insertion_point(field_get:personal.EducationLevelListResponse.list_version)
  return list_version_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EducationLevelListResponse::set_list_version(const ::std::string& value) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.EducationLevelListResponse.list_version)
}
void EducationLevelListResponse::set_list_version(const char* value) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.EducationLevelListResponse.list_version)
}
void EducationLevelListResponse::set_list_version(const char* value, size_t size) {
  
  list_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.EducationLevelListResponse.list_version)
}
::std::string* EducationLevelListResponse::mutable_list_version() {
  
  // @@protoc_insertion_point(field_mutable:personal.EducationLevelListResponse.list_version)
  return list_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EducationLevelListResponse::release_list_version() {
  // @@protoc_insertion_point(field_release:personal.EducationLevelListResponse.list_version)
  
  return list_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EducationLevelListResponse::set_allocated_list_version(::std::string* list_version) {
  if (list_version != NULL) {
    
  } else {
    
  }
  list_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), list_version);
  // @@protoc_insertion_point(field_set_allocated:personal.EducationLevelListResponse.list_version)
}

// optional .grpcCommon.GrpcError error = 3;
bool EducationLevelListResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void EducationLevelListResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& EducationLevelListResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.EducationLevelListResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* EducationLevelListResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.EducationLevelListResponse.error)
  return error_;
}
::grpcCommon::GrpcError* EducationLevelListResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.EducationLevelListResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void EducationLevelListResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.EducationLevelListResponse.error)
}

inline const EducationLevelListResponse* EducationLevelListResponse::internal_default_instance() {
  return &EducationLevelListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubjectListRequest::SubjectListRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.SubjectListRequest)
}

void SubjectListRequest::InitAsDefaultInstance() {
}

SubjectListRequest::SubjectListRequest(const SubjectListRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.SubjectListRequest)
}

void SubjectListRequest::SharedCtor() {
  _cached_size_ = 0;
}

SubjectListRequest::~SubjectListRequest() {
  // @@protoc_insertion_point(destructor:personal.SubjectListRequest)
  SharedDtor();
}

void SubjectListRequest::SharedDtor() {
}

void SubjectListRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubjectListRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubjectListRequest_descriptor_;
}

const SubjectListRequest& SubjectListRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubjectListRequest> SubjectListRequest_default_instance_;

SubjectListRequest* SubjectListRequest::New(::google::protobuf::Arena* arena) const {
  SubjectListRequest* n = new SubjectListRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubjectListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.SubjectListRequest)
}

bool SubjectListRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.SubjectListRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.SubjectListRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.SubjectListRequest)
  return false;
#undef DO_
}

void SubjectListRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.SubjectListRequest)
  // @@protoc_insertion_point(serialize_end:personal.SubjectListRequest)
}

::google::protobuf::uint8* SubjectListRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.SubjectListRequest)
  // @@protoc_insertion_point(serialize_to_array_end:personal.SubjectListRequest)
  return target;
}

size_t SubjectListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.SubjectListRequest)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubjectListRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.SubjectListRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubjectListRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubjectListRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.SubjectListRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.SubjectListRequest)
    UnsafeMergeFrom(*source);
  }
}

void SubjectListRequest::MergeFrom(const SubjectListRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.SubjectListRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubjectListRequest::UnsafeMergeFrom(const SubjectListRequest& from) {
  GOOGLE_DCHECK(&from != this);
}

void SubjectListRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.SubjectListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubjectListRequest::CopyFrom(const SubjectListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.SubjectListRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubjectListRequest::IsInitialized() const {

  return true;
}

void SubjectListRequest::Swap(SubjectListRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubjectListRequest::InternalSwap(SubjectListRequest* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubjectListRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubjectListRequest_descriptor_;
  metadata.reflection = SubjectListRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubjectListRequest

inline const SubjectListRequest* SubjectListRequest::internal_default_instance() {
  return &SubjectListRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubjectListResponse::kSubjectListFieldNumber;
const int SubjectListResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubjectListResponse::SubjectListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.SubjectListResponse)
}

void SubjectListResponse::InitAsDefaultInstance() {
  subject_list_ = const_cast< ::personal::SubjectMessage*>(
      ::personal::SubjectMessage::internal_default_instance());
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

SubjectListResponse::SubjectListResponse(const SubjectListResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.SubjectListResponse)
}

void SubjectListResponse::SharedCtor() {
  subject_list_ = NULL;
  error_ = NULL;
  _cached_size_ = 0;
}

SubjectListResponse::~SubjectListResponse() {
  // @@protoc_insertion_point(destructor:personal.SubjectListResponse)
  SharedDtor();
}

void SubjectListResponse::SharedDtor() {
  if (this != &SubjectListResponse_default_instance_.get()) {
    delete subject_list_;
    delete error_;
  }
}

void SubjectListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubjectListResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubjectListResponse_descriptor_;
}

const SubjectListResponse& SubjectListResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubjectListResponse> SubjectListResponse_default_instance_;

SubjectListResponse* SubjectListResponse::New(::google::protobuf::Arena* arena) const {
  SubjectListResponse* n = new SubjectListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubjectListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.SubjectListResponse)
  if (GetArenaNoVirtual() == NULL && subject_list_ != NULL) delete subject_list_;
  subject_list_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool SubjectListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.SubjectListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .personal.SubjectMessage subject_list = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subject_list()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.SubjectListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.SubjectListResponse)
  return false;
#undef DO_
}

void SubjectListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.SubjectListResponse)
  // optional .personal.SubjectMessage subject_list = 1;
  if (this->has_subject_list()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->subject_list_, output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.SubjectListResponse)
}

::google::protobuf::uint8* SubjectListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.SubjectListResponse)
  // optional .personal.SubjectMessage subject_list = 1;
  if (this->has_subject_list()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->subject_list_, false, target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.SubjectListResponse)
  return target;
}

size_t SubjectListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.SubjectListResponse)
  size_t total_size = 0;

  // optional .personal.SubjectMessage subject_list = 1;
  if (this->has_subject_list()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subject_list_);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubjectListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.SubjectListResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubjectListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubjectListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.SubjectListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.SubjectListResponse)
    UnsafeMergeFrom(*source);
  }
}

void SubjectListResponse::MergeFrom(const SubjectListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.SubjectListResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubjectListResponse::UnsafeMergeFrom(const SubjectListResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_subject_list()) {
    mutable_subject_list()->::personal::SubjectMessage::MergeFrom(from.subject_list());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void SubjectListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.SubjectListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubjectListResponse::CopyFrom(const SubjectListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.SubjectListResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubjectListResponse::IsInitialized() const {

  return true;
}

void SubjectListResponse::Swap(SubjectListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubjectListResponse::InternalSwap(SubjectListResponse* other) {
  std::swap(subject_list_, other->subject_list_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubjectListResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubjectListResponse_descriptor_;
  metadata.reflection = SubjectListResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubjectListResponse

// optional .personal.SubjectMessage subject_list = 1;
bool SubjectListResponse::has_subject_list() const {
  return this != internal_default_instance() && subject_list_ != NULL;
}
void SubjectListResponse::clear_subject_list() {
  if (GetArenaNoVirtual() == NULL && subject_list_ != NULL) delete subject_list_;
  subject_list_ = NULL;
}
const ::personal::SubjectMessage& SubjectListResponse::subject_list() const {
  // @@protoc_insertion_point(field_get:personal.SubjectListResponse.subject_list)
  return subject_list_ != NULL ? *subject_list_
                         : *::personal::SubjectMessage::internal_default_instance();
}
::personal::SubjectMessage* SubjectListResponse::mutable_subject_list() {
  
  if (subject_list_ == NULL) {
    subject_list_ = new ::personal::SubjectMessage;
  }
  // @@protoc_insertion_point(field_mutable:personal.SubjectListResponse.subject_list)
  return subject_list_;
}
::personal::SubjectMessage* SubjectListResponse::release_subject_list() {
  // @@protoc_insertion_point(field_release:personal.SubjectListResponse.subject_list)
  
  ::personal::SubjectMessage* temp = subject_list_;
  subject_list_ = NULL;
  return temp;
}
void SubjectListResponse::set_allocated_subject_list(::personal::SubjectMessage* subject_list) {
  delete subject_list_;
  subject_list_ = subject_list;
  if (subject_list) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.SubjectListResponse.subject_list)
}

// optional .grpcCommon.GrpcError error = 2;
bool SubjectListResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void SubjectListResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& SubjectListResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.SubjectListResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* SubjectListResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.SubjectListResponse.error)
  return error_;
}
::grpcCommon::GrpcError* SubjectListResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.SubjectListResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void SubjectListResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.SubjectListResponse.error)
}

inline const SubjectListResponse* SubjectListResponse::internal_default_instance() {
  return &SubjectListResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubjectMessage::kSubjectTitleFieldNumber;
const int SubjectMessage::kSubSubjectFieldNumber;
const int SubjectMessage::kHasSubSubjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubjectMessage::SubjectMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.SubjectMessage)
}

void SubjectMessage::InitAsDefaultInstance() {
}

SubjectMessage::SubjectMessage(const SubjectMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.SubjectMessage)
}

void SubjectMessage::SharedCtor() {
  subject_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  has_sub_subject_ = false;
  _cached_size_ = 0;
}

SubjectMessage::~SubjectMessage() {
  // @@protoc_insertion_point(destructor:personal.SubjectMessage)
  SharedDtor();
}

void SubjectMessage::SharedDtor() {
  subject_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubjectMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SubjectMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SubjectMessage_descriptor_;
}

const SubjectMessage& SubjectMessage::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SubjectMessage> SubjectMessage_default_instance_;

SubjectMessage* SubjectMessage::New(::google::protobuf::Arena* arena) const {
  SubjectMessage* n = new SubjectMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SubjectMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.SubjectMessage)
  subject_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  has_sub_subject_ = false;
  sub_subject_.Clear();
}

bool SubjectMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.SubjectMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string subject_title = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject_title().data(), this->subject_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.SubjectMessage.subject_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_sub_subject;
        break;
      }

      // repeated .personal.SubjectMessage sub_subject = 2;
      case 2: {
        if (tag == 18) {
         parse_sub_subject:
          DO_(input->IncrementRecursionDepth());
         parse_loop_sub_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sub_subject()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_sub_subject;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(24)) goto parse_has_sub_subject;
        break;
      }

      // optional bool has_sub_subject = 3;
      case 3: {
        if (tag == 24) {
         parse_has_sub_subject:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_sub_subject_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.SubjectMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.SubjectMessage)
  return false;
#undef DO_
}

void SubjectMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.SubjectMessage)
  // optional string subject_title = 1;
  if (this->subject_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_title().data(), this->subject_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.SubjectMessage.subject_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject_title(), output);
  }

  // repeated .personal.SubjectMessage sub_subject = 2;
  for (unsigned int i = 0, n = this->sub_subject_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->sub_subject(i), output);
  }

  // optional bool has_sub_subject = 3;
  if (this->has_sub_subject() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->has_sub_subject(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.SubjectMessage)
}

::google::protobuf::uint8* SubjectMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.SubjectMessage)
  // optional string subject_title = 1;
  if (this->subject_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject_title().data(), this->subject_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.SubjectMessage.subject_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject_title(), target);
  }

  // repeated .personal.SubjectMessage sub_subject = 2;
  for (unsigned int i = 0, n = this->sub_subject_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->sub_subject(i), false, target);
  }

  // optional bool has_sub_subject = 3;
  if (this->has_sub_subject() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->has_sub_subject(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.SubjectMessage)
  return target;
}

size_t SubjectMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.SubjectMessage)
  size_t total_size = 0;

  // optional string subject_title = 1;
  if (this->subject_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject_title());
  }

  // optional bool has_sub_subject = 3;
  if (this->has_sub_subject() != 0) {
    total_size += 1 + 1;
  }

  // repeated .personal.SubjectMessage sub_subject = 2;
  {
    unsigned int count = this->sub_subject_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->sub_subject(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SubjectMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.SubjectMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SubjectMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubjectMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.SubjectMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.SubjectMessage)
    UnsafeMergeFrom(*source);
  }
}

void SubjectMessage::MergeFrom(const SubjectMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.SubjectMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SubjectMessage::UnsafeMergeFrom(const SubjectMessage& from) {
  GOOGLE_DCHECK(&from != this);
  sub_subject_.MergeFrom(from.sub_subject_);
  if (from.subject_title().size() > 0) {

    subject_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_title_);
  }
  if (from.has_sub_subject() != 0) {
    set_has_sub_subject(from.has_sub_subject());
  }
}

void SubjectMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.SubjectMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubjectMessage::CopyFrom(const SubjectMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.SubjectMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SubjectMessage::IsInitialized() const {

  return true;
}

void SubjectMessage::Swap(SubjectMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubjectMessage::InternalSwap(SubjectMessage* other) {
  subject_title_.Swap(&other->subject_title_);
  sub_subject_.UnsafeArenaSwap(&other->sub_subject_);
  std::swap(has_sub_subject_, other->has_sub_subject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SubjectMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SubjectMessage_descriptor_;
  metadata.reflection = SubjectMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SubjectMessage

// optional string subject_title = 1;
void SubjectMessage::clear_subject_title() {
  subject_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SubjectMessage::subject_title() const {
  // @@protoc_insertion_point(field_get:personal.SubjectMessage.subject_title)
  return subject_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubjectMessage::set_subject_title(const ::std::string& value) {
  
  subject_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.SubjectMessage.subject_title)
}
void SubjectMessage::set_subject_title(const char* value) {
  
  subject_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.SubjectMessage.subject_title)
}
void SubjectMessage::set_subject_title(const char* value, size_t size) {
  
  subject_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.SubjectMessage.subject_title)
}
::std::string* SubjectMessage::mutable_subject_title() {
  
  // @@protoc_insertion_point(field_mutable:personal.SubjectMessage.subject_title)
  return subject_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SubjectMessage::release_subject_title() {
  // @@protoc_insertion_point(field_release:personal.SubjectMessage.subject_title)
  
  return subject_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SubjectMessage::set_allocated_subject_title(::std::string* subject_title) {
  if (subject_title != NULL) {
    
  } else {
    
  }
  subject_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject_title);
  // @@protoc_insertion_point(field_set_allocated:personal.SubjectMessage.subject_title)
}

// repeated .personal.SubjectMessage sub_subject = 2;
int SubjectMessage::sub_subject_size() const {
  return sub_subject_.size();
}
void SubjectMessage::clear_sub_subject() {
  sub_subject_.Clear();
}
const ::personal::SubjectMessage& SubjectMessage::sub_subject(int index) const {
  // @@protoc_insertion_point(field_get:personal.SubjectMessage.sub_subject)
  return sub_subject_.Get(index);
}
::personal::SubjectMessage* SubjectMessage::mutable_sub_subject(int index) {
  // @@protoc_insertion_point(field_mutable:personal.SubjectMessage.sub_subject)
  return sub_subject_.Mutable(index);
}
::personal::SubjectMessage* SubjectMessage::add_sub_subject() {
  // @@protoc_insertion_point(field_add:personal.SubjectMessage.sub_subject)
  return sub_subject_.Add();
}
::google::protobuf::RepeatedPtrField< ::personal::SubjectMessage >*
SubjectMessage::mutable_sub_subject() {
  // @@protoc_insertion_point(field_mutable_list:personal.SubjectMessage.sub_subject)
  return &sub_subject_;
}
const ::google::protobuf::RepeatedPtrField< ::personal::SubjectMessage >&
SubjectMessage::sub_subject() const {
  // @@protoc_insertion_point(field_list:personal.SubjectMessage.sub_subject)
  return sub_subject_;
}

// optional bool has_sub_subject = 3;
void SubjectMessage::clear_has_sub_subject() {
  has_sub_subject_ = false;
}
bool SubjectMessage::has_sub_subject() const {
  // @@protoc_insertion_point(field_get:personal.SubjectMessage.has_sub_subject)
  return has_sub_subject_;
}
void SubjectMessage::set_has_sub_subject(bool value) {
  
  has_sub_subject_ = value;
  // @@protoc_insertion_point(field_set:personal.SubjectMessage.has_sub_subject)
}

inline const SubjectMessage* SubjectMessage::internal_default_instance() {
  return &SubjectMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoRequest::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoRequest::MyInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.MyInfoRequest)
}

void MyInfoRequest::InitAsDefaultInstance() {
}

MyInfoRequest::MyInfoRequest(const MyInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.MyInfoRequest)
}

void MyInfoRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyInfoRequest::~MyInfoRequest() {
  // @@protoc_insertion_point(destructor:personal.MyInfoRequest)
  SharedDtor();
}

void MyInfoRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyInfoRequest_descriptor_;
}

const MyInfoRequest& MyInfoRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyInfoRequest> MyInfoRequest_default_instance_;

MyInfoRequest* MyInfoRequest::New(::google::protobuf::Arena* arena) const {
  MyInfoRequest* n = new MyInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.MyInfoRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.MyInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.MyInfoRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.MyInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.MyInfoRequest)
  return false;
#undef DO_
}

void MyInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.MyInfoRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.MyInfoRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.MyInfoRequest)
}

::google::protobuf::uint8* MyInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.MyInfoRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.MyInfoRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.MyInfoRequest)
  return target;
}

size_t MyInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.MyInfoRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.MyInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.MyInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.MyInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void MyInfoRequest::MergeFrom(const MyInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.MyInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyInfoRequest::UnsafeMergeFrom(const MyInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void MyInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.MyInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoRequest::CopyFrom(const MyInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.MyInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyInfoRequest::IsInitialized() const {

  return true;
}

void MyInfoRequest::Swap(MyInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoRequest::InternalSwap(MyInfoRequest* other) {
  user_id_.Swap(&other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyInfoRequest_descriptor_;
  metadata.reflection = MyInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyInfoRequest

// optional string user_id = 1;
void MyInfoRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyInfoRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.MyInfoRequest.user_id)
}
void MyInfoRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.MyInfoRequest.user_id)
}
void MyInfoRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.MyInfoRequest.user_id)
}
::std::string* MyInfoRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.MyInfoRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyInfoRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.MyInfoRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyInfoRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoRequest.user_id)
}

inline const MyInfoRequest* MyInfoRequest::internal_default_instance() {
  return &MyInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoResponse::kNickNameFieldNumber;
const int MyInfoResponse::kRealNameFieldNumber;
const int MyInfoResponse::kIdNumberFieldNumber;
const int MyInfoResponse::kSexFieldNumber;
const int MyInfoResponse::kBirthdayFieldNumber;
const int MyInfoResponse::kUserRolesFieldNumber;
const int MyInfoResponse::kWorkUnitFieldNumber;
const int MyInfoResponse::kEducationLevelFieldNumber;
const int MyInfoResponse::kGraduatedSchoolFieldNumber;
const int MyInfoResponse::kAwardFieldNumber;
const int MyInfoResponse::kSubjectFieldNumber;
const int MyInfoResponse::kInterestSubjectFieldNumber;
const int MyInfoResponse::kEmailFieldNumber;
const int MyInfoResponse::kAvatarUrlFieldNumber;
const int MyInfoResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoResponse::MyInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.MyInfoResponse)
}

void MyInfoResponse::InitAsDefaultInstance() {
  nick_name_ = const_cast< ::personal::InfoNickName*>(
      ::personal::InfoNickName::internal_default_instance());
  real_name_ = const_cast< ::personal::InfoRealName*>(
      ::personal::InfoRealName::internal_default_instance());
  id_number_ = const_cast< ::personal::InfoIdNumber*>(
      ::personal::InfoIdNumber::internal_default_instance());
  sex_ = const_cast< ::personal::InfoSex*>(
      ::personal::InfoSex::internal_default_instance());
  birthday_ = const_cast< ::personal::InfoBirthday*>(
      ::personal::InfoBirthday::internal_default_instance());
  user_roles_ = const_cast< ::personal::InfoUserRoles*>(
      ::personal::InfoUserRoles::internal_default_instance());
  workunit_ = const_cast< ::personal::InfoWorkUnit*>(
      ::personal::InfoWorkUnit::internal_default_instance());
  educationlevel_ = const_cast< ::personal::InfoEducationLevel*>(
      ::personal::InfoEducationLevel::internal_default_instance());
  graduated_school_ = const_cast< ::personal::InfoGraduatedSchool*>(
      ::personal::InfoGraduatedSchool::internal_default_instance());
  award_ = const_cast< ::personal::InfoAward*>(
      ::personal::InfoAward::internal_default_instance());
  subject_ = const_cast< ::personal::InfoSubject*>(
      ::personal::InfoSubject::internal_default_instance());
  interest_subject_ = const_cast< ::personal::InfoInterestSubject*>(
      ::personal::InfoInterestSubject::internal_default_instance());
  email_ = const_cast< ::personal::InfoEmail*>(
      ::personal::InfoEmail::internal_default_instance());
  avatar_url_ = const_cast< ::personal::InfoAvatar*>(
      ::personal::InfoAvatar::internal_default_instance());
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

MyInfoResponse::MyInfoResponse(const MyInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.MyInfoResponse)
}

void MyInfoResponse::SharedCtor() {
  nick_name_ = NULL;
  real_name_ = NULL;
  id_number_ = NULL;
  sex_ = NULL;
  birthday_ = NULL;
  user_roles_ = NULL;
  workunit_ = NULL;
  educationlevel_ = NULL;
  graduated_school_ = NULL;
  award_ = NULL;
  subject_ = NULL;
  interest_subject_ = NULL;
  email_ = NULL;
  avatar_url_ = NULL;
  error_ = NULL;
  _cached_size_ = 0;
}

MyInfoResponse::~MyInfoResponse() {
  // @@protoc_insertion_point(destructor:personal.MyInfoResponse)
  SharedDtor();
}

void MyInfoResponse::SharedDtor() {
  if (this != &MyInfoResponse_default_instance_.get()) {
    delete nick_name_;
    delete real_name_;
    delete id_number_;
    delete sex_;
    delete birthday_;
    delete user_roles_;
    delete workunit_;
    delete educationlevel_;
    delete graduated_school_;
    delete award_;
    delete subject_;
    delete interest_subject_;
    delete email_;
    delete avatar_url_;
    delete error_;
  }
}

void MyInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyInfoResponse_descriptor_;
}

const MyInfoResponse& MyInfoResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyInfoResponse> MyInfoResponse_default_instance_;

MyInfoResponse* MyInfoResponse::New(::google::protobuf::Arena* arena) const {
  MyInfoResponse* n = new MyInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.MyInfoResponse)
  if (GetArenaNoVirtual() == NULL && nick_name_ != NULL) delete nick_name_;
  nick_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && real_name_ != NULL) delete real_name_;
  real_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_number_ != NULL) delete id_number_;
  id_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && sex_ != NULL) delete sex_;
  sex_ = NULL;
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_roles_ != NULL) delete user_roles_;
  user_roles_ = NULL;
  if (GetArenaNoVirtual() == NULL && workunit_ != NULL) delete workunit_;
  workunit_ = NULL;
  if (GetArenaNoVirtual() == NULL && educationlevel_ != NULL) delete educationlevel_;
  educationlevel_ = NULL;
  if (GetArenaNoVirtual() == NULL && graduated_school_ != NULL) delete graduated_school_;
  graduated_school_ = NULL;
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) delete subject_;
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && interest_subject_ != NULL) delete interest_subject_;
  interest_subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && email_ != NULL) delete email_;
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && avatar_url_ != NULL) delete avatar_url_;
  avatar_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool MyInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.MyInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .personal.InfoNickName nick_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_nick_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_real_name;
        break;
      }

      // optional .personal.InfoRealName real_name = 2;
      case 2: {
        if (tag == 18) {
         parse_real_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_real_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_id_number;
        break;
      }

      // optional .personal.InfoIdNumber id_number = 3;
      case 3: {
        if (tag == 26) {
         parse_id_number:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_id_number()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_sex;
        break;
      }

      // optional .personal.InfoSex sex = 4;
      case 4: {
        if (tag == 34) {
         parse_sex:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_sex()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_birthday;
        break;
      }

      // optional .personal.InfoBirthday birthday = 5;
      case 5: {
        if (tag == 42) {
         parse_birthday:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_birthday()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_user_roles;
        break;
      }

      // optional .personal.InfoUserRoles user_roles = 6;
      case 6: {
        if (tag == 50) {
         parse_user_roles:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_user_roles()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_workUnit;
        break;
      }

      // optional .personal.InfoWorkUnit workUnit = 7;
      case 7: {
        if (tag == 58) {
         parse_workUnit:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_workunit()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_educationLevel;
        break;
      }

      // optional .personal.InfoEducationLevel educationLevel = 8;
      case 8: {
        if (tag == 66) {
         parse_educationLevel:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_educationlevel()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_graduated_school;
        break;
      }

      // optional .personal.InfoGraduatedSchool graduated_school = 9;
      case 9: {
        if (tag == 74) {
         parse_graduated_school:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graduated_school()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_award;
        break;
      }

      // optional .personal.InfoAward award = 10;
      case 10: {
        if (tag == 82) {
         parse_award:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_award()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_subject;
        break;
      }

      // optional .personal.InfoSubject subject = 11;
      case 11: {
        if (tag == 90) {
         parse_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_interest_subject;
        break;
      }

      // optional .personal.InfoInterestSubject interest_subject = 12;
      case 12: {
        if (tag == 98) {
         parse_interest_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_interest_subject()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_email;
        break;
      }

      // optional .personal.InfoEmail email = 13;
      case 13: {
        if (tag == 106) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_avatar_url;
        break;
      }

      // optional .personal.InfoAvatar avatar_url = 14;
      case 14: {
        if (tag == 114) {
         parse_avatar_url:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_avatar_url()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 15;
      case 15: {
        if (tag == 122) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.MyInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.MyInfoResponse)
  return false;
#undef DO_
}

void MyInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.MyInfoResponse)
  // optional .personal.InfoNickName nick_name = 1;
  if (this->has_nick_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->nick_name_, output);
  }

  // optional .personal.InfoRealName real_name = 2;
  if (this->has_real_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->real_name_, output);
  }

  // optional .personal.InfoIdNumber id_number = 3;
  if (this->has_id_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->id_number_, output);
  }

  // optional .personal.InfoSex sex = 4;
  if (this->has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->sex_, output);
  }

  // optional .personal.InfoBirthday birthday = 5;
  if (this->has_birthday()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->birthday_, output);
  }

  // optional .personal.InfoUserRoles user_roles = 6;
  if (this->has_user_roles()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->user_roles_, output);
  }

  // optional .personal.InfoWorkUnit workUnit = 7;
  if (this->has_workunit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->workunit_, output);
  }

  // optional .personal.InfoEducationLevel educationLevel = 8;
  if (this->has_educationlevel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->educationlevel_, output);
  }

  // optional .personal.InfoGraduatedSchool graduated_school = 9;
  if (this->has_graduated_school()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->graduated_school_, output);
  }

  // optional .personal.InfoAward award = 10;
  if (this->has_award()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->award_, output);
  }

  // optional .personal.InfoSubject subject = 11;
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->subject_, output);
  }

  // optional .personal.InfoInterestSubject interest_subject = 12;
  if (this->has_interest_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->interest_subject_, output);
  }

  // optional .personal.InfoEmail email = 13;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->email_, output);
  }

  // optional .personal.InfoAvatar avatar_url = 14;
  if (this->has_avatar_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->avatar_url_, output);
  }

  // optional .grpcCommon.GrpcError error = 15;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.MyInfoResponse)
}

::google::protobuf::uint8* MyInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.MyInfoResponse)
  // optional .personal.InfoNickName nick_name = 1;
  if (this->has_nick_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->nick_name_, false, target);
  }

  // optional .personal.InfoRealName real_name = 2;
  if (this->has_real_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->real_name_, false, target);
  }

  // optional .personal.InfoIdNumber id_number = 3;
  if (this->has_id_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->id_number_, false, target);
  }

  // optional .personal.InfoSex sex = 4;
  if (this->has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->sex_, false, target);
  }

  // optional .personal.InfoBirthday birthday = 5;
  if (this->has_birthday()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->birthday_, false, target);
  }

  // optional .personal.InfoUserRoles user_roles = 6;
  if (this->has_user_roles()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->user_roles_, false, target);
  }

  // optional .personal.InfoWorkUnit workUnit = 7;
  if (this->has_workunit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->workunit_, false, target);
  }

  // optional .personal.InfoEducationLevel educationLevel = 8;
  if (this->has_educationlevel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->educationlevel_, false, target);
  }

  // optional .personal.InfoGraduatedSchool graduated_school = 9;
  if (this->has_graduated_school()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->graduated_school_, false, target);
  }

  // optional .personal.InfoAward award = 10;
  if (this->has_award()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->award_, false, target);
  }

  // optional .personal.InfoSubject subject = 11;
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->subject_, false, target);
  }

  // optional .personal.InfoInterestSubject interest_subject = 12;
  if (this->has_interest_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->interest_subject_, false, target);
  }

  // optional .personal.InfoEmail email = 13;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->email_, false, target);
  }

  // optional .personal.InfoAvatar avatar_url = 14;
  if (this->has_avatar_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->avatar_url_, false, target);
  }

  // optional .grpcCommon.GrpcError error = 15;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.MyInfoResponse)
  return target;
}

size_t MyInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.MyInfoResponse)
  size_t total_size = 0;

  // optional .personal.InfoNickName nick_name = 1;
  if (this->has_nick_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->nick_name_);
  }

  // optional .personal.InfoRealName real_name = 2;
  if (this->has_real_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->real_name_);
  }

  // optional .personal.InfoIdNumber id_number = 3;
  if (this->has_id_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->id_number_);
  }

  // optional .personal.InfoSex sex = 4;
  if (this->has_sex()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->sex_);
  }

  // optional .personal.InfoBirthday birthday = 5;
  if (this->has_birthday()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->birthday_);
  }

  // optional .personal.InfoUserRoles user_roles = 6;
  if (this->has_user_roles()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->user_roles_);
  }

  // optional .personal.InfoWorkUnit workUnit = 7;
  if (this->has_workunit()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->workunit_);
  }

  // optional .personal.InfoEducationLevel educationLevel = 8;
  if (this->has_educationlevel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->educationlevel_);
  }

  // optional .personal.InfoGraduatedSchool graduated_school = 9;
  if (this->has_graduated_school()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->graduated_school_);
  }

  // optional .personal.InfoAward award = 10;
  if (this->has_award()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->award_);
  }

  // optional .personal.InfoSubject subject = 11;
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->subject_);
  }

  // optional .personal.InfoInterestSubject interest_subject = 12;
  if (this->has_interest_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->interest_subject_);
  }

  // optional .personal.InfoEmail email = 13;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->email_);
  }

  // optional .personal.InfoAvatar avatar_url = 14;
  if (this->has_avatar_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->avatar_url_);
  }

  // optional .grpcCommon.GrpcError error = 15;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.MyInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.MyInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.MyInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void MyInfoResponse::MergeFrom(const MyInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.MyInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyInfoResponse::UnsafeMergeFrom(const MyInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_nick_name()) {
    mutable_nick_name()->::personal::InfoNickName::MergeFrom(from.nick_name());
  }
  if (from.has_real_name()) {
    mutable_real_name()->::personal::InfoRealName::MergeFrom(from.real_name());
  }
  if (from.has_id_number()) {
    mutable_id_number()->::personal::InfoIdNumber::MergeFrom(from.id_number());
  }
  if (from.has_sex()) {
    mutable_sex()->::personal::InfoSex::MergeFrom(from.sex());
  }
  if (from.has_birthday()) {
    mutable_birthday()->::personal::InfoBirthday::MergeFrom(from.birthday());
  }
  if (from.has_user_roles()) {
    mutable_user_roles()->::personal::InfoUserRoles::MergeFrom(from.user_roles());
  }
  if (from.has_workunit()) {
    mutable_workunit()->::personal::InfoWorkUnit::MergeFrom(from.workunit());
  }
  if (from.has_educationlevel()) {
    mutable_educationlevel()->::personal::InfoEducationLevel::MergeFrom(from.educationlevel());
  }
  if (from.has_graduated_school()) {
    mutable_graduated_school()->::personal::InfoGraduatedSchool::MergeFrom(from.graduated_school());
  }
  if (from.has_award()) {
    mutable_award()->::personal::InfoAward::MergeFrom(from.award());
  }
  if (from.has_subject()) {
    mutable_subject()->::personal::InfoSubject::MergeFrom(from.subject());
  }
  if (from.has_interest_subject()) {
    mutable_interest_subject()->::personal::InfoInterestSubject::MergeFrom(from.interest_subject());
  }
  if (from.has_email()) {
    mutable_email()->::personal::InfoEmail::MergeFrom(from.email());
  }
  if (from.has_avatar_url()) {
    mutable_avatar_url()->::personal::InfoAvatar::MergeFrom(from.avatar_url());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void MyInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.MyInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoResponse::CopyFrom(const MyInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.MyInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyInfoResponse::IsInitialized() const {

  return true;
}

void MyInfoResponse::Swap(MyInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoResponse::InternalSwap(MyInfoResponse* other) {
  std::swap(nick_name_, other->nick_name_);
  std::swap(real_name_, other->real_name_);
  std::swap(id_number_, other->id_number_);
  std::swap(sex_, other->sex_);
  std::swap(birthday_, other->birthday_);
  std::swap(user_roles_, other->user_roles_);
  std::swap(workunit_, other->workunit_);
  std::swap(educationlevel_, other->educationlevel_);
  std::swap(graduated_school_, other->graduated_school_);
  std::swap(award_, other->award_);
  std::swap(subject_, other->subject_);
  std::swap(interest_subject_, other->interest_subject_);
  std::swap(email_, other->email_);
  std::swap(avatar_url_, other->avatar_url_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyInfoResponse_descriptor_;
  metadata.reflection = MyInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyInfoResponse

// optional .personal.InfoNickName nick_name = 1;
bool MyInfoResponse::has_nick_name() const {
  return this != internal_default_instance() && nick_name_ != NULL;
}
void MyInfoResponse::clear_nick_name() {
  if (GetArenaNoVirtual() == NULL && nick_name_ != NULL) delete nick_name_;
  nick_name_ = NULL;
}
const ::personal::InfoNickName& MyInfoResponse::nick_name() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.nick_name)
  return nick_name_ != NULL ? *nick_name_
                         : *::personal::InfoNickName::internal_default_instance();
}
::personal::InfoNickName* MyInfoResponse::mutable_nick_name() {
  
  if (nick_name_ == NULL) {
    nick_name_ = new ::personal::InfoNickName;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.nick_name)
  return nick_name_;
}
::personal::InfoNickName* MyInfoResponse::release_nick_name() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.nick_name)
  
  ::personal::InfoNickName* temp = nick_name_;
  nick_name_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_nick_name(::personal::InfoNickName* nick_name) {
  delete nick_name_;
  nick_name_ = nick_name;
  if (nick_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.nick_name)
}

// optional .personal.InfoRealName real_name = 2;
bool MyInfoResponse::has_real_name() const {
  return this != internal_default_instance() && real_name_ != NULL;
}
void MyInfoResponse::clear_real_name() {
  if (GetArenaNoVirtual() == NULL && real_name_ != NULL) delete real_name_;
  real_name_ = NULL;
}
const ::personal::InfoRealName& MyInfoResponse::real_name() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.real_name)
  return real_name_ != NULL ? *real_name_
                         : *::personal::InfoRealName::internal_default_instance();
}
::personal::InfoRealName* MyInfoResponse::mutable_real_name() {
  
  if (real_name_ == NULL) {
    real_name_ = new ::personal::InfoRealName;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.real_name)
  return real_name_;
}
::personal::InfoRealName* MyInfoResponse::release_real_name() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.real_name)
  
  ::personal::InfoRealName* temp = real_name_;
  real_name_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_real_name(::personal::InfoRealName* real_name) {
  delete real_name_;
  real_name_ = real_name;
  if (real_name) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.real_name)
}

// optional .personal.InfoIdNumber id_number = 3;
bool MyInfoResponse::has_id_number() const {
  return this != internal_default_instance() && id_number_ != NULL;
}
void MyInfoResponse::clear_id_number() {
  if (GetArenaNoVirtual() == NULL && id_number_ != NULL) delete id_number_;
  id_number_ = NULL;
}
const ::personal::InfoIdNumber& MyInfoResponse::id_number() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.id_number)
  return id_number_ != NULL ? *id_number_
                         : *::personal::InfoIdNumber::internal_default_instance();
}
::personal::InfoIdNumber* MyInfoResponse::mutable_id_number() {
  
  if (id_number_ == NULL) {
    id_number_ = new ::personal::InfoIdNumber;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.id_number)
  return id_number_;
}
::personal::InfoIdNumber* MyInfoResponse::release_id_number() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.id_number)
  
  ::personal::InfoIdNumber* temp = id_number_;
  id_number_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_id_number(::personal::InfoIdNumber* id_number) {
  delete id_number_;
  id_number_ = id_number;
  if (id_number) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.id_number)
}

// optional .personal.InfoSex sex = 4;
bool MyInfoResponse::has_sex() const {
  return this != internal_default_instance() && sex_ != NULL;
}
void MyInfoResponse::clear_sex() {
  if (GetArenaNoVirtual() == NULL && sex_ != NULL) delete sex_;
  sex_ = NULL;
}
const ::personal::InfoSex& MyInfoResponse::sex() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.sex)
  return sex_ != NULL ? *sex_
                         : *::personal::InfoSex::internal_default_instance();
}
::personal::InfoSex* MyInfoResponse::mutable_sex() {
  
  if (sex_ == NULL) {
    sex_ = new ::personal::InfoSex;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.sex)
  return sex_;
}
::personal::InfoSex* MyInfoResponse::release_sex() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.sex)
  
  ::personal::InfoSex* temp = sex_;
  sex_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_sex(::personal::InfoSex* sex) {
  delete sex_;
  sex_ = sex;
  if (sex) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.sex)
}

// optional .personal.InfoBirthday birthday = 5;
bool MyInfoResponse::has_birthday() const {
  return this != internal_default_instance() && birthday_ != NULL;
}
void MyInfoResponse::clear_birthday() {
  if (GetArenaNoVirtual() == NULL && birthday_ != NULL) delete birthday_;
  birthday_ = NULL;
}
const ::personal::InfoBirthday& MyInfoResponse::birthday() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.birthday)
  return birthday_ != NULL ? *birthday_
                         : *::personal::InfoBirthday::internal_default_instance();
}
::personal::InfoBirthday* MyInfoResponse::mutable_birthday() {
  
  if (birthday_ == NULL) {
    birthday_ = new ::personal::InfoBirthday;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.birthday)
  return birthday_;
}
::personal::InfoBirthday* MyInfoResponse::release_birthday() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.birthday)
  
  ::personal::InfoBirthday* temp = birthday_;
  birthday_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_birthday(::personal::InfoBirthday* birthday) {
  delete birthday_;
  birthday_ = birthday;
  if (birthday) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.birthday)
}

// optional .personal.InfoUserRoles user_roles = 6;
bool MyInfoResponse::has_user_roles() const {
  return this != internal_default_instance() && user_roles_ != NULL;
}
void MyInfoResponse::clear_user_roles() {
  if (GetArenaNoVirtual() == NULL && user_roles_ != NULL) delete user_roles_;
  user_roles_ = NULL;
}
const ::personal::InfoUserRoles& MyInfoResponse::user_roles() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.user_roles)
  return user_roles_ != NULL ? *user_roles_
                         : *::personal::InfoUserRoles::internal_default_instance();
}
::personal::InfoUserRoles* MyInfoResponse::mutable_user_roles() {
  
  if (user_roles_ == NULL) {
    user_roles_ = new ::personal::InfoUserRoles;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.user_roles)
  return user_roles_;
}
::personal::InfoUserRoles* MyInfoResponse::release_user_roles() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.user_roles)
  
  ::personal::InfoUserRoles* temp = user_roles_;
  user_roles_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_user_roles(::personal::InfoUserRoles* user_roles) {
  delete user_roles_;
  user_roles_ = user_roles;
  if (user_roles) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.user_roles)
}

// optional .personal.InfoWorkUnit workUnit = 7;
bool MyInfoResponse::has_workunit() const {
  return this != internal_default_instance() && workunit_ != NULL;
}
void MyInfoResponse::clear_workunit() {
  if (GetArenaNoVirtual() == NULL && workunit_ != NULL) delete workunit_;
  workunit_ = NULL;
}
const ::personal::InfoWorkUnit& MyInfoResponse::workunit() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.workUnit)
  return workunit_ != NULL ? *workunit_
                         : *::personal::InfoWorkUnit::internal_default_instance();
}
::personal::InfoWorkUnit* MyInfoResponse::mutable_workunit() {
  
  if (workunit_ == NULL) {
    workunit_ = new ::personal::InfoWorkUnit;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.workUnit)
  return workunit_;
}
::personal::InfoWorkUnit* MyInfoResponse::release_workunit() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.workUnit)
  
  ::personal::InfoWorkUnit* temp = workunit_;
  workunit_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_workunit(::personal::InfoWorkUnit* workunit) {
  delete workunit_;
  workunit_ = workunit;
  if (workunit) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.workUnit)
}

// optional .personal.InfoEducationLevel educationLevel = 8;
bool MyInfoResponse::has_educationlevel() const {
  return this != internal_default_instance() && educationlevel_ != NULL;
}
void MyInfoResponse::clear_educationlevel() {
  if (GetArenaNoVirtual() == NULL && educationlevel_ != NULL) delete educationlevel_;
  educationlevel_ = NULL;
}
const ::personal::InfoEducationLevel& MyInfoResponse::educationlevel() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.educationLevel)
  return educationlevel_ != NULL ? *educationlevel_
                         : *::personal::InfoEducationLevel::internal_default_instance();
}
::personal::InfoEducationLevel* MyInfoResponse::mutable_educationlevel() {
  
  if (educationlevel_ == NULL) {
    educationlevel_ = new ::personal::InfoEducationLevel;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.educationLevel)
  return educationlevel_;
}
::personal::InfoEducationLevel* MyInfoResponse::release_educationlevel() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.educationLevel)
  
  ::personal::InfoEducationLevel* temp = educationlevel_;
  educationlevel_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_educationlevel(::personal::InfoEducationLevel* educationlevel) {
  delete educationlevel_;
  educationlevel_ = educationlevel;
  if (educationlevel) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.educationLevel)
}

// optional .personal.InfoGraduatedSchool graduated_school = 9;
bool MyInfoResponse::has_graduated_school() const {
  return this != internal_default_instance() && graduated_school_ != NULL;
}
void MyInfoResponse::clear_graduated_school() {
  if (GetArenaNoVirtual() == NULL && graduated_school_ != NULL) delete graduated_school_;
  graduated_school_ = NULL;
}
const ::personal::InfoGraduatedSchool& MyInfoResponse::graduated_school() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.graduated_school)
  return graduated_school_ != NULL ? *graduated_school_
                         : *::personal::InfoGraduatedSchool::internal_default_instance();
}
::personal::InfoGraduatedSchool* MyInfoResponse::mutable_graduated_school() {
  
  if (graduated_school_ == NULL) {
    graduated_school_ = new ::personal::InfoGraduatedSchool;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.graduated_school)
  return graduated_school_;
}
::personal::InfoGraduatedSchool* MyInfoResponse::release_graduated_school() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.graduated_school)
  
  ::personal::InfoGraduatedSchool* temp = graduated_school_;
  graduated_school_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_graduated_school(::personal::InfoGraduatedSchool* graduated_school) {
  delete graduated_school_;
  graduated_school_ = graduated_school;
  if (graduated_school) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.graduated_school)
}

// optional .personal.InfoAward award = 10;
bool MyInfoResponse::has_award() const {
  return this != internal_default_instance() && award_ != NULL;
}
void MyInfoResponse::clear_award() {
  if (GetArenaNoVirtual() == NULL && award_ != NULL) delete award_;
  award_ = NULL;
}
const ::personal::InfoAward& MyInfoResponse::award() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.award)
  return award_ != NULL ? *award_
                         : *::personal::InfoAward::internal_default_instance();
}
::personal::InfoAward* MyInfoResponse::mutable_award() {
  
  if (award_ == NULL) {
    award_ = new ::personal::InfoAward;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.award)
  return award_;
}
::personal::InfoAward* MyInfoResponse::release_award() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.award)
  
  ::personal::InfoAward* temp = award_;
  award_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_award(::personal::InfoAward* award) {
  delete award_;
  award_ = award;
  if (award) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.award)
}

// optional .personal.InfoSubject subject = 11;
bool MyInfoResponse::has_subject() const {
  return this != internal_default_instance() && subject_ != NULL;
}
void MyInfoResponse::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) delete subject_;
  subject_ = NULL;
}
const ::personal::InfoSubject& MyInfoResponse::subject() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.subject)
  return subject_ != NULL ? *subject_
                         : *::personal::InfoSubject::internal_default_instance();
}
::personal::InfoSubject* MyInfoResponse::mutable_subject() {
  
  if (subject_ == NULL) {
    subject_ = new ::personal::InfoSubject;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.subject)
  return subject_;
}
::personal::InfoSubject* MyInfoResponse::release_subject() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.subject)
  
  ::personal::InfoSubject* temp = subject_;
  subject_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_subject(::personal::InfoSubject* subject) {
  delete subject_;
  subject_ = subject;
  if (subject) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.subject)
}

// optional .personal.InfoInterestSubject interest_subject = 12;
bool MyInfoResponse::has_interest_subject() const {
  return this != internal_default_instance() && interest_subject_ != NULL;
}
void MyInfoResponse::clear_interest_subject() {
  if (GetArenaNoVirtual() == NULL && interest_subject_ != NULL) delete interest_subject_;
  interest_subject_ = NULL;
}
const ::personal::InfoInterestSubject& MyInfoResponse::interest_subject() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.interest_subject)
  return interest_subject_ != NULL ? *interest_subject_
                         : *::personal::InfoInterestSubject::internal_default_instance();
}
::personal::InfoInterestSubject* MyInfoResponse::mutable_interest_subject() {
  
  if (interest_subject_ == NULL) {
    interest_subject_ = new ::personal::InfoInterestSubject;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.interest_subject)
  return interest_subject_;
}
::personal::InfoInterestSubject* MyInfoResponse::release_interest_subject() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.interest_subject)
  
  ::personal::InfoInterestSubject* temp = interest_subject_;
  interest_subject_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_interest_subject(::personal::InfoInterestSubject* interest_subject) {
  delete interest_subject_;
  interest_subject_ = interest_subject;
  if (interest_subject) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.interest_subject)
}

// optional .personal.InfoEmail email = 13;
bool MyInfoResponse::has_email() const {
  return this != internal_default_instance() && email_ != NULL;
}
void MyInfoResponse::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) delete email_;
  email_ = NULL;
}
const ::personal::InfoEmail& MyInfoResponse::email() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.email)
  return email_ != NULL ? *email_
                         : *::personal::InfoEmail::internal_default_instance();
}
::personal::InfoEmail* MyInfoResponse::mutable_email() {
  
  if (email_ == NULL) {
    email_ = new ::personal::InfoEmail;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.email)
  return email_;
}
::personal::InfoEmail* MyInfoResponse::release_email() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.email)
  
  ::personal::InfoEmail* temp = email_;
  email_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_email(::personal::InfoEmail* email) {
  delete email_;
  email_ = email;
  if (email) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.email)
}

// optional .personal.InfoAvatar avatar_url = 14;
bool MyInfoResponse::has_avatar_url() const {
  return this != internal_default_instance() && avatar_url_ != NULL;
}
void MyInfoResponse::clear_avatar_url() {
  if (GetArenaNoVirtual() == NULL && avatar_url_ != NULL) delete avatar_url_;
  avatar_url_ = NULL;
}
const ::personal::InfoAvatar& MyInfoResponse::avatar_url() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.avatar_url)
  return avatar_url_ != NULL ? *avatar_url_
                         : *::personal::InfoAvatar::internal_default_instance();
}
::personal::InfoAvatar* MyInfoResponse::mutable_avatar_url() {
  
  if (avatar_url_ == NULL) {
    avatar_url_ = new ::personal::InfoAvatar;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.avatar_url)
  return avatar_url_;
}
::personal::InfoAvatar* MyInfoResponse::release_avatar_url() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.avatar_url)
  
  ::personal::InfoAvatar* temp = avatar_url_;
  avatar_url_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_avatar_url(::personal::InfoAvatar* avatar_url) {
  delete avatar_url_;
  avatar_url_ = avatar_url;
  if (avatar_url) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.avatar_url)
}

// optional .grpcCommon.GrpcError error = 15;
bool MyInfoResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void MyInfoResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& MyInfoResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* MyInfoResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoResponse.error)
  return error_;
}
::grpcCommon::GrpcError* MyInfoResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.MyInfoResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void MyInfoResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoResponse.error)
}

inline const MyInfoResponse* MyInfoResponse::internal_default_instance() {
  return &MyInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoUpdateRequest::kUserIdFieldNumber;
const int MyInfoUpdateRequest::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoUpdateRequest::MyInfoUpdateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.MyInfoUpdateRequest)
}

void MyInfoUpdateRequest::InitAsDefaultInstance() {
}

MyInfoUpdateRequest::MyInfoUpdateRequest(const MyInfoUpdateRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.MyInfoUpdateRequest)
}

void MyInfoUpdateRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyInfoUpdateRequest::~MyInfoUpdateRequest() {
  // @@protoc_insertion_point(destructor:personal.MyInfoUpdateRequest)
  SharedDtor();
}

void MyInfoUpdateRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyInfoUpdateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyInfoUpdateRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyInfoUpdateRequest_descriptor_;
}

const MyInfoUpdateRequest& MyInfoUpdateRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyInfoUpdateRequest> MyInfoUpdateRequest_default_instance_;

MyInfoUpdateRequest* MyInfoUpdateRequest::New(::google::protobuf::Arena* arena) const {
  MyInfoUpdateRequest* n = new MyInfoUpdateRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyInfoUpdateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.MyInfoUpdateRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  field_.Clear();
}

bool MyInfoUpdateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.MyInfoUpdateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.MyInfoUpdateRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_field;
        break;
      }

      // repeated .google.protobuf.Any field = 2;
      case 2: {
        if (tag == 18) {
         parse_field:
          DO_(input->IncrementRecursionDepth());
         parse_loop_field:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_field;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.MyInfoUpdateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.MyInfoUpdateRequest)
  return false;
#undef DO_
}

void MyInfoUpdateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.MyInfoUpdateRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.MyInfoUpdateRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // repeated .google.protobuf.Any field = 2;
  for (unsigned int i = 0, n = this->field_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->field(i), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.MyInfoUpdateRequest)
}

::google::protobuf::uint8* MyInfoUpdateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.MyInfoUpdateRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.MyInfoUpdateRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // repeated .google.protobuf.Any field = 2;
  for (unsigned int i = 0, n = this->field_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->field(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.MyInfoUpdateRequest)
  return target;
}

size_t MyInfoUpdateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.MyInfoUpdateRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // repeated .google.protobuf.Any field = 2;
  {
    unsigned int count = this->field_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyInfoUpdateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.MyInfoUpdateRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyInfoUpdateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoUpdateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.MyInfoUpdateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.MyInfoUpdateRequest)
    UnsafeMergeFrom(*source);
  }
}

void MyInfoUpdateRequest::MergeFrom(const MyInfoUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.MyInfoUpdateRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyInfoUpdateRequest::UnsafeMergeFrom(const MyInfoUpdateRequest& from) {
  GOOGLE_DCHECK(&from != this);
  field_.MergeFrom(from.field_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void MyInfoUpdateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.MyInfoUpdateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoUpdateRequest::CopyFrom(const MyInfoUpdateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.MyInfoUpdateRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyInfoUpdateRequest::IsInitialized() const {

  return true;
}

void MyInfoUpdateRequest::Swap(MyInfoUpdateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoUpdateRequest::InternalSwap(MyInfoUpdateRequest* other) {
  user_id_.Swap(&other->user_id_);
  field_.UnsafeArenaSwap(&other->field_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyInfoUpdateRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyInfoUpdateRequest_descriptor_;
  metadata.reflection = MyInfoUpdateRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyInfoUpdateRequest

// optional string user_id = 1;
void MyInfoUpdateRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyInfoUpdateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoUpdateRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyInfoUpdateRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.MyInfoUpdateRequest.user_id)
}
void MyInfoUpdateRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.MyInfoUpdateRequest.user_id)
}
void MyInfoUpdateRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.MyInfoUpdateRequest.user_id)
}
::std::string* MyInfoUpdateRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.MyInfoUpdateRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyInfoUpdateRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.MyInfoUpdateRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyInfoUpdateRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoUpdateRequest.user_id)
}

// repeated .google.protobuf.Any field = 2;
int MyInfoUpdateRequest::field_size() const {
  return field_.size();
}
void MyInfoUpdateRequest::clear_field() {
  field_.Clear();
}
const ::google::protobuf::Any& MyInfoUpdateRequest::field(int index) const {
  // @@protoc_insertion_point(field_get:personal.MyInfoUpdateRequest.field)
  return field_.Get(index);
}
::google::protobuf::Any* MyInfoUpdateRequest::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:personal.MyInfoUpdateRequest.field)
  return field_.Mutable(index);
}
::google::protobuf::Any* MyInfoUpdateRequest::add_field() {
  // @@protoc_insertion_point(field_add:personal.MyInfoUpdateRequest.field)
  return field_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
MyInfoUpdateRequest::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:personal.MyInfoUpdateRequest.field)
  return &field_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
MyInfoUpdateRequest::field() const {
  // @@protoc_insertion_point(field_list:personal.MyInfoUpdateRequest.field)
  return field_;
}

inline const MyInfoUpdateRequest* MyInfoUpdateRequest::internal_default_instance() {
  return &MyInfoUpdateRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyInfoUpdateResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyInfoUpdateResponse::MyInfoUpdateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.MyInfoUpdateResponse)
}

void MyInfoUpdateResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

MyInfoUpdateResponse::MyInfoUpdateResponse(const MyInfoUpdateResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.MyInfoUpdateResponse)
}

void MyInfoUpdateResponse::SharedCtor() {
  error_ = NULL;
  _cached_size_ = 0;
}

MyInfoUpdateResponse::~MyInfoUpdateResponse() {
  // @@protoc_insertion_point(destructor:personal.MyInfoUpdateResponse)
  SharedDtor();
}

void MyInfoUpdateResponse::SharedDtor() {
  if (this != &MyInfoUpdateResponse_default_instance_.get()) {
    delete error_;
  }
}

void MyInfoUpdateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyInfoUpdateResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyInfoUpdateResponse_descriptor_;
}

const MyInfoUpdateResponse& MyInfoUpdateResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyInfoUpdateResponse> MyInfoUpdateResponse_default_instance_;

MyInfoUpdateResponse* MyInfoUpdateResponse::New(::google::protobuf::Arena* arena) const {
  MyInfoUpdateResponse* n = new MyInfoUpdateResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyInfoUpdateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.MyInfoUpdateResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool MyInfoUpdateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.MyInfoUpdateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.GrpcError error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.MyInfoUpdateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.MyInfoUpdateResponse)
  return false;
#undef DO_
}

void MyInfoUpdateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.MyInfoUpdateResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:personal.MyInfoUpdateResponse)
}

::google::protobuf::uint8* MyInfoUpdateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.MyInfoUpdateResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.MyInfoUpdateResponse)
  return target;
}

size_t MyInfoUpdateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.MyInfoUpdateResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyInfoUpdateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.MyInfoUpdateResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyInfoUpdateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyInfoUpdateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.MyInfoUpdateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.MyInfoUpdateResponse)
    UnsafeMergeFrom(*source);
  }
}

void MyInfoUpdateResponse::MergeFrom(const MyInfoUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.MyInfoUpdateResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyInfoUpdateResponse::UnsafeMergeFrom(const MyInfoUpdateResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void MyInfoUpdateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.MyInfoUpdateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyInfoUpdateResponse::CopyFrom(const MyInfoUpdateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.MyInfoUpdateResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyInfoUpdateResponse::IsInitialized() const {

  return true;
}

void MyInfoUpdateResponse::Swap(MyInfoUpdateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyInfoUpdateResponse::InternalSwap(MyInfoUpdateResponse* other) {
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyInfoUpdateResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyInfoUpdateResponse_descriptor_;
  metadata.reflection = MyInfoUpdateResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyInfoUpdateResponse

// optional .grpcCommon.GrpcError error = 1;
bool MyInfoUpdateResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void MyInfoUpdateResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& MyInfoUpdateResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.MyInfoUpdateResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* MyInfoUpdateResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.MyInfoUpdateResponse.error)
  return error_;
}
::grpcCommon::GrpcError* MyInfoUpdateResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.MyInfoUpdateResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void MyInfoUpdateResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.MyInfoUpdateResponse.error)
}

inline const MyInfoUpdateResponse* MyInfoUpdateResponse::internal_default_instance() {
  return &MyInfoUpdateResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoNickName::kNickNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoNickName::InfoNickName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoNickName)
}

void InfoNickName::InitAsDefaultInstance() {
}

InfoNickName::InfoNickName(const InfoNickName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoNickName)
}

void InfoNickName::SharedCtor() {
  nick_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoNickName::~InfoNickName() {
  // @@protoc_insertion_point(destructor:personal.InfoNickName)
  SharedDtor();
}

void InfoNickName::SharedDtor() {
  nick_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoNickName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoNickName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoNickName_descriptor_;
}

const InfoNickName& InfoNickName::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoNickName> InfoNickName_default_instance_;

InfoNickName* InfoNickName::New(::google::protobuf::Arena* arena) const {
  InfoNickName* n = new InfoNickName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoNickName::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoNickName)
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoNickName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoNickName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nick_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nick_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nick_name().data(), this->nick_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoNickName.nick_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoNickName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoNickName)
  return false;
#undef DO_
}

void InfoNickName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoNickName)
  // optional string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoNickName.nick_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nick_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoNickName)
}

::google::protobuf::uint8* InfoNickName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoNickName)
  // optional string nick_name = 1;
  if (this->nick_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nick_name().data(), this->nick_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoNickName.nick_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nick_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoNickName)
  return target;
}

size_t InfoNickName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoNickName)
  size_t total_size = 0;

  // optional string nick_name = 1;
  if (this->nick_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nick_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoNickName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoNickName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoNickName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoNickName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoNickName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoNickName)
    UnsafeMergeFrom(*source);
  }
}

void InfoNickName::MergeFrom(const InfoNickName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoNickName)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoNickName::UnsafeMergeFrom(const InfoNickName& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.nick_name().size() > 0) {

    nick_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nick_name_);
  }
}

void InfoNickName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoNickName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoNickName::CopyFrom(const InfoNickName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoNickName)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoNickName::IsInitialized() const {

  return true;
}

void InfoNickName::Swap(InfoNickName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoNickName::InternalSwap(InfoNickName* other) {
  nick_name_.Swap(&other->nick_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoNickName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoNickName_descriptor_;
  metadata.reflection = InfoNickName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoNickName

// optional string nick_name = 1;
void InfoNickName::clear_nick_name() {
  nick_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoNickName::nick_name() const {
  // @@protoc_insertion_point(field_get:personal.InfoNickName.nick_name)
  return nick_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoNickName::set_nick_name(const ::std::string& value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoNickName.nick_name)
}
void InfoNickName::set_nick_name(const char* value) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoNickName.nick_name)
}
void InfoNickName::set_nick_name(const char* value, size_t size) {
  
  nick_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoNickName.nick_name)
}
::std::string* InfoNickName::mutable_nick_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoNickName.nick_name)
  return nick_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoNickName::release_nick_name() {
  // @@protoc_insertion_point(field_release:personal.InfoNickName.nick_name)
  
  return nick_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoNickName::set_allocated_nick_name(::std::string* nick_name) {
  if (nick_name != NULL) {
    
  } else {
    
  }
  nick_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nick_name);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoNickName.nick_name)
}

inline const InfoNickName* InfoNickName::internal_default_instance() {
  return &InfoNickName_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoRealName::kRealNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoRealName::InfoRealName()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoRealName)
}

void InfoRealName::InitAsDefaultInstance() {
}

InfoRealName::InfoRealName(const InfoRealName& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoRealName)
}

void InfoRealName::SharedCtor() {
  real_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoRealName::~InfoRealName() {
  // @@protoc_insertion_point(destructor:personal.InfoRealName)
  SharedDtor();
}

void InfoRealName::SharedDtor() {
  real_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoRealName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoRealName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoRealName_descriptor_;
}

const InfoRealName& InfoRealName::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoRealName> InfoRealName_default_instance_;

InfoRealName* InfoRealName::New(::google::protobuf::Arena* arena) const {
  InfoRealName* n = new InfoRealName;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoRealName::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoRealName)
  real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoRealName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoRealName)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string real_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_real_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->real_name().data(), this->real_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoRealName.real_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoRealName)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoRealName)
  return false;
#undef DO_
}

void InfoRealName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoRealName)
  // optional string real_name = 1;
  if (this->real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->real_name().data(), this->real_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoRealName.real_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->real_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoRealName)
}

::google::protobuf::uint8* InfoRealName::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoRealName)
  // optional string real_name = 1;
  if (this->real_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->real_name().data(), this->real_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoRealName.real_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->real_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoRealName)
  return target;
}

size_t InfoRealName::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoRealName)
  size_t total_size = 0;

  // optional string real_name = 1;
  if (this->real_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->real_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoRealName::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoRealName)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoRealName* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoRealName>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoRealName)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoRealName)
    UnsafeMergeFrom(*source);
  }
}

void InfoRealName::MergeFrom(const InfoRealName& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoRealName)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoRealName::UnsafeMergeFrom(const InfoRealName& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.real_name().size() > 0) {

    real_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.real_name_);
  }
}

void InfoRealName::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoRealName)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoRealName::CopyFrom(const InfoRealName& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoRealName)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoRealName::IsInitialized() const {

  return true;
}

void InfoRealName::Swap(InfoRealName* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoRealName::InternalSwap(InfoRealName* other) {
  real_name_.Swap(&other->real_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoRealName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoRealName_descriptor_;
  metadata.reflection = InfoRealName_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoRealName

// optional string real_name = 1;
void InfoRealName::clear_real_name() {
  real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoRealName::real_name() const {
  // @@protoc_insertion_point(field_get:personal.InfoRealName.real_name)
  return real_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoRealName::set_real_name(const ::std::string& value) {
  
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoRealName.real_name)
}
void InfoRealName::set_real_name(const char* value) {
  
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoRealName.real_name)
}
void InfoRealName::set_real_name(const char* value, size_t size) {
  
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoRealName.real_name)
}
::std::string* InfoRealName::mutable_real_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoRealName.real_name)
  return real_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoRealName::release_real_name() {
  // @@protoc_insertion_point(field_release:personal.InfoRealName.real_name)
  
  return real_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoRealName::set_allocated_real_name(::std::string* real_name) {
  if (real_name != NULL) {
    
  } else {
    
  }
  real_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), real_name);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoRealName.real_name)
}

inline const InfoRealName* InfoRealName::internal_default_instance() {
  return &InfoRealName_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoIdNumber::kIdNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoIdNumber::InfoIdNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoIdNumber)
}

void InfoIdNumber::InitAsDefaultInstance() {
}

InfoIdNumber::InfoIdNumber(const InfoIdNumber& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoIdNumber)
}

void InfoIdNumber::SharedCtor() {
  id_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoIdNumber::~InfoIdNumber() {
  // @@protoc_insertion_point(destructor:personal.InfoIdNumber)
  SharedDtor();
}

void InfoIdNumber::SharedDtor() {
  id_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoIdNumber::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoIdNumber::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoIdNumber_descriptor_;
}

const InfoIdNumber& InfoIdNumber::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoIdNumber> InfoIdNumber_default_instance_;

InfoIdNumber* InfoIdNumber::New(::google::protobuf::Arena* arena) const {
  InfoIdNumber* n = new InfoIdNumber;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoIdNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoIdNumber)
  id_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoIdNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoIdNumber)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string id_number = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id_number().data(), this->id_number().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoIdNumber.id_number"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoIdNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoIdNumber)
  return false;
#undef DO_
}

void InfoIdNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoIdNumber)
  // optional string id_number = 1;
  if (this->id_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id_number().data(), this->id_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoIdNumber.id_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id_number(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoIdNumber)
}

::google::protobuf::uint8* InfoIdNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoIdNumber)
  // optional string id_number = 1;
  if (this->id_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id_number().data(), this->id_number().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoIdNumber.id_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id_number(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoIdNumber)
  return target;
}

size_t InfoIdNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoIdNumber)
  size_t total_size = 0;

  // optional string id_number = 1;
  if (this->id_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoIdNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoIdNumber)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoIdNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoIdNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoIdNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoIdNumber)
    UnsafeMergeFrom(*source);
  }
}

void InfoIdNumber::MergeFrom(const InfoIdNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoIdNumber)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoIdNumber::UnsafeMergeFrom(const InfoIdNumber& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.id_number().size() > 0) {

    id_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_number_);
  }
}

void InfoIdNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoIdNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoIdNumber::CopyFrom(const InfoIdNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoIdNumber)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoIdNumber::IsInitialized() const {

  return true;
}

void InfoIdNumber::Swap(InfoIdNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoIdNumber::InternalSwap(InfoIdNumber* other) {
  id_number_.Swap(&other->id_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoIdNumber::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoIdNumber_descriptor_;
  metadata.reflection = InfoIdNumber_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoIdNumber

// optional string id_number = 1;
void InfoIdNumber::clear_id_number() {
  id_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoIdNumber::id_number() const {
  // @@protoc_insertion_point(field_get:personal.InfoIdNumber.id_number)
  return id_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoIdNumber::set_id_number(const ::std::string& value) {
  
  id_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoIdNumber.id_number)
}
void InfoIdNumber::set_id_number(const char* value) {
  
  id_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoIdNumber.id_number)
}
void InfoIdNumber::set_id_number(const char* value, size_t size) {
  
  id_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoIdNumber.id_number)
}
::std::string* InfoIdNumber::mutable_id_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoIdNumber.id_number)
  return id_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoIdNumber::release_id_number() {
  // @@protoc_insertion_point(field_release:personal.InfoIdNumber.id_number)
  
  return id_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoIdNumber::set_allocated_id_number(::std::string* id_number) {
  if (id_number != NULL) {
    
  } else {
    
  }
  id_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id_number);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoIdNumber.id_number)
}

inline const InfoIdNumber* InfoIdNumber::internal_default_instance() {
  return &InfoIdNumber_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoSex::kSexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoSex::InfoSex()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoSex)
}

void InfoSex::InitAsDefaultInstance() {
}

InfoSex::InfoSex(const InfoSex& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoSex)
}

void InfoSex::SharedCtor() {
  sex_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoSex::~InfoSex() {
  // @@protoc_insertion_point(destructor:personal.InfoSex)
  SharedDtor();
}

void InfoSex::SharedDtor() {
  sex_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoSex::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoSex::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoSex_descriptor_;
}

const InfoSex& InfoSex::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoSex> InfoSex_default_instance_;

InfoSex* InfoSex::New(::google::protobuf::Arena* arena) const {
  InfoSex* n = new InfoSex;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoSex::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoSex)
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoSex::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoSex)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sex = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sex()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sex().data(), this->sex().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoSex.sex"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoSex)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoSex)
  return false;
#undef DO_
}

void InfoSex::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoSex)
  // optional string sex = 1;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoSex.sex");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sex(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoSex)
}

::google::protobuf::uint8* InfoSex::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoSex)
  // optional string sex = 1;
  if (this->sex().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sex().data(), this->sex().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoSex.sex");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sex(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoSex)
  return target;
}

size_t InfoSex::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoSex)
  size_t total_size = 0;

  // optional string sex = 1;
  if (this->sex().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sex());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoSex::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoSex)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoSex* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoSex>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoSex)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoSex)
    UnsafeMergeFrom(*source);
  }
}

void InfoSex::MergeFrom(const InfoSex& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoSex)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoSex::UnsafeMergeFrom(const InfoSex& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.sex().size() > 0) {

    sex_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sex_);
  }
}

void InfoSex::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoSex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoSex::CopyFrom(const InfoSex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoSex)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoSex::IsInitialized() const {

  return true;
}

void InfoSex::Swap(InfoSex* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoSex::InternalSwap(InfoSex* other) {
  sex_.Swap(&other->sex_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoSex::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoSex_descriptor_;
  metadata.reflection = InfoSex_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoSex

// optional string sex = 1;
void InfoSex::clear_sex() {
  sex_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoSex::sex() const {
  // @@protoc_insertion_point(field_get:personal.InfoSex.sex)
  return sex_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoSex::set_sex(const ::std::string& value) {
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoSex.sex)
}
void InfoSex::set_sex(const char* value) {
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoSex.sex)
}
void InfoSex::set_sex(const char* value, size_t size) {
  
  sex_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoSex.sex)
}
::std::string* InfoSex::mutable_sex() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoSex.sex)
  return sex_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoSex::release_sex() {
  // @@protoc_insertion_point(field_release:personal.InfoSex.sex)
  
  return sex_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoSex::set_allocated_sex(::std::string* sex) {
  if (sex != NULL) {
    
  } else {
    
  }
  sex_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sex);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoSex.sex)
}

inline const InfoSex* InfoSex::internal_default_instance() {
  return &InfoSex_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoBirthday::kBirthdayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoBirthday::InfoBirthday()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoBirthday)
}

void InfoBirthday::InitAsDefaultInstance() {
}

InfoBirthday::InfoBirthday(const InfoBirthday& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoBirthday)
}

void InfoBirthday::SharedCtor() {
  birthday_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoBirthday::~InfoBirthday() {
  // @@protoc_insertion_point(destructor:personal.InfoBirthday)
  SharedDtor();
}

void InfoBirthday::SharedDtor() {
  birthday_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoBirthday::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoBirthday::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoBirthday_descriptor_;
}

const InfoBirthday& InfoBirthday::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoBirthday> InfoBirthday_default_instance_;

InfoBirthday* InfoBirthday::New(::google::protobuf::Arena* arena) const {
  InfoBirthday* n = new InfoBirthday;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoBirthday::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoBirthday)
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoBirthday::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoBirthday)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string birthday = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthday()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthday().data(), this->birthday().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoBirthday.birthday"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoBirthday)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoBirthday)
  return false;
#undef DO_
}

void InfoBirthday::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoBirthday)
  // optional string birthday = 1;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoBirthday.birthday");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->birthday(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoBirthday)
}

::google::protobuf::uint8* InfoBirthday::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoBirthday)
  // optional string birthday = 1;
  if (this->birthday().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthday().data(), this->birthday().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoBirthday.birthday");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->birthday(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoBirthday)
  return target;
}

size_t InfoBirthday::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoBirthday)
  size_t total_size = 0;

  // optional string birthday = 1;
  if (this->birthday().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthday());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoBirthday::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoBirthday)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoBirthday* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoBirthday>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoBirthday)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoBirthday)
    UnsafeMergeFrom(*source);
  }
}

void InfoBirthday::MergeFrom(const InfoBirthday& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoBirthday)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoBirthday::UnsafeMergeFrom(const InfoBirthday& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.birthday().size() > 0) {

    birthday_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthday_);
  }
}

void InfoBirthday::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoBirthday)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoBirthday::CopyFrom(const InfoBirthday& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoBirthday)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoBirthday::IsInitialized() const {

  return true;
}

void InfoBirthday::Swap(InfoBirthday* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoBirthday::InternalSwap(InfoBirthday* other) {
  birthday_.Swap(&other->birthday_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoBirthday::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoBirthday_descriptor_;
  metadata.reflection = InfoBirthday_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoBirthday

// optional string birthday = 1;
void InfoBirthday::clear_birthday() {
  birthday_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoBirthday::birthday() const {
  // @@protoc_insertion_point(field_get:personal.InfoBirthday.birthday)
  return birthday_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoBirthday::set_birthday(const ::std::string& value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoBirthday.birthday)
}
void InfoBirthday::set_birthday(const char* value) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoBirthday.birthday)
}
void InfoBirthday::set_birthday(const char* value, size_t size) {
  
  birthday_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoBirthday.birthday)
}
::std::string* InfoBirthday::mutable_birthday() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoBirthday.birthday)
  return birthday_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoBirthday::release_birthday() {
  // @@protoc_insertion_point(field_release:personal.InfoBirthday.birthday)
  
  return birthday_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoBirthday::set_allocated_birthday(::std::string* birthday) {
  if (birthday != NULL) {
    
  } else {
    
  }
  birthday_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), birthday);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoBirthday.birthday)
}

inline const InfoBirthday* InfoBirthday::internal_default_instance() {
  return &InfoBirthday_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoUserRoles::kUserRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoUserRoles::InfoUserRoles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoUserRoles)
}

void InfoUserRoles::InitAsDefaultInstance() {
}

InfoUserRoles::InfoUserRoles(const InfoUserRoles& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoUserRoles)
}

void InfoUserRoles::SharedCtor() {
  user_roles_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoUserRoles::~InfoUserRoles() {
  // @@protoc_insertion_point(destructor:personal.InfoUserRoles)
  SharedDtor();
}

void InfoUserRoles::SharedDtor() {
  user_roles_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoUserRoles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoUserRoles::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoUserRoles_descriptor_;
}

const InfoUserRoles& InfoUserRoles::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoUserRoles> InfoUserRoles_default_instance_;

InfoUserRoles* InfoUserRoles::New(::google::protobuf::Arena* arena) const {
  InfoUserRoles* n = new InfoUserRoles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoUserRoles::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoUserRoles)
  user_roles_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoUserRoles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoUserRoles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_roles = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_roles()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_roles().data(), this->user_roles().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoUserRoles.user_roles"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoUserRoles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoUserRoles)
  return false;
#undef DO_
}

void InfoUserRoles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoUserRoles)
  // optional string user_roles = 1;
  if (this->user_roles().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_roles().data(), this->user_roles().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoUserRoles.user_roles");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_roles(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoUserRoles)
}

::google::protobuf::uint8* InfoUserRoles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoUserRoles)
  // optional string user_roles = 1;
  if (this->user_roles().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_roles().data(), this->user_roles().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoUserRoles.user_roles");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_roles(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoUserRoles)
  return target;
}

size_t InfoUserRoles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoUserRoles)
  size_t total_size = 0;

  // optional string user_roles = 1;
  if (this->user_roles().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_roles());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoUserRoles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoUserRoles)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoUserRoles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoUserRoles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoUserRoles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoUserRoles)
    UnsafeMergeFrom(*source);
  }
}

void InfoUserRoles::MergeFrom(const InfoUserRoles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoUserRoles)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoUserRoles::UnsafeMergeFrom(const InfoUserRoles& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_roles().size() > 0) {

    user_roles_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_roles_);
  }
}

void InfoUserRoles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoUserRoles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoUserRoles::CopyFrom(const InfoUserRoles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoUserRoles)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoUserRoles::IsInitialized() const {

  return true;
}

void InfoUserRoles::Swap(InfoUserRoles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoUserRoles::InternalSwap(InfoUserRoles* other) {
  user_roles_.Swap(&other->user_roles_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoUserRoles::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoUserRoles_descriptor_;
  metadata.reflection = InfoUserRoles_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoUserRoles

// optional string user_roles = 1;
void InfoUserRoles::clear_user_roles() {
  user_roles_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoUserRoles::user_roles() const {
  // @@protoc_insertion_point(field_get:personal.InfoUserRoles.user_roles)
  return user_roles_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoUserRoles::set_user_roles(const ::std::string& value) {
  
  user_roles_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoUserRoles.user_roles)
}
void InfoUserRoles::set_user_roles(const char* value) {
  
  user_roles_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoUserRoles.user_roles)
}
void InfoUserRoles::set_user_roles(const char* value, size_t size) {
  
  user_roles_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoUserRoles.user_roles)
}
::std::string* InfoUserRoles::mutable_user_roles() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoUserRoles.user_roles)
  return user_roles_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoUserRoles::release_user_roles() {
  // @@protoc_insertion_point(field_release:personal.InfoUserRoles.user_roles)
  
  return user_roles_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoUserRoles::set_allocated_user_roles(::std::string* user_roles) {
  if (user_roles != NULL) {
    
  } else {
    
  }
  user_roles_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_roles);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoUserRoles.user_roles)
}

inline const InfoUserRoles* InfoUserRoles::internal_default_instance() {
  return &InfoUserRoles_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoWorkUnit::kWorkUnitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoWorkUnit::InfoWorkUnit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoWorkUnit)
}

void InfoWorkUnit::InitAsDefaultInstance() {
}

InfoWorkUnit::InfoWorkUnit(const InfoWorkUnit& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoWorkUnit)
}

void InfoWorkUnit::SharedCtor() {
  workunit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoWorkUnit::~InfoWorkUnit() {
  // @@protoc_insertion_point(destructor:personal.InfoWorkUnit)
  SharedDtor();
}

void InfoWorkUnit::SharedDtor() {
  workunit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoWorkUnit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoWorkUnit::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoWorkUnit_descriptor_;
}

const InfoWorkUnit& InfoWorkUnit::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoWorkUnit> InfoWorkUnit_default_instance_;

InfoWorkUnit* InfoWorkUnit::New(::google::protobuf::Arena* arena) const {
  InfoWorkUnit* n = new InfoWorkUnit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoWorkUnit::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoWorkUnit)
  workunit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoWorkUnit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoWorkUnit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string workUnit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_workunit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->workunit().data(), this->workunit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoWorkUnit.workUnit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoWorkUnit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoWorkUnit)
  return false;
#undef DO_
}

void InfoWorkUnit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoWorkUnit)
  // optional string workUnit = 1;
  if (this->workunit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workunit().data(), this->workunit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoWorkUnit.workUnit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->workunit(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoWorkUnit)
}

::google::protobuf::uint8* InfoWorkUnit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoWorkUnit)
  // optional string workUnit = 1;
  if (this->workunit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->workunit().data(), this->workunit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoWorkUnit.workUnit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->workunit(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoWorkUnit)
  return target;
}

size_t InfoWorkUnit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoWorkUnit)
  size_t total_size = 0;

  // optional string workUnit = 1;
  if (this->workunit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->workunit());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoWorkUnit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoWorkUnit)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoWorkUnit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoWorkUnit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoWorkUnit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoWorkUnit)
    UnsafeMergeFrom(*source);
  }
}

void InfoWorkUnit::MergeFrom(const InfoWorkUnit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoWorkUnit)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoWorkUnit::UnsafeMergeFrom(const InfoWorkUnit& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.workunit().size() > 0) {

    workunit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.workunit_);
  }
}

void InfoWorkUnit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoWorkUnit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoWorkUnit::CopyFrom(const InfoWorkUnit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoWorkUnit)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoWorkUnit::IsInitialized() const {

  return true;
}

void InfoWorkUnit::Swap(InfoWorkUnit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoWorkUnit::InternalSwap(InfoWorkUnit* other) {
  workunit_.Swap(&other->workunit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoWorkUnit::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoWorkUnit_descriptor_;
  metadata.reflection = InfoWorkUnit_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoWorkUnit

// optional string workUnit = 1;
void InfoWorkUnit::clear_workunit() {
  workunit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoWorkUnit::workunit() const {
  // @@protoc_insertion_point(field_get:personal.InfoWorkUnit.workUnit)
  return workunit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoWorkUnit::set_workunit(const ::std::string& value) {
  
  workunit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoWorkUnit.workUnit)
}
void InfoWorkUnit::set_workunit(const char* value) {
  
  workunit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoWorkUnit.workUnit)
}
void InfoWorkUnit::set_workunit(const char* value, size_t size) {
  
  workunit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoWorkUnit.workUnit)
}
::std::string* InfoWorkUnit::mutable_workunit() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoWorkUnit.workUnit)
  return workunit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoWorkUnit::release_workunit() {
  // @@protoc_insertion_point(field_release:personal.InfoWorkUnit.workUnit)
  
  return workunit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoWorkUnit::set_allocated_workunit(::std::string* workunit) {
  if (workunit != NULL) {
    
  } else {
    
  }
  workunit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), workunit);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoWorkUnit.workUnit)
}

inline const InfoWorkUnit* InfoWorkUnit::internal_default_instance() {
  return &InfoWorkUnit_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoEducationLevel::kEducationLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoEducationLevel::InfoEducationLevel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoEducationLevel)
}

void InfoEducationLevel::InitAsDefaultInstance() {
}

InfoEducationLevel::InfoEducationLevel(const InfoEducationLevel& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoEducationLevel)
}

void InfoEducationLevel::SharedCtor() {
  educationlevel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoEducationLevel::~InfoEducationLevel() {
  // @@protoc_insertion_point(destructor:personal.InfoEducationLevel)
  SharedDtor();
}

void InfoEducationLevel::SharedDtor() {
  educationlevel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoEducationLevel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoEducationLevel::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoEducationLevel_descriptor_;
}

const InfoEducationLevel& InfoEducationLevel::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoEducationLevel> InfoEducationLevel_default_instance_;

InfoEducationLevel* InfoEducationLevel::New(::google::protobuf::Arena* arena) const {
  InfoEducationLevel* n = new InfoEducationLevel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoEducationLevel::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoEducationLevel)
  educationlevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoEducationLevel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoEducationLevel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string educationLevel = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_educationlevel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->educationlevel().data(), this->educationlevel().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoEducationLevel.educationLevel"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoEducationLevel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoEducationLevel)
  return false;
#undef DO_
}

void InfoEducationLevel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoEducationLevel)
  // optional string educationLevel = 1;
  if (this->educationlevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->educationlevel().data(), this->educationlevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoEducationLevel.educationLevel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->educationlevel(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoEducationLevel)
}

::google::protobuf::uint8* InfoEducationLevel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoEducationLevel)
  // optional string educationLevel = 1;
  if (this->educationlevel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->educationlevel().data(), this->educationlevel().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoEducationLevel.educationLevel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->educationlevel(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoEducationLevel)
  return target;
}

size_t InfoEducationLevel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoEducationLevel)
  size_t total_size = 0;

  // optional string educationLevel = 1;
  if (this->educationlevel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->educationlevel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoEducationLevel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoEducationLevel)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoEducationLevel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoEducationLevel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoEducationLevel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoEducationLevel)
    UnsafeMergeFrom(*source);
  }
}

void InfoEducationLevel::MergeFrom(const InfoEducationLevel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoEducationLevel)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoEducationLevel::UnsafeMergeFrom(const InfoEducationLevel& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.educationlevel().size() > 0) {

    educationlevel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.educationlevel_);
  }
}

void InfoEducationLevel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoEducationLevel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoEducationLevel::CopyFrom(const InfoEducationLevel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoEducationLevel)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoEducationLevel::IsInitialized() const {

  return true;
}

void InfoEducationLevel::Swap(InfoEducationLevel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoEducationLevel::InternalSwap(InfoEducationLevel* other) {
  educationlevel_.Swap(&other->educationlevel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoEducationLevel::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoEducationLevel_descriptor_;
  metadata.reflection = InfoEducationLevel_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoEducationLevel

// optional string educationLevel = 1;
void InfoEducationLevel::clear_educationlevel() {
  educationlevel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoEducationLevel::educationlevel() const {
  // @@protoc_insertion_point(field_get:personal.InfoEducationLevel.educationLevel)
  return educationlevel_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoEducationLevel::set_educationlevel(const ::std::string& value) {
  
  educationlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoEducationLevel.educationLevel)
}
void InfoEducationLevel::set_educationlevel(const char* value) {
  
  educationlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoEducationLevel.educationLevel)
}
void InfoEducationLevel::set_educationlevel(const char* value, size_t size) {
  
  educationlevel_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoEducationLevel.educationLevel)
}
::std::string* InfoEducationLevel::mutable_educationlevel() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoEducationLevel.educationLevel)
  return educationlevel_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoEducationLevel::release_educationlevel() {
  // @@protoc_insertion_point(field_release:personal.InfoEducationLevel.educationLevel)
  
  return educationlevel_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoEducationLevel::set_allocated_educationlevel(::std::string* educationlevel) {
  if (educationlevel != NULL) {
    
  } else {
    
  }
  educationlevel_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), educationlevel);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoEducationLevel.educationLevel)
}

inline const InfoEducationLevel* InfoEducationLevel::internal_default_instance() {
  return &InfoEducationLevel_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoGraduatedSchool::kGraduatedSchoolFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoGraduatedSchool::InfoGraduatedSchool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoGraduatedSchool)
}

void InfoGraduatedSchool::InitAsDefaultInstance() {
}

InfoGraduatedSchool::InfoGraduatedSchool(const InfoGraduatedSchool& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoGraduatedSchool)
}

void InfoGraduatedSchool::SharedCtor() {
  graduated_school_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoGraduatedSchool::~InfoGraduatedSchool() {
  // @@protoc_insertion_point(destructor:personal.InfoGraduatedSchool)
  SharedDtor();
}

void InfoGraduatedSchool::SharedDtor() {
  graduated_school_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoGraduatedSchool::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoGraduatedSchool::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoGraduatedSchool_descriptor_;
}

const InfoGraduatedSchool& InfoGraduatedSchool::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoGraduatedSchool> InfoGraduatedSchool_default_instance_;

InfoGraduatedSchool* InfoGraduatedSchool::New(::google::protobuf::Arena* arena) const {
  InfoGraduatedSchool* n = new InfoGraduatedSchool;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoGraduatedSchool::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoGraduatedSchool)
  graduated_school_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoGraduatedSchool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoGraduatedSchool)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string graduated_school = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_graduated_school()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->graduated_school().data(), this->graduated_school().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoGraduatedSchool.graduated_school"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoGraduatedSchool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoGraduatedSchool)
  return false;
#undef DO_
}

void InfoGraduatedSchool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoGraduatedSchool)
  // optional string graduated_school = 1;
  if (this->graduated_school().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graduated_school().data(), this->graduated_school().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoGraduatedSchool.graduated_school");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->graduated_school(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoGraduatedSchool)
}

::google::protobuf::uint8* InfoGraduatedSchool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoGraduatedSchool)
  // optional string graduated_school = 1;
  if (this->graduated_school().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->graduated_school().data(), this->graduated_school().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoGraduatedSchool.graduated_school");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->graduated_school(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoGraduatedSchool)
  return target;
}

size_t InfoGraduatedSchool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoGraduatedSchool)
  size_t total_size = 0;

  // optional string graduated_school = 1;
  if (this->graduated_school().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->graduated_school());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoGraduatedSchool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoGraduatedSchool)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoGraduatedSchool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoGraduatedSchool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoGraduatedSchool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoGraduatedSchool)
    UnsafeMergeFrom(*source);
  }
}

void InfoGraduatedSchool::MergeFrom(const InfoGraduatedSchool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoGraduatedSchool)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoGraduatedSchool::UnsafeMergeFrom(const InfoGraduatedSchool& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.graduated_school().size() > 0) {

    graduated_school_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.graduated_school_);
  }
}

void InfoGraduatedSchool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoGraduatedSchool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoGraduatedSchool::CopyFrom(const InfoGraduatedSchool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoGraduatedSchool)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoGraduatedSchool::IsInitialized() const {

  return true;
}

void InfoGraduatedSchool::Swap(InfoGraduatedSchool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoGraduatedSchool::InternalSwap(InfoGraduatedSchool* other) {
  graduated_school_.Swap(&other->graduated_school_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoGraduatedSchool::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoGraduatedSchool_descriptor_;
  metadata.reflection = InfoGraduatedSchool_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoGraduatedSchool

// optional string graduated_school = 1;
void InfoGraduatedSchool::clear_graduated_school() {
  graduated_school_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoGraduatedSchool::graduated_school() const {
  // @@protoc_insertion_point(field_get:personal.InfoGraduatedSchool.graduated_school)
  return graduated_school_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoGraduatedSchool::set_graduated_school(const ::std::string& value) {
  
  graduated_school_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoGraduatedSchool.graduated_school)
}
void InfoGraduatedSchool::set_graduated_school(const char* value) {
  
  graduated_school_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoGraduatedSchool.graduated_school)
}
void InfoGraduatedSchool::set_graduated_school(const char* value, size_t size) {
  
  graduated_school_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoGraduatedSchool.graduated_school)
}
::std::string* InfoGraduatedSchool::mutable_graduated_school() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoGraduatedSchool.graduated_school)
  return graduated_school_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoGraduatedSchool::release_graduated_school() {
  // @@protoc_insertion_point(field_release:personal.InfoGraduatedSchool.graduated_school)
  
  return graduated_school_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoGraduatedSchool::set_allocated_graduated_school(::std::string* graduated_school) {
  if (graduated_school != NULL) {
    
  } else {
    
  }
  graduated_school_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), graduated_school);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoGraduatedSchool.graduated_school)
}

inline const InfoGraduatedSchool* InfoGraduatedSchool::internal_default_instance() {
  return &InfoGraduatedSchool_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoAward::kAwardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoAward::InfoAward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoAward)
}

void InfoAward::InitAsDefaultInstance() {
}

InfoAward::InfoAward(const InfoAward& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoAward)
}

void InfoAward::SharedCtor() {
  award_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoAward::~InfoAward() {
  // @@protoc_insertion_point(destructor:personal.InfoAward)
  SharedDtor();
}

void InfoAward::SharedDtor() {
  award_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoAward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoAward::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoAward_descriptor_;
}

const InfoAward& InfoAward::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoAward> InfoAward_default_instance_;

InfoAward* InfoAward::New(::google::protobuf::Arena* arena) const {
  InfoAward* n = new InfoAward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoAward::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoAward)
  award_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoAward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoAward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string award = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_award()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->award().data(), this->award().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoAward.award"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoAward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoAward)
  return false;
#undef DO_
}

void InfoAward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoAward)
  // optional string award = 1;
  if (this->award().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->award().data(), this->award().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoAward.award");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->award(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoAward)
}

::google::protobuf::uint8* InfoAward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoAward)
  // optional string award = 1;
  if (this->award().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->award().data(), this->award().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoAward.award");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->award(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoAward)
  return target;
}

size_t InfoAward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoAward)
  size_t total_size = 0;

  // optional string award = 1;
  if (this->award().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->award());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoAward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoAward)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoAward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoAward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoAward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoAward)
    UnsafeMergeFrom(*source);
  }
}

void InfoAward::MergeFrom(const InfoAward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoAward)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoAward::UnsafeMergeFrom(const InfoAward& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.award().size() > 0) {

    award_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.award_);
  }
}

void InfoAward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoAward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoAward::CopyFrom(const InfoAward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoAward)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoAward::IsInitialized() const {

  return true;
}

void InfoAward::Swap(InfoAward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoAward::InternalSwap(InfoAward* other) {
  award_.Swap(&other->award_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoAward::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoAward_descriptor_;
  metadata.reflection = InfoAward_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoAward

// optional string award = 1;
void InfoAward::clear_award() {
  award_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoAward::award() const {
  // @@protoc_insertion_point(field_get:personal.InfoAward.award)
  return award_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoAward::set_award(const ::std::string& value) {
  
  award_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoAward.award)
}
void InfoAward::set_award(const char* value) {
  
  award_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoAward.award)
}
void InfoAward::set_award(const char* value, size_t size) {
  
  award_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoAward.award)
}
::std::string* InfoAward::mutable_award() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoAward.award)
  return award_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoAward::release_award() {
  // @@protoc_insertion_point(field_release:personal.InfoAward.award)
  
  return award_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoAward::set_allocated_award(::std::string* award) {
  if (award != NULL) {
    
  } else {
    
  }
  award_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), award);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoAward.award)
}

inline const InfoAward* InfoAward::internal_default_instance() {
  return &InfoAward_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoSubject::kSubjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoSubject::InfoSubject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoSubject)
}

void InfoSubject::InitAsDefaultInstance() {
}

InfoSubject::InfoSubject(const InfoSubject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoSubject)
}

void InfoSubject::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoSubject::~InfoSubject() {
  // @@protoc_insertion_point(destructor:personal.InfoSubject)
  SharedDtor();
}

void InfoSubject::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoSubject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoSubject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoSubject_descriptor_;
}

const InfoSubject& InfoSubject::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoSubject> InfoSubject_default_instance_;

InfoSubject* InfoSubject::New(::google::protobuf::Arena* arena) const {
  InfoSubject* n = new InfoSubject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoSubject::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoSubject)
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoSubject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoSubject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string subject = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), this->subject().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoSubject.subject"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoSubject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoSubject)
  return false;
#undef DO_
}

void InfoSubject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoSubject)
  // optional string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoSubject.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->subject(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoSubject)
}

::google::protobuf::uint8* InfoSubject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoSubject)
  // optional string subject = 1;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), this->subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoSubject.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->subject(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoSubject)
  return target;
}

size_t InfoSubject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoSubject)
  size_t total_size = 0;

  // optional string subject = 1;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoSubject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoSubject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoSubject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoSubject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoSubject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoSubject)
    UnsafeMergeFrom(*source);
  }
}

void InfoSubject::MergeFrom(const InfoSubject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoSubject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoSubject::UnsafeMergeFrom(const InfoSubject& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
}

void InfoSubject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoSubject::CopyFrom(const InfoSubject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoSubject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoSubject::IsInitialized() const {

  return true;
}

void InfoSubject::Swap(InfoSubject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoSubject::InternalSwap(InfoSubject* other) {
  subject_.Swap(&other->subject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoSubject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoSubject_descriptor_;
  metadata.reflection = InfoSubject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoSubject

// optional string subject = 1;
void InfoSubject::clear_subject() {
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoSubject::subject() const {
  // @@protoc_insertion_point(field_get:personal.InfoSubject.subject)
  return subject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoSubject::set_subject(const ::std::string& value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoSubject.subject)
}
void InfoSubject::set_subject(const char* value) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoSubject.subject)
}
void InfoSubject::set_subject(const char* value, size_t size) {
  
  subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoSubject.subject)
}
::std::string* InfoSubject::mutable_subject() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoSubject.subject)
  return subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoSubject::release_subject() {
  // @@protoc_insertion_point(field_release:personal.InfoSubject.subject)
  
  return subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoSubject::set_allocated_subject(::std::string* subject) {
  if (subject != NULL) {
    
  } else {
    
  }
  subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subject);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoSubject.subject)
}

inline const InfoSubject* InfoSubject::internal_default_instance() {
  return &InfoSubject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoInterestSubject::kInterestSubjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoInterestSubject::InfoInterestSubject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoInterestSubject)
}

void InfoInterestSubject::InitAsDefaultInstance() {
}

InfoInterestSubject::InfoInterestSubject(const InfoInterestSubject& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoInterestSubject)
}

void InfoInterestSubject::SharedCtor() {
  interest_subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoInterestSubject::~InfoInterestSubject() {
  // @@protoc_insertion_point(destructor:personal.InfoInterestSubject)
  SharedDtor();
}

void InfoInterestSubject::SharedDtor() {
  interest_subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoInterestSubject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoInterestSubject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoInterestSubject_descriptor_;
}

const InfoInterestSubject& InfoInterestSubject::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoInterestSubject> InfoInterestSubject_default_instance_;

InfoInterestSubject* InfoInterestSubject::New(::google::protobuf::Arena* arena) const {
  InfoInterestSubject* n = new InfoInterestSubject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoInterestSubject::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoInterestSubject)
  interest_subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoInterestSubject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoInterestSubject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string interest_subject = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interest_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interest_subject().data(), this->interest_subject().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoInterestSubject.interest_subject"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoInterestSubject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoInterestSubject)
  return false;
#undef DO_
}

void InfoInterestSubject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoInterestSubject)
  // optional string interest_subject = 1;
  if (this->interest_subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interest_subject().data(), this->interest_subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoInterestSubject.interest_subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interest_subject(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoInterestSubject)
}

::google::protobuf::uint8* InfoInterestSubject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoInterestSubject)
  // optional string interest_subject = 1;
  if (this->interest_subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interest_subject().data(), this->interest_subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoInterestSubject.interest_subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interest_subject(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoInterestSubject)
  return target;
}

size_t InfoInterestSubject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoInterestSubject)
  size_t total_size = 0;

  // optional string interest_subject = 1;
  if (this->interest_subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interest_subject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoInterestSubject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoInterestSubject)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoInterestSubject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoInterestSubject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoInterestSubject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoInterestSubject)
    UnsafeMergeFrom(*source);
  }
}

void InfoInterestSubject::MergeFrom(const InfoInterestSubject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoInterestSubject)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoInterestSubject::UnsafeMergeFrom(const InfoInterestSubject& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.interest_subject().size() > 0) {

    interest_subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interest_subject_);
  }
}

void InfoInterestSubject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoInterestSubject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoInterestSubject::CopyFrom(const InfoInterestSubject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoInterestSubject)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoInterestSubject::IsInitialized() const {

  return true;
}

void InfoInterestSubject::Swap(InfoInterestSubject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoInterestSubject::InternalSwap(InfoInterestSubject* other) {
  interest_subject_.Swap(&other->interest_subject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoInterestSubject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoInterestSubject_descriptor_;
  metadata.reflection = InfoInterestSubject_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoInterestSubject

// optional string interest_subject = 1;
void InfoInterestSubject::clear_interest_subject() {
  interest_subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoInterestSubject::interest_subject() const {
  // @@protoc_insertion_point(field_get:personal.InfoInterestSubject.interest_subject)
  return interest_subject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoInterestSubject::set_interest_subject(const ::std::string& value) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoInterestSubject.interest_subject)
}
void InfoInterestSubject::set_interest_subject(const char* value) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoInterestSubject.interest_subject)
}
void InfoInterestSubject::set_interest_subject(const char* value, size_t size) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoInterestSubject.interest_subject)
}
::std::string* InfoInterestSubject::mutable_interest_subject() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoInterestSubject.interest_subject)
  return interest_subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoInterestSubject::release_interest_subject() {
  // @@protoc_insertion_point(field_release:personal.InfoInterestSubject.interest_subject)
  
  return interest_subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoInterestSubject::set_allocated_interest_subject(::std::string* interest_subject) {
  if (interest_subject != NULL) {
    
  } else {
    
  }
  interest_subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interest_subject);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoInterestSubject.interest_subject)
}

inline const InfoInterestSubject* InfoInterestSubject::internal_default_instance() {
  return &InfoInterestSubject_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoEmail::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoEmail::InfoEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoEmail)
}

void InfoEmail::InitAsDefaultInstance() {
}

InfoEmail::InfoEmail(const InfoEmail& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoEmail)
}

void InfoEmail::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoEmail::~InfoEmail() {
  // @@protoc_insertion_point(destructor:personal.InfoEmail)
  SharedDtor();
}

void InfoEmail::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoEmail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoEmail::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoEmail_descriptor_;
}

const InfoEmail& InfoEmail::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoEmail> InfoEmail_default_instance_;

InfoEmail* InfoEmail::New(::google::protobuf::Arena* arena) const {
  InfoEmail* n = new InfoEmail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoEmail)
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoEmail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoEmail.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoEmail)
  return false;
#undef DO_
}

void InfoEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoEmail)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoEmail.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoEmail)
}

::google::protobuf::uint8* InfoEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoEmail)
  // optional string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoEmail.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoEmail)
  return target;
}

size_t InfoEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoEmail)
  size_t total_size = 0;

  // optional string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoEmail)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoEmail)
    UnsafeMergeFrom(*source);
  }
}

void InfoEmail::MergeFrom(const InfoEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoEmail)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoEmail::UnsafeMergeFrom(const InfoEmail& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void InfoEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoEmail::CopyFrom(const InfoEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoEmail)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoEmail::IsInitialized() const {

  return true;
}

void InfoEmail::Swap(InfoEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoEmail::InternalSwap(InfoEmail* other) {
  email_.Swap(&other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoEmail::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoEmail_descriptor_;
  metadata.reflection = InfoEmail_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoEmail

// optional string email = 1;
void InfoEmail::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoEmail::email() const {
  // @@protoc_insertion_point(field_get:personal.InfoEmail.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoEmail::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoEmail.email)
}
void InfoEmail::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoEmail.email)
}
void InfoEmail::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoEmail.email)
}
::std::string* InfoEmail::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoEmail.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoEmail::release_email() {
  // @@protoc_insertion_point(field_release:personal.InfoEmail.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoEmail::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoEmail.email)
}

inline const InfoEmail* InfoEmail::internal_default_instance() {
  return &InfoEmail_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InfoAvatar::kAvatarUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InfoAvatar::InfoAvatar()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.InfoAvatar)
}

void InfoAvatar::InitAsDefaultInstance() {
}

InfoAvatar::InfoAvatar(const InfoAvatar& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.InfoAvatar)
}

void InfoAvatar::SharedCtor() {
  avatar_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

InfoAvatar::~InfoAvatar() {
  // @@protoc_insertion_point(destructor:personal.InfoAvatar)
  SharedDtor();
}

void InfoAvatar::SharedDtor() {
  avatar_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InfoAvatar::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InfoAvatar::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InfoAvatar_descriptor_;
}

const InfoAvatar& InfoAvatar::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fpersonInfo_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<InfoAvatar> InfoAvatar_default_instance_;

InfoAvatar* InfoAvatar::New(::google::protobuf::Arena* arena) const {
  InfoAvatar* n = new InfoAvatar;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InfoAvatar::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.InfoAvatar)
  avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool InfoAvatar::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.InfoAvatar)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string avatar_url = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_url().data(), this->avatar_url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.InfoAvatar.avatar_url"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.InfoAvatar)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.InfoAvatar)
  return false;
#undef DO_
}

void InfoAvatar::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.InfoAvatar)
  // optional string avatar_url = 1;
  if (this->avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_url().data(), this->avatar_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoAvatar.avatar_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->avatar_url(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.InfoAvatar)
}

::google::protobuf::uint8* InfoAvatar::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.InfoAvatar)
  // optional string avatar_url = 1;
  if (this->avatar_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_url().data(), this->avatar_url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.InfoAvatar.avatar_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->avatar_url(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.InfoAvatar)
  return target;
}

size_t InfoAvatar::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.InfoAvatar)
  size_t total_size = 0;

  // optional string avatar_url = 1;
  if (this->avatar_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InfoAvatar::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.InfoAvatar)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const InfoAvatar* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InfoAvatar>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.InfoAvatar)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.InfoAvatar)
    UnsafeMergeFrom(*source);
  }
}

void InfoAvatar::MergeFrom(const InfoAvatar& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.InfoAvatar)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void InfoAvatar::UnsafeMergeFrom(const InfoAvatar& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.avatar_url().size() > 0) {

    avatar_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_url_);
  }
}

void InfoAvatar::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.InfoAvatar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InfoAvatar::CopyFrom(const InfoAvatar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.InfoAvatar)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool InfoAvatar::IsInitialized() const {

  return true;
}

void InfoAvatar::Swap(InfoAvatar* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InfoAvatar::InternalSwap(InfoAvatar* other) {
  avatar_url_.Swap(&other->avatar_url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InfoAvatar::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InfoAvatar_descriptor_;
  metadata.reflection = InfoAvatar_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InfoAvatar

// optional string avatar_url = 1;
void InfoAvatar::clear_avatar_url() {
  avatar_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& InfoAvatar::avatar_url() const {
  // @@protoc_insertion_point(field_get:personal.InfoAvatar.avatar_url)
  return avatar_url_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoAvatar::set_avatar_url(const ::std::string& value) {
  
  avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.InfoAvatar.avatar_url)
}
void InfoAvatar::set_avatar_url(const char* value) {
  
  avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.InfoAvatar.avatar_url)
}
void InfoAvatar::set_avatar_url(const char* value, size_t size) {
  
  avatar_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.InfoAvatar.avatar_url)
}
::std::string* InfoAvatar::mutable_avatar_url() {
  
  // @@protoc_insertion_point(field_mutable:personal.InfoAvatar.avatar_url)
  return avatar_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InfoAvatar::release_avatar_url() {
  // @@protoc_insertion_point(field_release:personal.InfoAvatar.avatar_url)
  
  return avatar_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InfoAvatar::set_allocated_avatar_url(::std::string* avatar_url) {
  if (avatar_url != NULL) {
    
  } else {
    
  }
  avatar_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_url);
  // @@protoc_insertion_point(field_set_allocated:personal.InfoAvatar.avatar_url)
}

inline const InfoAvatar* InfoAvatar::internal_default_instance() {
  return &InfoAvatar_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)
