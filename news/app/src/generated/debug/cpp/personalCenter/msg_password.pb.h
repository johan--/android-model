// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_password.proto

#ifndef PROTOBUF_personalCenter_2fmsg_5fpassword_2eproto__INCLUDED
#define PROTOBUF_personalCenter_2fmsg_5fpassword_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto();
void protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto();
void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

class PasswordByEmailRequest;
class PasswordByEmailResponse;
class PasswordByPhoneRequest;
class PasswordByPhoneResponse;
class PasswordEmailRequest;
class PasswordEmailResponse;
class PasswordUpdateRequest;
class PasswordUpdateResponse;
class PasswordVerifyRequest;
class PasswordVerifyResponse;

// ===================================================================

class PasswordByEmailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordByEmailRequest) */ {
 public:
  PasswordByEmailRequest();
  virtual ~PasswordByEmailRequest();

  PasswordByEmailRequest(const PasswordByEmailRequest& from);

  inline PasswordByEmailRequest& operator=(const PasswordByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordByEmailRequest& default_instance();

  enum FieldOneofCase {
    kUserName = 3,
    kEmail = 4,
    FIELD_ONEOF_NOT_SET = 0,
  };

  static const PasswordByEmailRequest* internal_default_instance();

  void Swap(PasswordByEmailRequest* other);

  // implements Message ----------------------------------------------

  inline PasswordByEmailRequest* New() const { return New(NULL); }

  PasswordByEmailRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordByEmailRequest& from);
  void MergeFrom(const PasswordByEmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordByEmailRequest* other);
  void UnsafeMergeFrom(const PasswordByEmailRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_name = 3;
  private:
  bool has_user_name() const;
  public:
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional string email = 4;
  private:
  bool has_email() const;
  public:
  void clear_email();
  static const int kEmailFieldNumber = 4;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  FieldOneofCase field_oneof_case() const;
  // @@protoc_insertion_point(class_scope:personal.PasswordByEmailRequest)
 private:
  inline void set_has_user_name();
  inline void set_has_email();

  inline bool has_field_oneof() const;
  void clear_field_oneof();
  inline void clear_has_field_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  union FieldOneofUnion {
    FieldOneofUnion() {}
    ::google::protobuf::internal::ArenaStringPtr user_name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
  } field_oneof_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordByEmailRequest> PasswordByEmailRequest_default_instance_;

// -------------------------------------------------------------------

class PasswordByEmailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordByEmailResponse) */ {
 public:
  PasswordByEmailResponse();
  virtual ~PasswordByEmailResponse();

  PasswordByEmailResponse(const PasswordByEmailResponse& from);

  inline PasswordByEmailResponse& operator=(const PasswordByEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordByEmailResponse& default_instance();

  static const PasswordByEmailResponse* internal_default_instance();

  void Swap(PasswordByEmailResponse* other);

  // implements Message ----------------------------------------------

  inline PasswordByEmailResponse* New() const { return New(NULL); }

  PasswordByEmailResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordByEmailResponse& from);
  void MergeFrom(const PasswordByEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordByEmailResponse* other);
  void UnsafeMergeFrom(const PasswordByEmailResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // optional string user_name = 2;
  void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // optional .grpcCommon.GrpcError error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PasswordByEmailResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordByEmailResponse> PasswordByEmailResponse_default_instance_;

// -------------------------------------------------------------------

class PasswordEmailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordEmailRequest) */ {
 public:
  PasswordEmailRequest();
  virtual ~PasswordEmailRequest();

  PasswordEmailRequest(const PasswordEmailRequest& from);

  inline PasswordEmailRequest& operator=(const PasswordEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordEmailRequest& default_instance();

  static const PasswordEmailRequest* internal_default_instance();

  void Swap(PasswordEmailRequest* other);

  // implements Message ----------------------------------------------

  inline PasswordEmailRequest* New() const { return New(NULL); }

  PasswordEmailRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordEmailRequest& from);
  void MergeFrom(const PasswordEmailRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordEmailRequest* other);
  void UnsafeMergeFrom(const PasswordEmailRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string email = 1;
  void clear_email();
  static const int kEmailFieldNumber = 1;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // @@protoc_insertion_point(class_scope:personal.PasswordEmailRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordEmailRequest> PasswordEmailRequest_default_instance_;

// -------------------------------------------------------------------

class PasswordEmailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordEmailResponse) */ {
 public:
  PasswordEmailResponse();
  virtual ~PasswordEmailResponse();

  PasswordEmailResponse(const PasswordEmailResponse& from);

  inline PasswordEmailResponse& operator=(const PasswordEmailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordEmailResponse& default_instance();

  static const PasswordEmailResponse* internal_default_instance();

  void Swap(PasswordEmailResponse* other);

  // implements Message ----------------------------------------------

  inline PasswordEmailResponse* New() const { return New(NULL); }

  PasswordEmailResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordEmailResponse& from);
  void MergeFrom(const PasswordEmailResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordEmailResponse* other);
  void UnsafeMergeFrom(const PasswordEmailResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .grpcCommon.GrpcError error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PasswordEmailResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordEmailResponse> PasswordEmailResponse_default_instance_;

// -------------------------------------------------------------------

class PasswordByPhoneRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordByPhoneRequest) */ {
 public:
  PasswordByPhoneRequest();
  virtual ~PasswordByPhoneRequest();

  PasswordByPhoneRequest(const PasswordByPhoneRequest& from);

  inline PasswordByPhoneRequest& operator=(const PasswordByPhoneRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordByPhoneRequest& default_instance();

  static const PasswordByPhoneRequest* internal_default_instance();

  void Swap(PasswordByPhoneRequest* other);

  // implements Message ----------------------------------------------

  inline PasswordByPhoneRequest* New() const { return New(NULL); }

  PasswordByPhoneRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordByPhoneRequest& from);
  void MergeFrom(const PasswordByPhoneRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordByPhoneRequest* other);
  void UnsafeMergeFrom(const PasswordByPhoneRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone_number = 1;
  void clear_phone_number();
  static const int kPhoneNumberFieldNumber = 1;
  const ::std::string& phone_number() const;
  void set_phone_number(const ::std::string& value);
  void set_phone_number(const char* value);
  void set_phone_number(const char* value, size_t size);
  ::std::string* mutable_phone_number();
  ::std::string* release_phone_number();
  void set_allocated_phone_number(::std::string* phone_number);

  // @@protoc_insertion_point(class_scope:personal.PasswordByPhoneRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_number_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordByPhoneRequest> PasswordByPhoneRequest_default_instance_;

// -------------------------------------------------------------------

class PasswordByPhoneResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordByPhoneResponse) */ {
 public:
  PasswordByPhoneResponse();
  virtual ~PasswordByPhoneResponse();

  PasswordByPhoneResponse(const PasswordByPhoneResponse& from);

  inline PasswordByPhoneResponse& operator=(const PasswordByPhoneResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordByPhoneResponse& default_instance();

  static const PasswordByPhoneResponse* internal_default_instance();

  void Swap(PasswordByPhoneResponse* other);

  // implements Message ----------------------------------------------

  inline PasswordByPhoneResponse* New() const { return New(NULL); }

  PasswordByPhoneResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordByPhoneResponse& from);
  void MergeFrom(const PasswordByPhoneResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordByPhoneResponse* other);
  void UnsafeMergeFrom(const PasswordByPhoneResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PasswordByPhoneResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordByPhoneResponse> PasswordByPhoneResponse_default_instance_;

// -------------------------------------------------------------------

class PasswordUpdateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordUpdateRequest) */ {
 public:
  PasswordUpdateRequest();
  virtual ~PasswordUpdateRequest();

  PasswordUpdateRequest(const PasswordUpdateRequest& from);

  inline PasswordUpdateRequest& operator=(const PasswordUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordUpdateRequest& default_instance();

  static const PasswordUpdateRequest* internal_default_instance();

  void Swap(PasswordUpdateRequest* other);

  // implements Message ----------------------------------------------

  inline PasswordUpdateRequest* New() const { return New(NULL); }

  PasswordUpdateRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordUpdateRequest& from);
  void MergeFrom(const PasswordUpdateRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordUpdateRequest* other);
  void UnsafeMergeFrom(const PasswordUpdateRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string new_password = 2;
  void clear_new_password();
  static const int kNewPasswordFieldNumber = 2;
  const ::std::string& new_password() const;
  void set_new_password(const ::std::string& value);
  void set_new_password(const char* value);
  void set_new_password(const char* value, size_t size);
  ::std::string* mutable_new_password();
  ::std::string* release_new_password();
  void set_allocated_new_password(::std::string* new_password);

  // @@protoc_insertion_point(class_scope:personal.PasswordUpdateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr new_password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateRequest> PasswordUpdateRequest_default_instance_;

// -------------------------------------------------------------------

class PasswordUpdateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordUpdateResponse) */ {
 public:
  PasswordUpdateResponse();
  virtual ~PasswordUpdateResponse();

  PasswordUpdateResponse(const PasswordUpdateResponse& from);

  inline PasswordUpdateResponse& operator=(const PasswordUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordUpdateResponse& default_instance();

  static const PasswordUpdateResponse* internal_default_instance();

  void Swap(PasswordUpdateResponse* other);

  // implements Message ----------------------------------------------

  inline PasswordUpdateResponse* New() const { return New(NULL); }

  PasswordUpdateResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordUpdateResponse& from);
  void MergeFrom(const PasswordUpdateResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordUpdateResponse* other);
  void UnsafeMergeFrom(const PasswordUpdateResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .grpcCommon.GrpcError error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PasswordUpdateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordUpdateResponse> PasswordUpdateResponse_default_instance_;

// -------------------------------------------------------------------

class PasswordVerifyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordVerifyRequest) */ {
 public:
  PasswordVerifyRequest();
  virtual ~PasswordVerifyRequest();

  PasswordVerifyRequest(const PasswordVerifyRequest& from);

  inline PasswordVerifyRequest& operator=(const PasswordVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordVerifyRequest& default_instance();

  static const PasswordVerifyRequest* internal_default_instance();

  void Swap(PasswordVerifyRequest* other);

  // implements Message ----------------------------------------------

  inline PasswordVerifyRequest* New() const { return New(NULL); }

  PasswordVerifyRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordVerifyRequest& from);
  void MergeFrom(const PasswordVerifyRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordVerifyRequest* other);
  void UnsafeMergeFrom(const PasswordVerifyRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:personal.PasswordVerifyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordVerifyRequest> PasswordVerifyRequest_default_instance_;

// -------------------------------------------------------------------

class PasswordVerifyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PasswordVerifyResponse) */ {
 public:
  PasswordVerifyResponse();
  virtual ~PasswordVerifyResponse();

  PasswordVerifyResponse(const PasswordVerifyResponse& from);

  inline PasswordVerifyResponse& operator=(const PasswordVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PasswordVerifyResponse& default_instance();

  static const PasswordVerifyResponse* internal_default_instance();

  void Swap(PasswordVerifyResponse* other);

  // implements Message ----------------------------------------------

  inline PasswordVerifyResponse* New() const { return New(NULL); }

  PasswordVerifyResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PasswordVerifyResponse& from);
  void MergeFrom(const PasswordVerifyResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PasswordVerifyResponse* other);
  void UnsafeMergeFrom(const PasswordVerifyResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_right = 1;
  void clear_is_right();
  static const int kIsRightFieldNumber = 1;
  bool is_right() const;
  void set_is_right(bool value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PasswordVerifyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  bool is_right_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fpassword_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fpassword_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fpassword_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PasswordVerifyResponse> PasswordVerifyResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PasswordByEmailRequest

// optional string user_name = 3;
inline bool PasswordByEmailRequest::has_user_name() const {
  return field_oneof_case() == kUserName;
}
inline void PasswordByEmailRequest::set_has_user_name() {
  _oneof_case_[0] = kUserName;
}
inline void PasswordByEmailRequest::clear_user_name() {
  if (has_user_name()) {
    field_oneof_.user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_field_oneof();
  }
}
inline const ::std::string& PasswordByEmailRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailRequest.user_name)
  if (has_user_name()) {
    return field_oneof_.user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PasswordByEmailRequest::set_user_name(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.user_name)
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.user_name)
}
inline void PasswordByEmailRequest::set_user_name(const char* value) {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailRequest.user_name)
}
inline void PasswordByEmailRequest::set_user_name(const char* value, size_t size) {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailRequest.user_name)
}
inline ::std::string* PasswordByEmailRequest::mutable_user_name() {
  if (!has_user_name()) {
    clear_field_oneof();
    set_has_user_name();
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailRequest.user_name)
  return field_oneof_.user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByEmailRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailRequest.user_name)
  if (has_user_name()) {
    clear_has_field_oneof();
    return field_oneof_.user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PasswordByEmailRequest::set_allocated_user_name(::std::string* user_name) {
  if (!has_user_name()) {
    field_oneof_.user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_field_oneof();
  if (user_name != NULL) {
    set_has_user_name();
    field_oneof_.user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        user_name);
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailRequest.user_name)
}

// optional string email = 4;
inline bool PasswordByEmailRequest::has_email() const {
  return field_oneof_case() == kEmail;
}
inline void PasswordByEmailRequest::set_has_email() {
  _oneof_case_[0] = kEmail;
}
inline void PasswordByEmailRequest::clear_email() {
  if (has_email()) {
    field_oneof_.email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_field_oneof();
  }
}
inline const ::std::string& PasswordByEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailRequest.email)
  if (has_email()) {
    return field_oneof_.email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void PasswordByEmailRequest::set_email(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.email)
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailRequest.email)
}
inline void PasswordByEmailRequest::set_email(const char* value) {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailRequest.email)
}
inline void PasswordByEmailRequest::set_email(const char* value, size_t size) {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  field_oneof_.email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailRequest.email)
}
inline ::std::string* PasswordByEmailRequest::mutable_email() {
  if (!has_email()) {
    clear_field_oneof();
    set_has_email();
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailRequest.email)
  return field_oneof_.email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailRequest.email)
  if (has_email()) {
    clear_has_field_oneof();
    return field_oneof_.email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void PasswordByEmailRequest::set_allocated_email(::std::string* email) {
  if (!has_email()) {
    field_oneof_.email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_field_oneof();
  if (email != NULL) {
    set_has_email();
    field_oneof_.email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        email);
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailRequest.email)
}

inline bool PasswordByEmailRequest::has_field_oneof() const {
  return field_oneof_case() != FIELD_ONEOF_NOT_SET;
}
inline void PasswordByEmailRequest::clear_has_field_oneof() {
  _oneof_case_[0] = FIELD_ONEOF_NOT_SET;
}
inline PasswordByEmailRequest::FieldOneofCase PasswordByEmailRequest::field_oneof_case() const {
  return PasswordByEmailRequest::FieldOneofCase(_oneof_case_[0]);
}
inline const PasswordByEmailRequest* PasswordByEmailRequest::internal_default_instance() {
  return &PasswordByEmailRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordByEmailResponse

// optional string email = 1;
inline void PasswordByEmailResponse::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordByEmailResponse::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailResponse.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByEmailResponse::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailResponse.email)
}
inline void PasswordByEmailResponse::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailResponse.email)
}
inline void PasswordByEmailResponse::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailResponse.email)
}
inline ::std::string* PasswordByEmailResponse::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailResponse.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByEmailResponse::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailResponse.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByEmailResponse::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailResponse.email)
}

// optional string user_name = 2;
inline void PasswordByEmailResponse::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordByEmailResponse::user_name() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailResponse.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByEmailResponse::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByEmailResponse.user_name)
}
inline void PasswordByEmailResponse::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByEmailResponse.user_name)
}
inline void PasswordByEmailResponse::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByEmailResponse.user_name)
}
inline ::std::string* PasswordByEmailResponse::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailResponse.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByEmailResponse::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailResponse.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByEmailResponse::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailResponse.user_name)
}

// optional .grpcCommon.GrpcError error = 3;
inline bool PasswordByEmailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PasswordByEmailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PasswordByEmailResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByEmailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PasswordByEmailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByEmailResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PasswordByEmailResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PasswordByEmailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PasswordByEmailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByEmailResponse.error)
}

inline const PasswordByEmailResponse* PasswordByEmailResponse::internal_default_instance() {
  return &PasswordByEmailResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordEmailRequest

// optional string email = 1;
inline void PasswordEmailRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordEmailRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.PasswordEmailRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordEmailRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordEmailRequest.email)
}
inline void PasswordEmailRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordEmailRequest.email)
}
inline void PasswordEmailRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordEmailRequest.email)
}
inline ::std::string* PasswordEmailRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordEmailRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordEmailRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.PasswordEmailRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordEmailRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordEmailRequest.email)
}

inline const PasswordEmailRequest* PasswordEmailRequest::internal_default_instance() {
  return &PasswordEmailRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordEmailResponse

// optional .grpcCommon.GrpcError error = 1;
inline bool PasswordEmailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PasswordEmailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PasswordEmailResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PasswordEmailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PasswordEmailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordEmailResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PasswordEmailResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PasswordEmailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PasswordEmailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordEmailResponse.error)
}

inline const PasswordEmailResponse* PasswordEmailResponse::internal_default_instance() {
  return &PasswordEmailResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordByPhoneRequest

// optional string phone_number = 1;
inline void PasswordByPhoneRequest::clear_phone_number() {
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordByPhoneRequest::phone_number() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneRequest.phone_number)
  return phone_number_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByPhoneRequest::set_phone_number(const ::std::string& value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneRequest.phone_number)
}
inline void PasswordByPhoneRequest::set_phone_number(const char* value) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneRequest.phone_number)
}
inline void PasswordByPhoneRequest::set_phone_number(const char* value, size_t size) {
  
  phone_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneRequest.phone_number)
}
inline ::std::string* PasswordByPhoneRequest::mutable_phone_number() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneRequest.phone_number)
  return phone_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByPhoneRequest::release_phone_number() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneRequest.phone_number)
  
  return phone_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByPhoneRequest::set_allocated_phone_number(::std::string* phone_number) {
  if (phone_number != NULL) {
    
  } else {
    
  }
  phone_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_number);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneRequest.phone_number)
}

inline const PasswordByPhoneRequest* PasswordByPhoneRequest::internal_default_instance() {
  return &PasswordByPhoneRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordByPhoneResponse

// optional string user_id = 1;
inline void PasswordByPhoneResponse::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordByPhoneResponse::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneResponse.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByPhoneResponse::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordByPhoneResponse.user_id)
}
inline void PasswordByPhoneResponse::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordByPhoneResponse.user_id)
}
inline void PasswordByPhoneResponse::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordByPhoneResponse.user_id)
}
inline ::std::string* PasswordByPhoneResponse::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneResponse.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordByPhoneResponse::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneResponse.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordByPhoneResponse::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneResponse.user_id)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool PasswordByPhoneResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PasswordByPhoneResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PasswordByPhoneResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PasswordByPhoneResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PasswordByPhoneResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordByPhoneResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PasswordByPhoneResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PasswordByPhoneResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PasswordByPhoneResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordByPhoneResponse.error)
}

inline const PasswordByPhoneResponse* PasswordByPhoneResponse::internal_default_instance() {
  return &PasswordByPhoneResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordUpdateRequest

// optional string user_id = 1;
inline void PasswordUpdateRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordUpdateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordUpdateRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordUpdateRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordUpdateRequest.user_id)
}
inline void PasswordUpdateRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordUpdateRequest.user_id)
}
inline void PasswordUpdateRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordUpdateRequest.user_id)
}
inline ::std::string* PasswordUpdateRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordUpdateRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordUpdateRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordUpdateRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordUpdateRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordUpdateRequest.user_id)
}

// optional string new_password = 2;
inline void PasswordUpdateRequest::clear_new_password() {
  new_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordUpdateRequest::new_password() const {
  // @@protoc_insertion_point(field_get:personal.PasswordUpdateRequest.new_password)
  return new_password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordUpdateRequest::set_new_password(const ::std::string& value) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordUpdateRequest.new_password)
}
inline void PasswordUpdateRequest::set_new_password(const char* value) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordUpdateRequest.new_password)
}
inline void PasswordUpdateRequest::set_new_password(const char* value, size_t size) {
  
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordUpdateRequest.new_password)
}
inline ::std::string* PasswordUpdateRequest::mutable_new_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordUpdateRequest.new_password)
  return new_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordUpdateRequest::release_new_password() {
  // @@protoc_insertion_point(field_release:personal.PasswordUpdateRequest.new_password)
  
  return new_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordUpdateRequest::set_allocated_new_password(::std::string* new_password) {
  if (new_password != NULL) {
    
  } else {
    
  }
  new_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_password);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordUpdateRequest.new_password)
}

inline const PasswordUpdateRequest* PasswordUpdateRequest::internal_default_instance() {
  return &PasswordUpdateRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordUpdateResponse

// optional .grpcCommon.GrpcError error = 1;
inline bool PasswordUpdateResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PasswordUpdateResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PasswordUpdateResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PasswordUpdateResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PasswordUpdateResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordUpdateResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PasswordUpdateResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PasswordUpdateResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PasswordUpdateResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordUpdateResponse.error)
}

inline const PasswordUpdateResponse* PasswordUpdateResponse::internal_default_instance() {
  return &PasswordUpdateResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordVerifyRequest

// optional string user_id = 1;
inline void PasswordVerifyRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordVerifyRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordVerifyRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyRequest.user_id)
}
inline void PasswordVerifyRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordVerifyRequest.user_id)
}
inline void PasswordVerifyRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordVerifyRequest.user_id)
}
inline ::std::string* PasswordVerifyRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordVerifyRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordVerifyRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.PasswordVerifyRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordVerifyRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordVerifyRequest.user_id)
}

// optional string password = 2;
inline void PasswordVerifyRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PasswordVerifyRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordVerifyRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyRequest.password)
}
inline void PasswordVerifyRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PasswordVerifyRequest.password)
}
inline void PasswordVerifyRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PasswordVerifyRequest.password)
}
inline ::std::string* PasswordVerifyRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.PasswordVerifyRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PasswordVerifyRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.PasswordVerifyRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PasswordVerifyRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordVerifyRequest.password)
}

inline const PasswordVerifyRequest* PasswordVerifyRequest::internal_default_instance() {
  return &PasswordVerifyRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PasswordVerifyResponse

// optional bool is_right = 1;
inline void PasswordVerifyResponse::clear_is_right() {
  is_right_ = false;
}
inline bool PasswordVerifyResponse::is_right() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyResponse.is_right)
  return is_right_;
}
inline void PasswordVerifyResponse::set_is_right(bool value) {
  
  is_right_ = value;
  // @@protoc_insertion_point(field_set:personal.PasswordVerifyResponse.is_right)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool PasswordVerifyResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PasswordVerifyResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PasswordVerifyResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PasswordVerifyResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PasswordVerifyResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PasswordVerifyResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PasswordVerifyResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PasswordVerifyResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PasswordVerifyResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PasswordVerifyResponse.error)
}

inline const PasswordVerifyResponse* PasswordVerifyResponse::internal_default_instance() {
  return &PasswordVerifyResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personalCenter_2fmsg_5fpassword_2eproto__INCLUDED
