// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_regist.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "personalCenter/msg_regist.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace personal {

namespace {

const ::google::protobuf::Descriptor* RegistRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* RegistResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RegistResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRegistInfoRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRegistInfoRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* UpdateRegistInfoResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  UpdateRegistInfoResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_personalCenter_2fmsg_5fregist_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_personalCenter_2fmsg_5fregist_2eproto() {
  protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "personalCenter/msg_regist.proto");
  GOOGLE_CHECK(file != NULL);
  RegistRequest_descriptor_ = file->message_type(0);
  static const int RegistRequest_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, password_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, phone_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, phone_captcha_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, user_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, token_),
  };
  RegistRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistRequest_descriptor_,
      RegistRequest::internal_default_instance(),
      RegistRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegistRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistRequest, _internal_metadata_));
  RegistResponse_descriptor_ = file->message_type(1);
  static const int RegistResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistResponse, user_id_),
  };
  RegistResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      RegistResponse_descriptor_,
      RegistResponse::internal_default_instance(),
      RegistResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(RegistResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegistResponse, _internal_metadata_));
  UpdateRegistInfoRequest_descriptor_ = file->message_type(2);
  static const int UpdateRegistInfoRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRegistInfoRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRegistInfoRequest, email_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRegistInfoRequest, interest_subject_),
  };
  UpdateRegistInfoRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateRegistInfoRequest_descriptor_,
      UpdateRegistInfoRequest::internal_default_instance(),
      UpdateRegistInfoRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateRegistInfoRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRegistInfoRequest, _internal_metadata_));
  UpdateRegistInfoResponse_descriptor_ = file->message_type(3);
  static const int UpdateRegistInfoResponse_offsets_[1] = {
  };
  UpdateRegistInfoResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      UpdateRegistInfoResponse_descriptor_,
      UpdateRegistInfoResponse::internal_default_instance(),
      UpdateRegistInfoResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(UpdateRegistInfoResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateRegistInfoResponse, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_personalCenter_2fmsg_5fregist_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistRequest_descriptor_, RegistRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      RegistResponse_descriptor_, RegistResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateRegistInfoRequest_descriptor_, UpdateRegistInfoRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      UpdateRegistInfoResponse_descriptor_, UpdateRegistInfoResponse::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_personalCenter_2fmsg_5fregist_2eproto() {
  RegistRequest_default_instance_.Shutdown();
  delete RegistRequest_reflection_;
  RegistResponse_default_instance_.Shutdown();
  delete RegistResponse_reflection_;
  UpdateRegistInfoRequest_default_instance_.Shutdown();
  delete UpdateRegistInfoRequest_reflection_;
  UpdateRegistInfoResponse_default_instance_.Shutdown();
  delete UpdateRegistInfoResponse_reflection_;
}

void protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::GetEmptyString();
  RegistRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  RegistResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  UpdateRegistInfoRequest_default_instance_.DefaultConstruct();
  UpdateRegistInfoResponse_default_instance_.DefaultConstruct();
  RegistRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  RegistResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateRegistInfoRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  UpdateRegistInfoResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto_once_);
void protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto_once_,
                 &protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto_impl);
}
void protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\037personalCenter/msg_regist.proto\022\010perso"
    "nal\"i\n\rRegistRequest\022\020\n\010password\030\001 \001(\t\022\r"
    "\n\005phone\030\002 \001(\t\022\025\n\rphone_captcha\030\003 \001(\t\022\021\n\t"
    "user_name\030\004 \001(\t\022\r\n\005token\030\005 \001(\t\"!\n\016Regist"
    "Response\022\017\n\007user_id\030\001 \001(\t\"S\n\027UpdateRegis"
    "tInfoRequest\022\017\n\007user_id\030\001 \001(\t\022\r\n\005email\030\002"
    " \001(\t\022\030\n\020interest_subject\030\003 \001(\t\"\032\n\030Update"
    "RegistInfoResponseB\037\n\024com.wanfang.person"
    "alP\001\242\002\004WFPRb\006proto3", 339);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "personalCenter/msg_regist.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_personalCenter_2fmsg_5fregist_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto_once_);
void protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto_once_,
                 &protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_personalCenter_2fmsg_5fregist_2eproto {
  StaticDescriptorInitializer_personalCenter_2fmsg_5fregist_2eproto() {
    protobuf_AddDesc_personalCenter_2fmsg_5fregist_2eproto();
  }
} static_descriptor_initializer_personalCenter_2fmsg_5fregist_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistRequest::kPasswordFieldNumber;
const int RegistRequest::kPhoneFieldNumber;
const int RegistRequest::kPhoneCaptchaFieldNumber;
const int RegistRequest::kUserNameFieldNumber;
const int RegistRequest::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistRequest::RegistRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.RegistRequest)
}

void RegistRequest::InitAsDefaultInstance() {
}

RegistRequest::RegistRequest(const RegistRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.RegistRequest)
}

void RegistRequest::SharedCtor() {
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegistRequest::~RegistRequest() {
  // @@protoc_insertion_point(destructor:personal.RegistRequest)
  SharedDtor();
}

void RegistRequest::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegistRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistRequest_descriptor_;
}

const RegistRequest& RegistRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegistRequest> RegistRequest_default_instance_;

RegistRequest* RegistRequest::New(::google::protobuf::Arena* arena) const {
  RegistRequest* n = new RegistRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.RegistRequest)
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegistRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.RegistRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistRequest.password"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_phone;
        break;
      }

      // optional string phone = 2;
      case 2: {
        if (tag == 18) {
         parse_phone:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistRequest.phone"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_phone_captcha;
        break;
      }

      // optional string phone_captcha = 3;
      case 3: {
        if (tag == 26) {
         parse_phone_captcha:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_captcha()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_captcha().data(), this->phone_captcha().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistRequest.phone_captcha"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_user_name;
        break;
      }

      // optional string user_name = 4;
      case 4: {
        if (tag == 34) {
         parse_user_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_name().data(), this->user_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistRequest.user_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_token;
        break;
      }

      // optional string token = 5;
      case 5: {
        if (tag == 42) {
         parse_token:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistRequest.token"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.RegistRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.RegistRequest)
  return false;
#undef DO_
}

void RegistRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.RegistRequest)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->phone(), output);
  }

  // optional string phone_captcha = 3;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.phone_captcha");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone_captcha(), output);
  }

  // optional string user_name = 4;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.user_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_name(), output);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->token(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.RegistRequest)
}

::google::protobuf::uint8* RegistRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.RegistRequest)
  // optional string password = 1;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string phone = 2;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->phone(), target);
  }

  // optional string phone_captcha = 3;
  if (this->phone_captcha().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_captcha().data(), this->phone_captcha().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.phone_captcha");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone_captcha(), target);
  }

  // optional string user_name = 4;
  if (this->user_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_name().data(), this->user_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.user_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_name(), target);
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->token(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.RegistRequest)
  return target;
}

size_t RegistRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.RegistRequest)
  size_t total_size = 0;

  // optional string password = 1;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // optional string phone = 2;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // optional string phone_captcha = 3;
  if (this->phone_captcha().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_captcha());
  }

  // optional string user_name = 4;
  if (this->user_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_name());
  }

  // optional string token = 5;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.RegistRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegistRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.RegistRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.RegistRequest)
    UnsafeMergeFrom(*source);
  }
}

void RegistRequest::MergeFrom(const RegistRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.RegistRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegistRequest::UnsafeMergeFrom(const RegistRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.phone_captcha().size() > 0) {

    phone_captcha_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_captcha_);
  }
  if (from.user_name().size() > 0) {

    user_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_name_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void RegistRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.RegistRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistRequest::CopyFrom(const RegistRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.RegistRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegistRequest::IsInitialized() const {

  return true;
}

void RegistRequest::Swap(RegistRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistRequest::InternalSwap(RegistRequest* other) {
  password_.Swap(&other->password_);
  phone_.Swap(&other->phone_);
  phone_captcha_.Swap(&other->phone_captcha_);
  user_name_.Swap(&other->user_name_);
  token_.Swap(&other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistRequest_descriptor_;
  metadata.reflection = RegistRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistRequest

// optional string password = 1;
void RegistRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::password() const {
  // @@protoc_insertion_point(field_get:personal.RegistRequest.password)
  return password_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistRequest.password)
}
void RegistRequest::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistRequest.password)
}
void RegistRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistRequest.password)
}
::std::string* RegistRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_password() {
  // @@protoc_insertion_point(field_release:personal.RegistRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistRequest.password)
}

// optional string phone = 2;
void RegistRequest::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::phone() const {
  // @@protoc_insertion_point(field_get:personal.RegistRequest.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistRequest.phone)
}
void RegistRequest::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistRequest.phone)
}
void RegistRequest::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistRequest.phone)
}
::std::string* RegistRequest::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistRequest.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_phone() {
  // @@protoc_insertion_point(field_release:personal.RegistRequest.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistRequest.phone)
}

// optional string phone_captcha = 3;
void RegistRequest::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.RegistRequest.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistRequest.phone_captcha)
}
void RegistRequest::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistRequest.phone_captcha)
}
void RegistRequest::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistRequest.phone_captcha)
}
::std::string* RegistRequest::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistRequest.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.RegistRequest.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistRequest.phone_captcha)
}

// optional string user_name = 4;
void RegistRequest::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::user_name() const {
  // @@protoc_insertion_point(field_get:personal.RegistRequest.user_name)
  return user_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistRequest.user_name)
}
void RegistRequest::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistRequest.user_name)
}
void RegistRequest::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistRequest.user_name)
}
::std::string* RegistRequest::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistRequest.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_user_name() {
  // @@protoc_insertion_point(field_release:personal.RegistRequest.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistRequest.user_name)
}

// optional string token = 5;
void RegistRequest::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistRequest::token() const {
  // @@protoc_insertion_point(field_get:personal.RegistRequest.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistRequest.token)
}
void RegistRequest::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistRequest.token)
}
void RegistRequest::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistRequest.token)
}
::std::string* RegistRequest::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistRequest.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistRequest::release_token() {
  // @@protoc_insertion_point(field_release:personal.RegistRequest.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistRequest::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistRequest.token)
}

inline const RegistRequest* RegistRequest::internal_default_instance() {
  return &RegistRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegistResponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegistResponse::RegistResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.RegistResponse)
}

void RegistResponse::InitAsDefaultInstance() {
}

RegistResponse::RegistResponse(const RegistResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.RegistResponse)
}

void RegistResponse::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegistResponse::~RegistResponse() {
  // @@protoc_insertion_point(destructor:personal.RegistResponse)
  SharedDtor();
}

void RegistResponse::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegistResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegistResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RegistResponse_descriptor_;
}

const RegistResponse& RegistResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<RegistResponse> RegistResponse_default_instance_;

RegistResponse* RegistResponse::New(::google::protobuf::Arena* arena) const {
  RegistResponse* n = new RegistResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegistResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.RegistResponse)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RegistResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.RegistResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.RegistResponse.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.RegistResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.RegistResponse)
  return false;
#undef DO_
}

void RegistResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.RegistResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistResponse.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.RegistResponse)
}

::google::protobuf::uint8* RegistResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.RegistResponse)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.RegistResponse.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.RegistResponse)
  return target;
}

size_t RegistResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.RegistResponse)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegistResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.RegistResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const RegistResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegistResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.RegistResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.RegistResponse)
    UnsafeMergeFrom(*source);
  }
}

void RegistResponse::MergeFrom(const RegistResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.RegistResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void RegistResponse::UnsafeMergeFrom(const RegistResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void RegistResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.RegistResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegistResponse::CopyFrom(const RegistResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.RegistResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool RegistResponse::IsInitialized() const {

  return true;
}

void RegistResponse::Swap(RegistResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegistResponse::InternalSwap(RegistResponse* other) {
  user_id_.Swap(&other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegistResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RegistResponse_descriptor_;
  metadata.reflection = RegistResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegistResponse

// optional string user_id = 1;
void RegistResponse::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RegistResponse::user_id() const {
  // @@protoc_insertion_point(field_get:personal.RegistResponse.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistResponse::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.RegistResponse.user_id)
}
void RegistResponse::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.RegistResponse.user_id)
}
void RegistResponse::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.RegistResponse.user_id)
}
::std::string* RegistResponse::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.RegistResponse.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegistResponse::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.RegistResponse.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegistResponse::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.RegistResponse.user_id)
}

inline const RegistResponse* RegistResponse::internal_default_instance() {
  return &RegistResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateRegistInfoRequest::kUserIdFieldNumber;
const int UpdateRegistInfoRequest::kEmailFieldNumber;
const int UpdateRegistInfoRequest::kInterestSubjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRegistInfoRequest::UpdateRegistInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.UpdateRegistInfoRequest)
}

void UpdateRegistInfoRequest::InitAsDefaultInstance() {
}

UpdateRegistInfoRequest::UpdateRegistInfoRequest(const UpdateRegistInfoRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.UpdateRegistInfoRequest)
}

void UpdateRegistInfoRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interest_subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UpdateRegistInfoRequest::~UpdateRegistInfoRequest() {
  // @@protoc_insertion_point(destructor:personal.UpdateRegistInfoRequest)
  SharedDtor();
}

void UpdateRegistInfoRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interest_subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UpdateRegistInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRegistInfoRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRegistInfoRequest_descriptor_;
}

const UpdateRegistInfoRequest& UpdateRegistInfoRequest::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateRegistInfoRequest> UpdateRegistInfoRequest_default_instance_;

UpdateRegistInfoRequest* UpdateRegistInfoRequest::New(::google::protobuf::Arena* arena) const {
  UpdateRegistInfoRequest* n = new UpdateRegistInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRegistInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.UpdateRegistInfoRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interest_subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool UpdateRegistInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.UpdateRegistInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UpdateRegistInfoRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_email;
        break;
      }

      // optional string email = 2;
      case 2: {
        if (tag == 18) {
         parse_email:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UpdateRegistInfoRequest.email"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_interest_subject;
        break;
      }

      // optional string interest_subject = 3;
      case 3: {
        if (tag == 26) {
         parse_interest_subject:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interest_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interest_subject().data(), this->interest_subject().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "personal.UpdateRegistInfoRequest.interest_subject"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:personal.UpdateRegistInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.UpdateRegistInfoRequest)
  return false;
#undef DO_
}

void UpdateRegistInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.UpdateRegistInfoRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional string interest_subject = 3;
  if (this->interest_subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interest_subject().data(), this->interest_subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.interest_subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->interest_subject(), output);
  }

  // @@protoc_insertion_point(serialize_end:personal.UpdateRegistInfoRequest)
}

::google::protobuf::uint8* UpdateRegistInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.UpdateRegistInfoRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional string interest_subject = 3;
  if (this->interest_subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interest_subject().data(), this->interest_subject().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "personal.UpdateRegistInfoRequest.interest_subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->interest_subject(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:personal.UpdateRegistInfoRequest)
  return target;
}

size_t UpdateRegistInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.UpdateRegistInfoRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // optional string interest_subject = 3;
  if (this->interest_subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interest_subject());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRegistInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.UpdateRegistInfoRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateRegistInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRegistInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.UpdateRegistInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.UpdateRegistInfoRequest)
    UnsafeMergeFrom(*source);
  }
}

void UpdateRegistInfoRequest::MergeFrom(const UpdateRegistInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.UpdateRegistInfoRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateRegistInfoRequest::UnsafeMergeFrom(const UpdateRegistInfoRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.interest_subject().size() > 0) {

    interest_subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interest_subject_);
  }
}

void UpdateRegistInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.UpdateRegistInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRegistInfoRequest::CopyFrom(const UpdateRegistInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.UpdateRegistInfoRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateRegistInfoRequest::IsInitialized() const {

  return true;
}

void UpdateRegistInfoRequest::Swap(UpdateRegistInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRegistInfoRequest::InternalSwap(UpdateRegistInfoRequest* other) {
  user_id_.Swap(&other->user_id_);
  email_.Swap(&other->email_);
  interest_subject_.Swap(&other->interest_subject_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRegistInfoRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRegistInfoRequest_descriptor_;
  metadata.reflection = UpdateRegistInfoRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRegistInfoRequest

// optional string user_id = 1;
void UpdateRegistInfoRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateRegistInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.UpdateRegistInfoRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.UpdateRegistInfoRequest.user_id)
}
void UpdateRegistInfoRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.UpdateRegistInfoRequest.user_id)
}
void UpdateRegistInfoRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.UpdateRegistInfoRequest.user_id)
}
::std::string* UpdateRegistInfoRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.UpdateRegistInfoRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateRegistInfoRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.UpdateRegistInfoRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.UpdateRegistInfoRequest.user_id)
}

// optional string email = 2;
void UpdateRegistInfoRequest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateRegistInfoRequest::email() const {
  // @@protoc_insertion_point(field_get:personal.UpdateRegistInfoRequest.email)
  return email_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.UpdateRegistInfoRequest.email)
}
void UpdateRegistInfoRequest::set_email(const char* value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.UpdateRegistInfoRequest.email)
}
void UpdateRegistInfoRequest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.UpdateRegistInfoRequest.email)
}
::std::string* UpdateRegistInfoRequest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:personal.UpdateRegistInfoRequest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateRegistInfoRequest::release_email() {
  // @@protoc_insertion_point(field_release:personal.UpdateRegistInfoRequest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:personal.UpdateRegistInfoRequest.email)
}

// optional string interest_subject = 3;
void UpdateRegistInfoRequest::clear_interest_subject() {
  interest_subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& UpdateRegistInfoRequest::interest_subject() const {
  // @@protoc_insertion_point(field_get:personal.UpdateRegistInfoRequest.interest_subject)
  return interest_subject_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_interest_subject(const ::std::string& value) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.UpdateRegistInfoRequest.interest_subject)
}
void UpdateRegistInfoRequest::set_interest_subject(const char* value) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.UpdateRegistInfoRequest.interest_subject)
}
void UpdateRegistInfoRequest::set_interest_subject(const char* value, size_t size) {
  
  interest_subject_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.UpdateRegistInfoRequest.interest_subject)
}
::std::string* UpdateRegistInfoRequest::mutable_interest_subject() {
  
  // @@protoc_insertion_point(field_mutable:personal.UpdateRegistInfoRequest.interest_subject)
  return interest_subject_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* UpdateRegistInfoRequest::release_interest_subject() {
  // @@protoc_insertion_point(field_release:personal.UpdateRegistInfoRequest.interest_subject)
  
  return interest_subject_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void UpdateRegistInfoRequest::set_allocated_interest_subject(::std::string* interest_subject) {
  if (interest_subject != NULL) {
    
  } else {
    
  }
  interest_subject_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interest_subject);
  // @@protoc_insertion_point(field_set_allocated:personal.UpdateRegistInfoRequest.interest_subject)
}

inline const UpdateRegistInfoRequest* UpdateRegistInfoRequest::internal_default_instance() {
  return &UpdateRegistInfoRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateRegistInfoResponse::UpdateRegistInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:personal.UpdateRegistInfoResponse)
}

void UpdateRegistInfoResponse::InitAsDefaultInstance() {
}

UpdateRegistInfoResponse::UpdateRegistInfoResponse(const UpdateRegistInfoResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:personal.UpdateRegistInfoResponse)
}

void UpdateRegistInfoResponse::SharedCtor() {
  _cached_size_ = 0;
}

UpdateRegistInfoResponse::~UpdateRegistInfoResponse() {
  // @@protoc_insertion_point(destructor:personal.UpdateRegistInfoResponse)
  SharedDtor();
}

void UpdateRegistInfoResponse::SharedDtor() {
}

void UpdateRegistInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateRegistInfoResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return UpdateRegistInfoResponse_descriptor_;
}

const UpdateRegistInfoResponse& UpdateRegistInfoResponse::default_instance() {
  protobuf_InitDefaults_personalCenter_2fmsg_5fregist_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<UpdateRegistInfoResponse> UpdateRegistInfoResponse_default_instance_;

UpdateRegistInfoResponse* UpdateRegistInfoResponse::New(::google::protobuf::Arena* arena) const {
  UpdateRegistInfoResponse* n = new UpdateRegistInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateRegistInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:personal.UpdateRegistInfoResponse)
}

bool UpdateRegistInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:personal.UpdateRegistInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:personal.UpdateRegistInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:personal.UpdateRegistInfoResponse)
  return false;
#undef DO_
}

void UpdateRegistInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:personal.UpdateRegistInfoResponse)
  // @@protoc_insertion_point(serialize_end:personal.UpdateRegistInfoResponse)
}

::google::protobuf::uint8* UpdateRegistInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:personal.UpdateRegistInfoResponse)
  // @@protoc_insertion_point(serialize_to_array_end:personal.UpdateRegistInfoResponse)
  return target;
}

size_t UpdateRegistInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:personal.UpdateRegistInfoResponse)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateRegistInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:personal.UpdateRegistInfoResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const UpdateRegistInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateRegistInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:personal.UpdateRegistInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:personal.UpdateRegistInfoResponse)
    UnsafeMergeFrom(*source);
  }
}

void UpdateRegistInfoResponse::MergeFrom(const UpdateRegistInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:personal.UpdateRegistInfoResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void UpdateRegistInfoResponse::UnsafeMergeFrom(const UpdateRegistInfoResponse& from) {
  GOOGLE_DCHECK(&from != this);
}

void UpdateRegistInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:personal.UpdateRegistInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateRegistInfoResponse::CopyFrom(const UpdateRegistInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:personal.UpdateRegistInfoResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool UpdateRegistInfoResponse::IsInitialized() const {

  return true;
}

void UpdateRegistInfoResponse::Swap(UpdateRegistInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateRegistInfoResponse::InternalSwap(UpdateRegistInfoResponse* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateRegistInfoResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = UpdateRegistInfoResponse_descriptor_;
  metadata.reflection = UpdateRegistInfoResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateRegistInfoResponse

inline const UpdateRegistInfoResponse* UpdateRegistInfoResponse::internal_default_instance() {
  return &UpdateRegistInfoResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)
