// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_my_wallet.proto

#ifndef PROTOBUF_personalCenter_2fmsg_5fmy_5fwallet_2eproto__INCLUDED
#define PROTOBUF_personalCenter_2fmsg_5fmy_5fwallet_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto();
void protobuf_InitDefaults_personalCenter_2fmsg_5fmy_5fwallet_2eproto();
void protobuf_AssignDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto();
void protobuf_ShutdownFile_personalCenter_2fmsg_5fmy_5fwallet_2eproto();

class MyWalletRequest;
class MyWalletResponse;

// ===================================================================

class MyWalletRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.MyWalletRequest) */ {
 public:
  MyWalletRequest();
  virtual ~MyWalletRequest();

  MyWalletRequest(const MyWalletRequest& from);

  inline MyWalletRequest& operator=(const MyWalletRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyWalletRequest& default_instance();

  static const MyWalletRequest* internal_default_instance();

  void Swap(MyWalletRequest* other);

  // implements Message ----------------------------------------------

  inline MyWalletRequest* New() const { return New(NULL); }

  MyWalletRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyWalletRequest& from);
  void MergeFrom(const MyWalletRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyWalletRequest* other);
  void UnsafeMergeFrom(const MyWalletRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // @@protoc_insertion_point(class_scope:personal.MyWalletRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fmy_5fwallet_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fmy_5fwallet_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyWalletRequest> MyWalletRequest_default_instance_;

// -------------------------------------------------------------------

class MyWalletResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.MyWalletResponse) */ {
 public:
  MyWalletResponse();
  virtual ~MyWalletResponse();

  MyWalletResponse(const MyWalletResponse& from);

  inline MyWalletResponse& operator=(const MyWalletResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyWalletResponse& default_instance();

  static const MyWalletResponse* internal_default_instance();

  void Swap(MyWalletResponse* other);

  // implements Message ----------------------------------------------

  inline MyWalletResponse* New() const { return New(NULL); }

  MyWalletResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyWalletResponse& from);
  void MergeFrom(const MyWalletResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyWalletResponse* other);
  void UnsafeMergeFrom(const MyWalletResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string balance = 1;
  void clear_balance();
  static const int kBalanceFieldNumber = 1;
  const ::std::string& balance() const;
  void set_balance(const ::std::string& value);
  void set_balance(const char* value);
  void set_balance(const char* value, size_t size);
  ::std::string* mutable_balance();
  ::std::string* release_balance();
  void set_allocated_balance(::std::string* balance);

  // @@protoc_insertion_point(class_scope:personal.MyWalletResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr balance_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fmy_5fwallet_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fmy_5fwallet_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fmy_5fwallet_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyWalletResponse> MyWalletResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MyWalletRequest

// optional string user_id = 1;
inline void MyWalletRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyWalletRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.MyWalletRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyWalletRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.MyWalletRequest.user_id)
}
inline void MyWalletRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.MyWalletRequest.user_id)
}
inline void MyWalletRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.MyWalletRequest.user_id)
}
inline ::std::string* MyWalletRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.MyWalletRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyWalletRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.MyWalletRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyWalletRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.MyWalletRequest.user_id)
}

inline const MyWalletRequest* MyWalletRequest::internal_default_instance() {
  return &MyWalletRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// MyWalletResponse

// optional string balance = 1;
inline void MyWalletResponse::clear_balance() {
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyWalletResponse::balance() const {
  // @@protoc_insertion_point(field_get:personal.MyWalletResponse.balance)
  return balance_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyWalletResponse::set_balance(const ::std::string& value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.MyWalletResponse.balance)
}
inline void MyWalletResponse::set_balance(const char* value) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.MyWalletResponse.balance)
}
inline void MyWalletResponse::set_balance(const char* value, size_t size) {
  
  balance_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.MyWalletResponse.balance)
}
inline ::std::string* MyWalletResponse::mutable_balance() {
  
  // @@protoc_insertion_point(field_mutable:personal.MyWalletResponse.balance)
  return balance_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyWalletResponse::release_balance() {
  // @@protoc_insertion_point(field_release:personal.MyWalletResponse.balance)
  
  return balance_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyWalletResponse::set_allocated_balance(::std::string* balance) {
  if (balance != NULL) {
    
  } else {
    
  }
  balance_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), balance);
  // @@protoc_insertion_point(field_set_allocated:personal.MyWalletResponse.balance)
}

inline const MyWalletResponse* MyWalletResponse::internal_default_instance() {
  return &MyWalletResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personalCenter_2fmsg_5fmy_5fwallet_2eproto__INCLUDED
