// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: personalCenter/msg_common.proto

#ifndef PROTOBUF_personalCenter_2fmsg_5fcommon_2eproto__INCLUDED
#define PROTOBUF_personalCenter_2fmsg_5fcommon_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto();
void protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto();
void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

class FileMetaData;
class PhoneCaptchaRequest;
class PhoneCaptchaResponse;
class UploadFileRequest;
class UploadFileResponse;

// ===================================================================

class PhoneCaptchaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PhoneCaptchaRequest) */ {
 public:
  PhoneCaptchaRequest();
  virtual ~PhoneCaptchaRequest();

  PhoneCaptchaRequest(const PhoneCaptchaRequest& from);

  inline PhoneCaptchaRequest& operator=(const PhoneCaptchaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhoneCaptchaRequest& default_instance();

  static const PhoneCaptchaRequest* internal_default_instance();

  void Swap(PhoneCaptchaRequest* other);

  // implements Message ----------------------------------------------

  inline PhoneCaptchaRequest* New() const { return New(NULL); }

  PhoneCaptchaRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhoneCaptchaRequest& from);
  void MergeFrom(const PhoneCaptchaRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhoneCaptchaRequest* other);
  void UnsafeMergeFrom(const PhoneCaptchaRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone = 1;
  void clear_phone();
  static const int kPhoneFieldNumber = 1;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // @@protoc_insertion_point(class_scope:personal.PhoneCaptchaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhoneCaptchaRequest> PhoneCaptchaRequest_default_instance_;

// -------------------------------------------------------------------

class PhoneCaptchaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.PhoneCaptchaResponse) */ {
 public:
  PhoneCaptchaResponse();
  virtual ~PhoneCaptchaResponse();

  PhoneCaptchaResponse(const PhoneCaptchaResponse& from);

  inline PhoneCaptchaResponse& operator=(const PhoneCaptchaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PhoneCaptchaResponse& default_instance();

  static const PhoneCaptchaResponse* internal_default_instance();

  void Swap(PhoneCaptchaResponse* other);

  // implements Message ----------------------------------------------

  inline PhoneCaptchaResponse* New() const { return New(NULL); }

  PhoneCaptchaResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PhoneCaptchaResponse& from);
  void MergeFrom(const PhoneCaptchaResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PhoneCaptchaResponse* other);
  void UnsafeMergeFrom(const PhoneCaptchaResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string phone_captcha = 1;
  void clear_phone_captcha();
  static const int kPhoneCaptchaFieldNumber = 1;
  const ::std::string& phone_captcha() const;
  void set_phone_captcha(const ::std::string& value);
  void set_phone_captcha(const char* value);
  void set_phone_captcha(const char* value, size_t size);
  ::std::string* mutable_phone_captcha();
  ::std::string* release_phone_captcha();
  void set_allocated_phone_captcha(::std::string* phone_captcha);

  // optional string token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  void set_token(const char* value);
  void set_token(const char* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // optional .grpcCommon.GrpcError error = 3;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 3;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.PhoneCaptchaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr phone_captcha_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<PhoneCaptchaResponse> PhoneCaptchaResponse_default_instance_;

// -------------------------------------------------------------------

class FileMetaData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.FileMetaData) */ {
 public:
  FileMetaData();
  virtual ~FileMetaData();

  FileMetaData(const FileMetaData& from);

  inline FileMetaData& operator=(const FileMetaData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FileMetaData& default_instance();

  static const FileMetaData* internal_default_instance();

  void Swap(FileMetaData* other);

  // implements Message ----------------------------------------------

  inline FileMetaData* New() const { return New(NULL); }

  FileMetaData* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileMetaData& from);
  void MergeFrom(const FileMetaData& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(FileMetaData* other);
  void UnsafeMergeFrom(const FileMetaData& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> labels = 1;
  int labels_size() const;
  void clear_labels();
  static const int kLabelsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      labels() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_labels();

  // optional string type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // optional string owner = 3;
  void clear_owner();
  static const int kOwnerFieldNumber = 3;
  const ::std::string& owner() const;
  void set_owner(const ::std::string& value);
  void set_owner(const char* value);
  void set_owner(const char* value, size_t size);
  ::std::string* mutable_owner();
  ::std::string* release_owner();
  void set_allocated_owner(::std::string* owner);

  // optional string login_token = 4;
  void clear_login_token();
  static const int kLoginTokenFieldNumber = 4;
  const ::std::string& login_token() const;
  void set_login_token(const ::std::string& value);
  void set_login_token(const char* value);
  void set_login_token(const char* value, size_t size);
  ::std::string* mutable_login_token();
  ::std::string* release_login_token();
  void set_allocated_login_token(::std::string* login_token);

  // @@protoc_insertion_point(class_scope:personal.FileMetaData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      FileMetaData_LabelsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > labels_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::internal::ArenaStringPtr owner_;
  ::google::protobuf::internal::ArenaStringPtr login_token_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<FileMetaData> FileMetaData_default_instance_;

// -------------------------------------------------------------------

class UploadFileRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.UploadFileRequest) */ {
 public:
  UploadFileRequest();
  virtual ~UploadFileRequest();

  UploadFileRequest(const UploadFileRequest& from);

  inline UploadFileRequest& operator=(const UploadFileRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadFileRequest& default_instance();

  static const UploadFileRequest* internal_default_instance();

  void Swap(UploadFileRequest* other);

  // implements Message ----------------------------------------------

  inline UploadFileRequest* New() const { return New(NULL); }

  UploadFileRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadFileRequest& from);
  void MergeFrom(const UploadFileRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadFileRequest* other);
  void UnsafeMergeFrom(const UploadFileRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .personal.FileMetaData meta_data = 1;
  bool has_meta_data() const;
  void clear_meta_data();
  static const int kMetaDataFieldNumber = 1;
  const ::personal::FileMetaData& meta_data() const;
  ::personal::FileMetaData* mutable_meta_data();
  ::personal::FileMetaData* release_meta_data();
  void set_allocated_meta_data(::personal::FileMetaData* meta_data);

  // optional bytes file_data = 2;
  void clear_file_data();
  static const int kFileDataFieldNumber = 2;
  const ::std::string& file_data() const;
  void set_file_data(const ::std::string& value);
  void set_file_data(const char* value);
  void set_file_data(const void* value, size_t size);
  ::std::string* mutable_file_data();
  ::std::string* release_file_data();
  void set_allocated_file_data(::std::string* file_data);

  // @@protoc_insertion_point(class_scope:personal.UploadFileRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr file_data_;
  ::personal::FileMetaData* meta_data_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadFileRequest> UploadFileRequest_default_instance_;

// -------------------------------------------------------------------

class UploadFileResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.UploadFileResponse) */ {
 public:
  UploadFileResponse();
  virtual ~UploadFileResponse();

  UploadFileResponse(const UploadFileResponse& from);

  inline UploadFileResponse& operator=(const UploadFileResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UploadFileResponse& default_instance();

  static const UploadFileResponse* internal_default_instance();

  void Swap(UploadFileResponse* other);

  // implements Message ----------------------------------------------

  inline UploadFileResponse* New() const { return New(NULL); }

  UploadFileResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UploadFileResponse& from);
  void MergeFrom(const UploadFileResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(UploadFileResponse* other);
  void UnsafeMergeFrom(const UploadFileResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, string> upload_urls = 1;
  int upload_urls_size() const;
  void clear_upload_urls();
  static const int kUploadUrlsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      upload_urls() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_upload_urls();

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:personal.UploadFileResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 >
      UploadFileResponse_UploadUrlsEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > upload_urls_;
  ::grpcCommon::GrpcError* error_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void  protobuf_AddDesc_personalCenter_2fmsg_5fcommon_2eproto_impl();
  friend void protobuf_AssignDesc_personalCenter_2fmsg_5fcommon_2eproto();
  friend void protobuf_ShutdownFile_personalCenter_2fmsg_5fcommon_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<UploadFileResponse> UploadFileResponse_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PhoneCaptchaRequest

// optional string phone = 1;
inline void PhoneCaptchaRequest::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhoneCaptchaRequest::phone() const {
  // @@protoc_insertion_point(field_get:personal.PhoneCaptchaRequest.phone)
  return phone_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaRequest::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PhoneCaptchaRequest.phone)
}
inline void PhoneCaptchaRequest::set_phone(const char* value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PhoneCaptchaRequest.phone)
}
inline void PhoneCaptchaRequest::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PhoneCaptchaRequest.phone)
}
inline ::std::string* PhoneCaptchaRequest::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:personal.PhoneCaptchaRequest.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhoneCaptchaRequest::release_phone() {
  // @@protoc_insertion_point(field_release:personal.PhoneCaptchaRequest.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaRequest::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:personal.PhoneCaptchaRequest.phone)
}

inline const PhoneCaptchaRequest* PhoneCaptchaRequest::internal_default_instance() {
  return &PhoneCaptchaRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// PhoneCaptchaResponse

// optional string phone_captcha = 1;
inline void PhoneCaptchaResponse::clear_phone_captcha() {
  phone_captcha_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhoneCaptchaResponse::phone_captcha() const {
  // @@protoc_insertion_point(field_get:personal.PhoneCaptchaResponse.phone_captcha)
  return phone_captcha_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaResponse::set_phone_captcha(const ::std::string& value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PhoneCaptchaResponse.phone_captcha)
}
inline void PhoneCaptchaResponse::set_phone_captcha(const char* value) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PhoneCaptchaResponse.phone_captcha)
}
inline void PhoneCaptchaResponse::set_phone_captcha(const char* value, size_t size) {
  
  phone_captcha_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PhoneCaptchaResponse.phone_captcha)
}
inline ::std::string* PhoneCaptchaResponse::mutable_phone_captcha() {
  
  // @@protoc_insertion_point(field_mutable:personal.PhoneCaptchaResponse.phone_captcha)
  return phone_captcha_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhoneCaptchaResponse::release_phone_captcha() {
  // @@protoc_insertion_point(field_release:personal.PhoneCaptchaResponse.phone_captcha)
  
  return phone_captcha_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaResponse::set_allocated_phone_captcha(::std::string* phone_captcha) {
  if (phone_captcha != NULL) {
    
  } else {
    
  }
  phone_captcha_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone_captcha);
  // @@protoc_insertion_point(field_set_allocated:personal.PhoneCaptchaResponse.phone_captcha)
}

// optional string token = 2;
inline void PhoneCaptchaResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PhoneCaptchaResponse::token() const {
  // @@protoc_insertion_point(field_get:personal.PhoneCaptchaResponse.token)
  return token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaResponse::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.PhoneCaptchaResponse.token)
}
inline void PhoneCaptchaResponse::set_token(const char* value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.PhoneCaptchaResponse.token)
}
inline void PhoneCaptchaResponse::set_token(const char* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.PhoneCaptchaResponse.token)
}
inline ::std::string* PhoneCaptchaResponse::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.PhoneCaptchaResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PhoneCaptchaResponse::release_token() {
  // @@protoc_insertion_point(field_release:personal.PhoneCaptchaResponse.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PhoneCaptchaResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:personal.PhoneCaptchaResponse.token)
}

// optional .grpcCommon.GrpcError error = 3;
inline bool PhoneCaptchaResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void PhoneCaptchaResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& PhoneCaptchaResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.PhoneCaptchaResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* PhoneCaptchaResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.PhoneCaptchaResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* PhoneCaptchaResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.PhoneCaptchaResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void PhoneCaptchaResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.PhoneCaptchaResponse.error)
}

inline const PhoneCaptchaResponse* PhoneCaptchaResponse::internal_default_instance() {
  return &PhoneCaptchaResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// FileMetaData

// map<string, string> labels = 1;
inline int FileMetaData::labels_size() const {
  return labels_.size();
}
inline void FileMetaData::clear_labels() {
  labels_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
FileMetaData::labels() const {
  // @@protoc_insertion_point(field_map:personal.FileMetaData.labels)
  return labels_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
FileMetaData::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_map:personal.FileMetaData.labels)
  return labels_.MutableMap();
}

// optional string type = 2;
inline void FileMetaData::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileMetaData::type() const {
  // @@protoc_insertion_point(field_get:personal.FileMetaData.type)
  return type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.FileMetaData.type)
}
inline void FileMetaData::set_type(const char* value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.FileMetaData.type)
}
inline void FileMetaData::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.FileMetaData.type)
}
inline ::std::string* FileMetaData::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:personal.FileMetaData.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileMetaData::release_type() {
  // @@protoc_insertion_point(field_release:personal.FileMetaData.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:personal.FileMetaData.type)
}

// optional string owner = 3;
inline void FileMetaData::clear_owner() {
  owner_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileMetaData::owner() const {
  // @@protoc_insertion_point(field_get:personal.FileMetaData.owner)
  return owner_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_owner(const ::std::string& value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.FileMetaData.owner)
}
inline void FileMetaData::set_owner(const char* value) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.FileMetaData.owner)
}
inline void FileMetaData::set_owner(const char* value, size_t size) {
  
  owner_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.FileMetaData.owner)
}
inline ::std::string* FileMetaData::mutable_owner() {
  
  // @@protoc_insertion_point(field_mutable:personal.FileMetaData.owner)
  return owner_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileMetaData::release_owner() {
  // @@protoc_insertion_point(field_release:personal.FileMetaData.owner)
  
  return owner_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_allocated_owner(::std::string* owner) {
  if (owner != NULL) {
    
  } else {
    
  }
  owner_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), owner);
  // @@protoc_insertion_point(field_set_allocated:personal.FileMetaData.owner)
}

// optional string login_token = 4;
inline void FileMetaData::clear_login_token() {
  login_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FileMetaData::login_token() const {
  // @@protoc_insertion_point(field_get:personal.FileMetaData.login_token)
  return login_token_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_login_token(const ::std::string& value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.FileMetaData.login_token)
}
inline void FileMetaData::set_login_token(const char* value) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.FileMetaData.login_token)
}
inline void FileMetaData::set_login_token(const char* value, size_t size) {
  
  login_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.FileMetaData.login_token)
}
inline ::std::string* FileMetaData::mutable_login_token() {
  
  // @@protoc_insertion_point(field_mutable:personal.FileMetaData.login_token)
  return login_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FileMetaData::release_login_token() {
  // @@protoc_insertion_point(field_release:personal.FileMetaData.login_token)
  
  return login_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FileMetaData::set_allocated_login_token(::std::string* login_token) {
  if (login_token != NULL) {
    
  } else {
    
  }
  login_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), login_token);
  // @@protoc_insertion_point(field_set_allocated:personal.FileMetaData.login_token)
}

inline const FileMetaData* FileMetaData::internal_default_instance() {
  return &FileMetaData_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadFileRequest

// optional .personal.FileMetaData meta_data = 1;
inline bool UploadFileRequest::has_meta_data() const {
  return this != internal_default_instance() && meta_data_ != NULL;
}
inline void UploadFileRequest::clear_meta_data() {
  if (GetArenaNoVirtual() == NULL && meta_data_ != NULL) delete meta_data_;
  meta_data_ = NULL;
}
inline const ::personal::FileMetaData& UploadFileRequest::meta_data() const {
  // @@protoc_insertion_point(field_get:personal.UploadFileRequest.meta_data)
  return meta_data_ != NULL ? *meta_data_
                         : *::personal::FileMetaData::internal_default_instance();
}
inline ::personal::FileMetaData* UploadFileRequest::mutable_meta_data() {
  
  if (meta_data_ == NULL) {
    meta_data_ = new ::personal::FileMetaData;
  }
  // @@protoc_insertion_point(field_mutable:personal.UploadFileRequest.meta_data)
  return meta_data_;
}
inline ::personal::FileMetaData* UploadFileRequest::release_meta_data() {
  // @@protoc_insertion_point(field_release:personal.UploadFileRequest.meta_data)
  
  ::personal::FileMetaData* temp = meta_data_;
  meta_data_ = NULL;
  return temp;
}
inline void UploadFileRequest::set_allocated_meta_data(::personal::FileMetaData* meta_data) {
  delete meta_data_;
  meta_data_ = meta_data;
  if (meta_data) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.UploadFileRequest.meta_data)
}

// optional bytes file_data = 2;
inline void UploadFileRequest::clear_file_data() {
  file_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UploadFileRequest::file_data() const {
  // @@protoc_insertion_point(field_get:personal.UploadFileRequest.file_data)
  return file_data_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadFileRequest::set_file_data(const ::std::string& value) {
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.UploadFileRequest.file_data)
}
inline void UploadFileRequest::set_file_data(const char* value) {
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.UploadFileRequest.file_data)
}
inline void UploadFileRequest::set_file_data(const void* value, size_t size) {
  
  file_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.UploadFileRequest.file_data)
}
inline ::std::string* UploadFileRequest::mutable_file_data() {
  
  // @@protoc_insertion_point(field_mutable:personal.UploadFileRequest.file_data)
  return file_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UploadFileRequest::release_file_data() {
  // @@protoc_insertion_point(field_release:personal.UploadFileRequest.file_data)
  
  return file_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UploadFileRequest::set_allocated_file_data(::std::string* file_data) {
  if (file_data != NULL) {
    
  } else {
    
  }
  file_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_data);
  // @@protoc_insertion_point(field_set_allocated:personal.UploadFileRequest.file_data)
}

inline const UploadFileRequest* UploadFileRequest::internal_default_instance() {
  return &UploadFileRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// UploadFileResponse

// map<string, string> upload_urls = 1;
inline int UploadFileResponse::upload_urls_size() const {
  return upload_urls_.size();
}
inline void UploadFileResponse::clear_upload_urls() {
  upload_urls_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
UploadFileResponse::upload_urls() const {
  // @@protoc_insertion_point(field_map:personal.UploadFileResponse.upload_urls)
  return upload_urls_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
UploadFileResponse::mutable_upload_urls() {
  // @@protoc_insertion_point(field_mutable_map:personal.UploadFileResponse.upload_urls)
  return upload_urls_.MutableMap();
}

// optional .grpcCommon.GrpcError error = 2;
inline bool UploadFileResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void UploadFileResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& UploadFileResponse::error() const {
  // @@protoc_insertion_point(field_get:personal.UploadFileResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* UploadFileResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:personal.UploadFileResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* UploadFileResponse::release_error() {
  // @@protoc_insertion_point(field_release:personal.UploadFileResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void UploadFileResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:personal.UploadFileResponse.error)
}

inline const UploadFileResponse* UploadFileResponse::internal_default_instance() {
  return &UploadFileResponse_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_personalCenter_2fmsg_5fcommon_2eproto__INCLUDED
