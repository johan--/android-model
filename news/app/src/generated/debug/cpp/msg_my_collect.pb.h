// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msg_my_collect.proto

#ifndef PROTOBUF_msg_5fmy_5fcollect_2eproto__INCLUDED
#define PROTOBUF_msg_5fmy_5fcollect_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "any.pb.h"
// @@protoc_insertion_point(includes)

namespace personal {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_msg_5fmy_5fcollect_2eproto();
void protobuf_InitDefaults_msg_5fmy_5fcollect_2eproto();
void protobuf_AssignDesc_msg_5fmy_5fcollect_2eproto();
void protobuf_ShutdownFile_msg_5fmy_5fcollect_2eproto();

class CollectBody;
class MyCollectRequest;
class MyCollectResponse;

// ===================================================================

class MyCollectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.MyCollectRequest) */ {
 public:
  MyCollectRequest();
  virtual ~MyCollectRequest();

  MyCollectRequest(const MyCollectRequest& from);

  inline MyCollectRequest& operator=(const MyCollectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectRequest& default_instance();

  static const MyCollectRequest* internal_default_instance();

  void Swap(MyCollectRequest* other);

  // implements Message ----------------------------------------------

  inline MyCollectRequest* New() const { return New(NULL); }

  MyCollectRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectRequest& from);
  void MergeFrom(const MyCollectRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectRequest* other);
  void UnsafeMergeFrom(const MyCollectRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional int32 page_number = 2;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 2;
  ::google::protobuf::int32 page_number() const;
  void set_page_number(::google::protobuf::int32 value);

  // optional int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.MyCollectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::int32 page_number_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fmy_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fmy_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fmy_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmy_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectRequest> MyCollectRequest_default_instance_;

// -------------------------------------------------------------------

class MyCollectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.MyCollectResponse) */ {
 public:
  MyCollectResponse();
  virtual ~MyCollectResponse();

  MyCollectResponse(const MyCollectResponse& from);

  inline MyCollectResponse& operator=(const MyCollectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectResponse& default_instance();

  static const MyCollectResponse* internal_default_instance();

  void Swap(MyCollectResponse* other);

  // implements Message ----------------------------------------------

  inline MyCollectResponse* New() const { return New(NULL); }

  MyCollectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectResponse& from);
  void MergeFrom(const MyCollectResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectResponse* other);
  void UnsafeMergeFrom(const MyCollectResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .personal.Any results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::personal::Any& results(int index) const;
  ::personal::Any* mutable_results(int index);
  ::personal::Any* add_results();
  ::google::protobuf::RepeatedPtrField< ::personal::Any >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::personal::Any >&
      results() const;

  // optional bool has_more = 2;
  void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  bool has_more() const;
  void set_has_more(bool value);

  // optional int32 total_count = 3;
  void clear_total_count();
  static const int kTotalCountFieldNumber = 3;
  ::google::protobuf::int32 total_count() const;
  void set_total_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.MyCollectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::personal::Any > results_;
  bool has_more_;
  ::google::protobuf::int32 total_count_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fmy_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fmy_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fmy_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmy_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectResponse> MyCollectResponse_default_instance_;

// -------------------------------------------------------------------

class CollectBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:personal.CollectBody) */ {
 public:
  CollectBody();
  virtual ~CollectBody();

  CollectBody(const CollectBody& from);

  inline CollectBody& operator=(const CollectBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectBody& default_instance();

  static const CollectBody* internal_default_instance();

  void Swap(CollectBody* other);

  // implements Message ----------------------------------------------

  inline CollectBody* New() const { return New(NULL); }

  CollectBody* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectBody& from);
  void MergeFrom(const CollectBody& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CollectBody* other);
  void UnsafeMergeFrom(const CollectBody& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string docu_id = 1;
  void clear_docu_id();
  static const int kDocuIdFieldNumber = 1;
  const ::std::string& docu_id() const;
  void set_docu_id(const ::std::string& value);
  void set_docu_id(const char* value);
  void set_docu_id(const char* value, size_t size);
  ::std::string* mutable_docu_id();
  ::std::string* release_docu_id();
  void set_allocated_docu_id(::std::string* docu_id);

  // optional string docu_title = 2;
  void clear_docu_title();
  static const int kDocuTitleFieldNumber = 2;
  const ::std::string& docu_title() const;
  void set_docu_title(const ::std::string& value);
  void set_docu_title(const char* value);
  void set_docu_title(const char* value, size_t size);
  ::std::string* mutable_docu_title();
  ::std::string* release_docu_title();
  void set_allocated_docu_title(::std::string* docu_title);

  // optional string add_time = 3;
  void clear_add_time();
  static const int kAddTimeFieldNumber = 3;
  const ::std::string& add_time() const;
  void set_add_time(const ::std::string& value);
  void set_add_time(const char* value);
  void set_add_time(const char* value, size_t size);
  ::std::string* mutable_add_time();
  ::std::string* release_add_time();
  void set_allocated_add_time(::std::string* add_time);

  // optional int32 star_level = 4;
  void clear_star_level();
  static const int kStarLevelFieldNumber = 4;
  ::google::protobuf::int32 star_level() const;
  void set_star_level(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:personal.CollectBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr docu_id_;
  ::google::protobuf::internal::ArenaStringPtr docu_title_;
  ::google::protobuf::internal::ArenaStringPtr add_time_;
  ::google::protobuf::int32 star_level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_msg_5fmy_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_msg_5fmy_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_msg_5fmy_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_msg_5fmy_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CollectBody> CollectBody_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectRequest

// optional string user_id = 1;
inline void MyCollectRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectRequest::user_id() const {
  // @@protoc_insertion_point(field_get:personal.MyCollectRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.MyCollectRequest.user_id)
}
inline void MyCollectRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.MyCollectRequest.user_id)
}
inline void MyCollectRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.MyCollectRequest.user_id)
}
inline ::std::string* MyCollectRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.MyCollectRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:personal.MyCollectRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:personal.MyCollectRequest.user_id)
}

// optional int32 page_number = 2;
inline void MyCollectRequest::clear_page_number() {
  page_number_ = 0;
}
inline ::google::protobuf::int32 MyCollectRequest::page_number() const {
  // @@protoc_insertion_point(field_get:personal.MyCollectRequest.page_number)
  return page_number_;
}
inline void MyCollectRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:personal.MyCollectRequest.page_number)
}

// optional int32 page_size = 3;
inline void MyCollectRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 MyCollectRequest::page_size() const {
  // @@protoc_insertion_point(field_get:personal.MyCollectRequest.page_size)
  return page_size_;
}
inline void MyCollectRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:personal.MyCollectRequest.page_size)
}

inline const MyCollectRequest* MyCollectRequest::internal_default_instance() {
  return &MyCollectRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectResponse

// repeated .personal.Any results = 1;
inline int MyCollectResponse::results_size() const {
  return results_.size();
}
inline void MyCollectResponse::clear_results() {
  results_.Clear();
}
inline const ::personal::Any& MyCollectResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:personal.MyCollectResponse.results)
  return results_.Get(index);
}
inline ::personal::Any* MyCollectResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:personal.MyCollectResponse.results)
  return results_.Mutable(index);
}
inline ::personal::Any* MyCollectResponse::add_results() {
  // @@protoc_insertion_point(field_add:personal.MyCollectResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::personal::Any >*
MyCollectResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:personal.MyCollectResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::personal::Any >&
MyCollectResponse::results() const {
  // @@protoc_insertion_point(field_list:personal.MyCollectResponse.results)
  return results_;
}

// optional bool has_more = 2;
inline void MyCollectResponse::clear_has_more() {
  has_more_ = false;
}
inline bool MyCollectResponse::has_more() const {
  // @@protoc_insertion_point(field_get:personal.MyCollectResponse.has_more)
  return has_more_;
}
inline void MyCollectResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:personal.MyCollectResponse.has_more)
}

// optional int32 total_count = 3;
inline void MyCollectResponse::clear_total_count() {
  total_count_ = 0;
}
inline ::google::protobuf::int32 MyCollectResponse::total_count() const {
  // @@protoc_insertion_point(field_get:personal.MyCollectResponse.total_count)
  return total_count_;
}
inline void MyCollectResponse::set_total_count(::google::protobuf::int32 value) {
  
  total_count_ = value;
  // @@protoc_insertion_point(field_set:personal.MyCollectResponse.total_count)
}

inline const MyCollectResponse* MyCollectResponse::internal_default_instance() {
  return &MyCollectResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CollectBody

// optional string docu_id = 1;
inline void CollectBody::clear_docu_id() {
  docu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::docu_id() const {
  // @@protoc_insertion_point(field_get:personal.CollectBody.docu_id)
  return docu_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_docu_id(const ::std::string& value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CollectBody.docu_id)
}
inline void CollectBody::set_docu_id(const char* value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CollectBody.docu_id)
}
inline void CollectBody::set_docu_id(const char* value, size_t size) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CollectBody.docu_id)
}
inline ::std::string* CollectBody::mutable_docu_id() {
  
  // @@protoc_insertion_point(field_mutable:personal.CollectBody.docu_id)
  return docu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_docu_id() {
  // @@protoc_insertion_point(field_release:personal.CollectBody.docu_id)
  
  return docu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_docu_id(::std::string* docu_id) {
  if (docu_id != NULL) {
    
  } else {
    
  }
  docu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_id);
  // @@protoc_insertion_point(field_set_allocated:personal.CollectBody.docu_id)
}

// optional string docu_title = 2;
inline void CollectBody::clear_docu_title() {
  docu_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::docu_title() const {
  // @@protoc_insertion_point(field_get:personal.CollectBody.docu_title)
  return docu_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_docu_title(const ::std::string& value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CollectBody.docu_title)
}
inline void CollectBody::set_docu_title(const char* value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CollectBody.docu_title)
}
inline void CollectBody::set_docu_title(const char* value, size_t size) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CollectBody.docu_title)
}
inline ::std::string* CollectBody::mutable_docu_title() {
  
  // @@protoc_insertion_point(field_mutable:personal.CollectBody.docu_title)
  return docu_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_docu_title() {
  // @@protoc_insertion_point(field_release:personal.CollectBody.docu_title)
  
  return docu_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_docu_title(::std::string* docu_title) {
  if (docu_title != NULL) {
    
  } else {
    
  }
  docu_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_title);
  // @@protoc_insertion_point(field_set_allocated:personal.CollectBody.docu_title)
}

// optional string add_time = 3;
inline void CollectBody::clear_add_time() {
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::add_time() const {
  // @@protoc_insertion_point(field_get:personal.CollectBody.add_time)
  return add_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_add_time(const ::std::string& value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:personal.CollectBody.add_time)
}
inline void CollectBody::set_add_time(const char* value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:personal.CollectBody.add_time)
}
inline void CollectBody::set_add_time(const char* value, size_t size) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:personal.CollectBody.add_time)
}
inline ::std::string* CollectBody::mutable_add_time() {
  
  // @@protoc_insertion_point(field_mutable:personal.CollectBody.add_time)
  return add_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_add_time() {
  // @@protoc_insertion_point(field_release:personal.CollectBody.add_time)
  
  return add_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_add_time(::std::string* add_time) {
  if (add_time != NULL) {
    
  } else {
    
  }
  add_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), add_time);
  // @@protoc_insertion_point(field_set_allocated:personal.CollectBody.add_time)
}

// optional int32 star_level = 4;
inline void CollectBody::clear_star_level() {
  star_level_ = 0;
}
inline ::google::protobuf::int32 CollectBody::star_level() const {
  // @@protoc_insertion_point(field_get:personal.CollectBody.star_level)
  return star_level_;
}
inline void CollectBody::set_star_level(::google::protobuf::int32 value) {
  
  star_level_ = value;
  // @@protoc_insertion_point(field_set:personal.CollectBody.star_level)
}

inline const CollectBody* CollectBody::internal_default_instance() {
  return &CollectBody_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace personal

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msg_5fmy_5fcollect_2eproto__INCLUDED
