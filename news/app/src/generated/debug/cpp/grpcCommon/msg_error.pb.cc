// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: grpcCommon/msg_error.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "grpcCommon/msg_error.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace grpcCommon {

namespace {

const ::google::protobuf::Descriptor* GrpcError_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GrpcError_reflection_ = NULL;
const ::google::protobuf::Descriptor* ErrorMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ErrorMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_grpcCommon_2fmsg_5ferror_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_grpcCommon_2fmsg_5ferror_2eproto() {
  protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "grpcCommon/msg_error.proto");
  GOOGLE_CHECK(file != NULL);
  GrpcError_descriptor_ = file->message_type(0);
  static const int GrpcError_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GrpcError, error_message_),
  };
  GrpcError_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      GrpcError_descriptor_,
      GrpcError::internal_default_instance(),
      GrpcError_offsets_,
      -1,
      -1,
      -1,
      sizeof(GrpcError),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GrpcError, _internal_metadata_));
  ErrorMessage_descriptor_ = file->message_type(1);
  static const int ErrorMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, error_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, error_reason_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, error_description_),
  };
  ErrorMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ErrorMessage_descriptor_,
      ErrorMessage::internal_default_instance(),
      ErrorMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(ErrorMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ErrorMessage, _internal_metadata_));
  ErrorCode_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_grpcCommon_2fmsg_5ferror_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      GrpcError_descriptor_, GrpcError::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ErrorMessage_descriptor_, ErrorMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_grpcCommon_2fmsg_5ferror_2eproto() {
  GrpcError_default_instance_.Shutdown();
  delete GrpcError_reflection_;
  ErrorMessage_default_instance_.Shutdown();
  delete ErrorMessage_reflection_;
}

void protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  GrpcError_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  ErrorMessage_default_instance_.DefaultConstruct();
  GrpcError_default_instance_.get_mutable()->InitAsDefaultInstance();
  ErrorMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto_once_);
void protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto_once_,
                 &protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto_impl);
}
void protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\032grpcCommon/msg_error.proto\022\ngrpcCommon"
    "\"<\n\tGrpcError\022/\n\rerror_message\030\001 \001(\0132\030.g"
    "rpcCommon.ErrorMessage\"j\n\014ErrorMessage\022)"
    "\n\nerror_code\030\001 \001(\0162\025.grpcCommon.ErrorCod"
    "e\022\024\n\014error_reason\030\002 \001(\t\022\031\n\021error_descrip"
    "tion\030\003 \001(\t*\231\001\n\tErrorCode\022\016\n\nPASS_ERROR\020\000"
    "\022\r\n\tNO_REGIST\020\001\022\016\n\nUSER_EXIST\020\002\022\016\n\nNEED_"
    "FIELD\020\003\022\027\n\023UNKNOWN_FILELD_TYPE\020\004\022\017\n\013RESU"
    "LT_NULL\020\005\022\020\n\014COMMON_ERROR\020\006\022\021\n\rUSER_IS_L"
    "OGIN\020\007B\030\n\026com.wanfang.grpcCommonb\006proto3", 400);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "grpcCommon/msg_error.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_grpcCommon_2fmsg_5ferror_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto_once_);
void protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto_once_,
                 &protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_grpcCommon_2fmsg_5ferror_2eproto {
  StaticDescriptorInitializer_grpcCommon_2fmsg_5ferror_2eproto() {
    protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  }
} static_descriptor_initializer_grpcCommon_2fmsg_5ferror_2eproto_;
const ::google::protobuf::EnumDescriptor* ErrorCode_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorCode_descriptor_;
}
bool ErrorCode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GrpcError::kErrorMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GrpcError::GrpcError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcCommon.GrpcError)
}

void GrpcError::InitAsDefaultInstance() {
  error_message_ = const_cast< ::grpcCommon::ErrorMessage*>(
      ::grpcCommon::ErrorMessage::internal_default_instance());
}

GrpcError::GrpcError(const GrpcError& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpcCommon.GrpcError)
}

void GrpcError::SharedCtor() {
  error_message_ = NULL;
  _cached_size_ = 0;
}

GrpcError::~GrpcError() {
  // @@protoc_insertion_point(destructor:grpcCommon.GrpcError)
  SharedDtor();
}

void GrpcError::SharedDtor() {
  if (this != &GrpcError_default_instance_.get()) {
    delete error_message_;
  }
}

void GrpcError::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GrpcError::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GrpcError_descriptor_;
}

const GrpcError& GrpcError::default_instance() {
  protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<GrpcError> GrpcError_default_instance_;

GrpcError* GrpcError::New(::google::protobuf::Arena* arena) const {
  GrpcError* n = new GrpcError;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GrpcError::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcCommon.GrpcError)
  if (GetArenaNoVirtual() == NULL && error_message_ != NULL) delete error_message_;
  error_message_ = NULL;
}

bool GrpcError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcCommon.GrpcError)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.ErrorMessage error_message = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error_message()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcCommon.GrpcError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcCommon.GrpcError)
  return false;
#undef DO_
}

void GrpcError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcCommon.GrpcError)
  // optional .grpcCommon.ErrorMessage error_message = 1;
  if (this->has_error_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_message_, output);
  }

  // @@protoc_insertion_point(serialize_end:grpcCommon.GrpcError)
}

::google::protobuf::uint8* GrpcError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcCommon.GrpcError)
  // optional .grpcCommon.ErrorMessage error_message = 1;
  if (this->has_error_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_message_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpcCommon.GrpcError)
  return target;
}

size_t GrpcError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcCommon.GrpcError)
  size_t total_size = 0;

  // optional .grpcCommon.ErrorMessage error_message = 1;
  if (this->has_error_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GrpcError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcCommon.GrpcError)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const GrpcError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GrpcError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcCommon.GrpcError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcCommon.GrpcError)
    UnsafeMergeFrom(*source);
  }
}

void GrpcError::MergeFrom(const GrpcError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcCommon.GrpcError)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void GrpcError::UnsafeMergeFrom(const GrpcError& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.has_error_message()) {
    mutable_error_message()->::grpcCommon::ErrorMessage::MergeFrom(from.error_message());
  }
}

void GrpcError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcCommon.GrpcError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GrpcError::CopyFrom(const GrpcError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcCommon.GrpcError)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool GrpcError::IsInitialized() const {

  return true;
}

void GrpcError::Swap(GrpcError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GrpcError::InternalSwap(GrpcError* other) {
  std::swap(error_message_, other->error_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GrpcError::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GrpcError_descriptor_;
  metadata.reflection = GrpcError_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GrpcError

// optional .grpcCommon.ErrorMessage error_message = 1;
bool GrpcError::has_error_message() const {
  return this != internal_default_instance() && error_message_ != NULL;
}
void GrpcError::clear_error_message() {
  if (GetArenaNoVirtual() == NULL && error_message_ != NULL) delete error_message_;
  error_message_ = NULL;
}
const ::grpcCommon::ErrorMessage& GrpcError::error_message() const {
  // @@protoc_insertion_point(field_get:grpcCommon.GrpcError.error_message)
  return error_message_ != NULL ? *error_message_
                         : *::grpcCommon::ErrorMessage::internal_default_instance();
}
::grpcCommon::ErrorMessage* GrpcError::mutable_error_message() {
  
  if (error_message_ == NULL) {
    error_message_ = new ::grpcCommon::ErrorMessage;
  }
  // @@protoc_insertion_point(field_mutable:grpcCommon.GrpcError.error_message)
  return error_message_;
}
::grpcCommon::ErrorMessage* GrpcError::release_error_message() {
  // @@protoc_insertion_point(field_release:grpcCommon.GrpcError.error_message)
  
  ::grpcCommon::ErrorMessage* temp = error_message_;
  error_message_ = NULL;
  return temp;
}
void GrpcError::set_allocated_error_message(::grpcCommon::ErrorMessage* error_message) {
  delete error_message_;
  error_message_ = error_message;
  if (error_message) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:grpcCommon.GrpcError.error_message)
}

inline const GrpcError* GrpcError::internal_default_instance() {
  return &GrpcError_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ErrorMessage::kErrorCodeFieldNumber;
const int ErrorMessage::kErrorReasonFieldNumber;
const int ErrorMessage::kErrorDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ErrorMessage::ErrorMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:grpcCommon.ErrorMessage)
}

void ErrorMessage::InitAsDefaultInstance() {
}

ErrorMessage::ErrorMessage(const ErrorMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:grpcCommon.ErrorMessage)
}

void ErrorMessage::SharedCtor() {
  error_reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_code_ = 0;
  _cached_size_ = 0;
}

ErrorMessage::~ErrorMessage() {
  // @@protoc_insertion_point(destructor:grpcCommon.ErrorMessage)
  SharedDtor();
}

void ErrorMessage::SharedDtor() {
  error_reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ErrorMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ErrorMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ErrorMessage_descriptor_;
}

const ErrorMessage& ErrorMessage::default_instance() {
  protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<ErrorMessage> ErrorMessage_default_instance_;

ErrorMessage* ErrorMessage::New(::google::protobuf::Arena* arena) const {
  ErrorMessage* n = new ErrorMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ErrorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:grpcCommon.ErrorMessage)
  error_code_ = 0;
  error_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool ErrorMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:grpcCommon.ErrorMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.ErrorCode error_code = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_error_code(static_cast< ::grpcCommon::ErrorCode >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error_reason;
        break;
      }

      // optional string error_reason = 2;
      case 2: {
        if (tag == 18) {
         parse_error_reason:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_reason().data(), this->error_reason().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcCommon.ErrorMessage.error_reason"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_error_description;
        break;
      }

      // optional string error_description = 3;
      case 3: {
        if (tag == 26) {
         parse_error_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->error_description().data(), this->error_description().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "grpcCommon.ErrorMessage.error_description"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:grpcCommon.ErrorMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:grpcCommon.ErrorMessage)
  return false;
#undef DO_
}

void ErrorMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:grpcCommon.ErrorMessage)
  // optional .grpcCommon.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->error_code(), output);
  }

  // optional string error_reason = 2;
  if (this->error_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_reason().data(), this->error_reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcCommon.ErrorMessage.error_reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_reason(), output);
  }

  // optional string error_description = 3;
  if (this->error_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_description().data(), this->error_description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcCommon.ErrorMessage.error_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->error_description(), output);
  }

  // @@protoc_insertion_point(serialize_end:grpcCommon.ErrorMessage)
}

::google::protobuf::uint8* ErrorMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:grpcCommon.ErrorMessage)
  // optional .grpcCommon.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->error_code(), target);
  }

  // optional string error_reason = 2;
  if (this->error_reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_reason().data(), this->error_reason().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcCommon.ErrorMessage.error_reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_reason(), target);
  }

  // optional string error_description = 3;
  if (this->error_description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->error_description().data(), this->error_description().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "grpcCommon.ErrorMessage.error_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->error_description(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:grpcCommon.ErrorMessage)
  return target;
}

size_t ErrorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:grpcCommon.ErrorMessage)
  size_t total_size = 0;

  // optional .grpcCommon.ErrorCode error_code = 1;
  if (this->error_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->error_code());
  }

  // optional string error_reason = 2;
  if (this->error_reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_reason());
  }

  // optional string error_description = 3;
  if (this->error_description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error_description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ErrorMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:grpcCommon.ErrorMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ErrorMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ErrorMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:grpcCommon.ErrorMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:grpcCommon.ErrorMessage)
    UnsafeMergeFrom(*source);
  }
}

void ErrorMessage::MergeFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:grpcCommon.ErrorMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void ErrorMessage::UnsafeMergeFrom(const ErrorMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.error_code() != 0) {
    set_error_code(from.error_code());
  }
  if (from.error_reason().size() > 0) {

    error_reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_reason_);
  }
  if (from.error_description().size() > 0) {

    error_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_description_);
  }
}

void ErrorMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:grpcCommon.ErrorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ErrorMessage::CopyFrom(const ErrorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:grpcCommon.ErrorMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool ErrorMessage::IsInitialized() const {

  return true;
}

void ErrorMessage::Swap(ErrorMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ErrorMessage::InternalSwap(ErrorMessage* other) {
  std::swap(error_code_, other->error_code_);
  error_reason_.Swap(&other->error_reason_);
  error_description_.Swap(&other->error_description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ErrorMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ErrorMessage_descriptor_;
  metadata.reflection = ErrorMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ErrorMessage

// optional .grpcCommon.ErrorCode error_code = 1;
void ErrorMessage::clear_error_code() {
  error_code_ = 0;
}
::grpcCommon::ErrorCode ErrorMessage::error_code() const {
  // @@protoc_insertion_point(field_get:grpcCommon.ErrorMessage.error_code)
  return static_cast< ::grpcCommon::ErrorCode >(error_code_);
}
void ErrorMessage::set_error_code(::grpcCommon::ErrorCode value) {
  
  error_code_ = value;
  // @@protoc_insertion_point(field_set:grpcCommon.ErrorMessage.error_code)
}

// optional string error_reason = 2;
void ErrorMessage::clear_error_reason() {
  error_reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorMessage::error_reason() const {
  // @@protoc_insertion_point(field_get:grpcCommon.ErrorMessage.error_reason)
  return error_reason_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorMessage::set_error_reason(const ::std::string& value) {
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpcCommon.ErrorMessage.error_reason)
}
void ErrorMessage::set_error_reason(const char* value) {
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpcCommon.ErrorMessage.error_reason)
}
void ErrorMessage::set_error_reason(const char* value, size_t size) {
  
  error_reason_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpcCommon.ErrorMessage.error_reason)
}
::std::string* ErrorMessage::mutable_error_reason() {
  
  // @@protoc_insertion_point(field_mutable:grpcCommon.ErrorMessage.error_reason)
  return error_reason_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorMessage::release_error_reason() {
  // @@protoc_insertion_point(field_release:grpcCommon.ErrorMessage.error_reason)
  
  return error_reason_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorMessage::set_allocated_error_reason(::std::string* error_reason) {
  if (error_reason != NULL) {
    
  } else {
    
  }
  error_reason_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_reason);
  // @@protoc_insertion_point(field_set_allocated:grpcCommon.ErrorMessage.error_reason)
}

// optional string error_description = 3;
void ErrorMessage::clear_error_description() {
  error_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ErrorMessage::error_description() const {
  // @@protoc_insertion_point(field_get:grpcCommon.ErrorMessage.error_description)
  return error_description_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorMessage::set_error_description(const ::std::string& value) {
  
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:grpcCommon.ErrorMessage.error_description)
}
void ErrorMessage::set_error_description(const char* value) {
  
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:grpcCommon.ErrorMessage.error_description)
}
void ErrorMessage::set_error_description(const char* value, size_t size) {
  
  error_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:grpcCommon.ErrorMessage.error_description)
}
::std::string* ErrorMessage::mutable_error_description() {
  
  // @@protoc_insertion_point(field_mutable:grpcCommon.ErrorMessage.error_description)
  return error_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ErrorMessage::release_error_description() {
  // @@protoc_insertion_point(field_release:grpcCommon.ErrorMessage.error_description)
  
  return error_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ErrorMessage::set_allocated_error_description(::std::string* error_description) {
  if (error_description != NULL) {
    
  } else {
    
  }
  error_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_description);
  // @@protoc_insertion_point(field_set_allocated:grpcCommon.ErrorMessage.error_description)
}

inline const ErrorMessage* ErrorMessage::internal_default_instance() {
  return &ErrorMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace grpcCommon

// @@protoc_insertion_point(global_scope)
