// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collect/msg_collect.proto

#ifndef PROTOBUF_collect_2fmsg_5fcollect_2eproto__INCLUDED
#define PROTOBUF_collect_2fmsg_5fcollect_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/any.pb.h>
#include "grpcCommon/msg_error.pb.h"
// @@protoc_insertion_point(includes)

namespace collect {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto();
void protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

class CheckISCollectedRequest;
class CheckISCollectedResponse;
class CollectBody;
class CollectRequest;
class CollectResponse;
class MyCollectConfMessage;
class MyCollectDegreeMessage;
class MyCollectDetailRequest;
class MyCollectDetailResponse;
class MyCollectPerioMessage;
class MyCollectRequest;
class MyCollectResponse;
class MyCollectSimilarPaperMessage;

enum MyCollectDetailType {
  DEGREE_TYPE = 0,
  CONFERENCE_TYPE = 1,
  PERIO_TYPE = 2,
  MyCollectDetailType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MyCollectDetailType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MyCollectDetailType_IsValid(int value);
const MyCollectDetailType MyCollectDetailType_MIN = DEGREE_TYPE;
const MyCollectDetailType MyCollectDetailType_MAX = PERIO_TYPE;
const int MyCollectDetailType_ARRAYSIZE = MyCollectDetailType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MyCollectDetailType_descriptor();
inline const ::std::string& MyCollectDetailType_Name(MyCollectDetailType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MyCollectDetailType_descriptor(), value);
}
inline bool MyCollectDetailType_Parse(
    const ::std::string& name, MyCollectDetailType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MyCollectDetailType>(
    MyCollectDetailType_descriptor(), name, value);
}
// ===================================================================

class CheckISCollectedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.CheckISCollectedRequest) */ {
 public:
  CheckISCollectedRequest();
  virtual ~CheckISCollectedRequest();

  CheckISCollectedRequest(const CheckISCollectedRequest& from);

  inline CheckISCollectedRequest& operator=(const CheckISCollectedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckISCollectedRequest& default_instance();

  static const CheckISCollectedRequest* internal_default_instance();

  void Swap(CheckISCollectedRequest* other);

  // implements Message ----------------------------------------------

  inline CheckISCollectedRequest* New() const { return New(NULL); }

  CheckISCollectedRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckISCollectedRequest& from);
  void MergeFrom(const CheckISCollectedRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckISCollectedRequest* other);
  void UnsafeMergeFrom(const CheckISCollectedRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string docu_id = 2;
  void clear_docu_id();
  static const int kDocuIdFieldNumber = 2;
  const ::std::string& docu_id() const;
  void set_docu_id(const ::std::string& value);
  void set_docu_id(const char* value);
  void set_docu_id(const char* value, size_t size);
  ::std::string* mutable_docu_id();
  ::std::string* release_docu_id();
  void set_allocated_docu_id(::std::string* docu_id);

  // optional string docu_type = 3;
  void clear_docu_type();
  static const int kDocuTypeFieldNumber = 3;
  const ::std::string& docu_type() const;
  void set_docu_type(const ::std::string& value);
  void set_docu_type(const char* value);
  void set_docu_type(const char* value, size_t size);
  ::std::string* mutable_docu_type();
  ::std::string* release_docu_type();
  void set_allocated_docu_type(::std::string* docu_type);

  // @@protoc_insertion_point(class_scope:collect.CheckISCollectedRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr docu_id_;
  ::google::protobuf::internal::ArenaStringPtr docu_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CheckISCollectedRequest> CheckISCollectedRequest_default_instance_;

// -------------------------------------------------------------------

class CheckISCollectedResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.CheckISCollectedResponse) */ {
 public:
  CheckISCollectedResponse();
  virtual ~CheckISCollectedResponse();

  CheckISCollectedResponse(const CheckISCollectedResponse& from);

  inline CheckISCollectedResponse& operator=(const CheckISCollectedResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckISCollectedResponse& default_instance();

  static const CheckISCollectedResponse* internal_default_instance();

  void Swap(CheckISCollectedResponse* other);

  // implements Message ----------------------------------------------

  inline CheckISCollectedResponse* New() const { return New(NULL); }

  CheckISCollectedResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckISCollectedResponse& from);
  void MergeFrom(const CheckISCollectedResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CheckISCollectedResponse* other);
  void UnsafeMergeFrom(const CheckISCollectedResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_collected = 1;
  void clear_is_collected();
  static const int kIsCollectedFieldNumber = 1;
  bool is_collected() const;
  void set_is_collected(bool value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:collect.CheckISCollectedResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  bool is_collected_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CheckISCollectedResponse> CheckISCollectedResponse_default_instance_;

// -------------------------------------------------------------------

class CollectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.CollectRequest) */ {
 public:
  CollectRequest();
  virtual ~CollectRequest();

  CollectRequest(const CollectRequest& from);

  inline CollectRequest& operator=(const CollectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectRequest& default_instance();

  static const CollectRequest* internal_default_instance();

  void Swap(CollectRequest* other);

  // implements Message ----------------------------------------------

  inline CollectRequest* New() const { return New(NULL); }

  CollectRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectRequest& from);
  void MergeFrom(const CollectRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CollectRequest* other);
  void UnsafeMergeFrom(const CollectRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional string doc_id = 2;
  void clear_doc_id();
  static const int kDocIdFieldNumber = 2;
  const ::std::string& doc_id() const;
  void set_doc_id(const ::std::string& value);
  void set_doc_id(const char* value);
  void set_doc_id(const char* value, size_t size);
  ::std::string* mutable_doc_id();
  ::std::string* release_doc_id();
  void set_allocated_doc_id(::std::string* doc_id);

  // optional string doc_type = 3;
  void clear_doc_type();
  static const int kDocTypeFieldNumber = 3;
  const ::std::string& doc_type() const;
  void set_doc_type(const ::std::string& value);
  void set_doc_type(const char* value);
  void set_doc_type(const char* value, size_t size);
  ::std::string* mutable_doc_type();
  ::std::string* release_doc_type();
  void set_allocated_doc_type(::std::string* doc_type);

  // @@protoc_insertion_point(class_scope:collect.CollectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::internal::ArenaStringPtr doc_id_;
  ::google::protobuf::internal::ArenaStringPtr doc_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CollectRequest> CollectRequest_default_instance_;

// -------------------------------------------------------------------

class CollectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.CollectResponse) */ {
 public:
  CollectResponse();
  virtual ~CollectResponse();

  CollectResponse(const CollectResponse& from);

  inline CollectResponse& operator=(const CollectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectResponse& default_instance();

  static const CollectResponse* internal_default_instance();

  void Swap(CollectResponse* other);

  // implements Message ----------------------------------------------

  inline CollectResponse* New() const { return New(NULL); }

  CollectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectResponse& from);
  void MergeFrom(const CollectResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CollectResponse* other);
  void UnsafeMergeFrom(const CollectResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool collect_success = 1;
  void clear_collect_success();
  static const int kCollectSuccessFieldNumber = 1;
  bool collect_success() const;
  void set_collect_success(bool value);

  // optional .grpcCommon.GrpcError error = 2;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 2;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:collect.CollectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::grpcCommon::GrpcError* error_;
  bool collect_success_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CollectResponse> CollectResponse_default_instance_;

// -------------------------------------------------------------------

class MyCollectRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectRequest) */ {
 public:
  MyCollectRequest();
  virtual ~MyCollectRequest();

  MyCollectRequest(const MyCollectRequest& from);

  inline MyCollectRequest& operator=(const MyCollectRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectRequest& default_instance();

  static const MyCollectRequest* internal_default_instance();

  void Swap(MyCollectRequest* other);

  // implements Message ----------------------------------------------

  inline MyCollectRequest* New() const { return New(NULL); }

  MyCollectRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectRequest& from);
  void MergeFrom(const MyCollectRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectRequest* other);
  void UnsafeMergeFrom(const MyCollectRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string user_id = 1;
  void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  const ::std::string& user_id() const;
  void set_user_id(const ::std::string& value);
  void set_user_id(const char* value);
  void set_user_id(const char* value, size_t size);
  ::std::string* mutable_user_id();
  ::std::string* release_user_id();
  void set_allocated_user_id(::std::string* user_id);

  // optional int32 page_number = 2;
  void clear_page_number();
  static const int kPageNumberFieldNumber = 2;
  ::google::protobuf::int32 page_number() const;
  void set_page_number(::google::protobuf::int32 value);

  // optional int32 page_size = 3;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 3;
  ::google::protobuf::int32 page_size() const;
  void set_page_size(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:collect.MyCollectRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr user_id_;
  ::google::protobuf::int32 page_number_;
  ::google::protobuf::int32 page_size_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectRequest> MyCollectRequest_default_instance_;

// -------------------------------------------------------------------

class MyCollectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectResponse) */ {
 public:
  MyCollectResponse();
  virtual ~MyCollectResponse();

  MyCollectResponse(const MyCollectResponse& from);

  inline MyCollectResponse& operator=(const MyCollectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectResponse& default_instance();

  static const MyCollectResponse* internal_default_instance();

  void Swap(MyCollectResponse* other);

  // implements Message ----------------------------------------------

  inline MyCollectResponse* New() const { return New(NULL); }

  MyCollectResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectResponse& from);
  void MergeFrom(const MyCollectResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectResponse* other);
  void UnsafeMergeFrom(const MyCollectResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .google.protobuf.Any results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::google::protobuf::Any& results(int index) const;
  ::google::protobuf::Any* mutable_results(int index);
  ::google::protobuf::Any* add_results();
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
      results() const;

  // optional bool has_more = 2;
  void clear_has_more();
  static const int kHasMoreFieldNumber = 2;
  bool has_more() const;
  void set_has_more(bool value);

  // optional int32 total_count = 3;
  void clear_total_count();
  static const int kTotalCountFieldNumber = 3;
  ::google::protobuf::int32 total_count() const;
  void set_total_count(::google::protobuf::int32 value);

  // optional .grpcCommon.GrpcError error = 4;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 4;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // @@protoc_insertion_point(class_scope:collect.MyCollectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any > results_;
  ::grpcCommon::GrpcError* error_;
  bool has_more_;
  ::google::protobuf::int32 total_count_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectResponse> MyCollectResponse_default_instance_;

// -------------------------------------------------------------------

class CollectBody : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.CollectBody) */ {
 public:
  CollectBody();
  virtual ~CollectBody();

  CollectBody(const CollectBody& from);

  inline CollectBody& operator=(const CollectBody& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CollectBody& default_instance();

  static const CollectBody* internal_default_instance();

  void Swap(CollectBody* other);

  // implements Message ----------------------------------------------

  inline CollectBody* New() const { return New(NULL); }

  CollectBody* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CollectBody& from);
  void MergeFrom(const CollectBody& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(CollectBody* other);
  void UnsafeMergeFrom(const CollectBody& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string docu_id = 1;
  void clear_docu_id();
  static const int kDocuIdFieldNumber = 1;
  const ::std::string& docu_id() const;
  void set_docu_id(const ::std::string& value);
  void set_docu_id(const char* value);
  void set_docu_id(const char* value, size_t size);
  ::std::string* mutable_docu_id();
  ::std::string* release_docu_id();
  void set_allocated_docu_id(::std::string* docu_id);

  // optional string docu_title = 2;
  void clear_docu_title();
  static const int kDocuTitleFieldNumber = 2;
  const ::std::string& docu_title() const;
  void set_docu_title(const ::std::string& value);
  void set_docu_title(const char* value);
  void set_docu_title(const char* value, size_t size);
  ::std::string* mutable_docu_title();
  ::std::string* release_docu_title();
  void set_allocated_docu_title(::std::string* docu_title);

  // optional string add_time = 3;
  void clear_add_time();
  static const int kAddTimeFieldNumber = 3;
  const ::std::string& add_time() const;
  void set_add_time(const ::std::string& value);
  void set_add_time(const char* value);
  void set_add_time(const char* value, size_t size);
  ::std::string* mutable_add_time();
  ::std::string* release_add_time();
  void set_allocated_add_time(::std::string* add_time);

  // optional int32 star_level = 4;
  void clear_star_level();
  static const int kStarLevelFieldNumber = 4;
  ::google::protobuf::int32 star_level() const;
  void set_star_level(::google::protobuf::int32 value);

  // optional string docu_type = 5;
  void clear_docu_type();
  static const int kDocuTypeFieldNumber = 5;
  const ::std::string& docu_type() const;
  void set_docu_type(const ::std::string& value);
  void set_docu_type(const char* value);
  void set_docu_type(const char* value, size_t size);
  ::std::string* mutable_docu_type();
  ::std::string* release_docu_type();
  void set_allocated_docu_type(::std::string* docu_type);

  // @@protoc_insertion_point(class_scope:collect.CollectBody)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr docu_id_;
  ::google::protobuf::internal::ArenaStringPtr docu_title_;
  ::google::protobuf::internal::ArenaStringPtr add_time_;
  ::google::protobuf::internal::ArenaStringPtr docu_type_;
  ::google::protobuf::int32 star_level_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<CollectBody> CollectBody_default_instance_;

// -------------------------------------------------------------------

class MyCollectDetailRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectDetailRequest) */ {
 public:
  MyCollectDetailRequest();
  virtual ~MyCollectDetailRequest();

  MyCollectDetailRequest(const MyCollectDetailRequest& from);

  inline MyCollectDetailRequest& operator=(const MyCollectDetailRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectDetailRequest& default_instance();

  static const MyCollectDetailRequest* internal_default_instance();

  void Swap(MyCollectDetailRequest* other);

  // implements Message ----------------------------------------------

  inline MyCollectDetailRequest* New() const { return New(NULL); }

  MyCollectDetailRequest* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectDetailRequest& from);
  void MergeFrom(const MyCollectDetailRequest& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectDetailRequest* other);
  void UnsafeMergeFrom(const MyCollectDetailRequest& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string artical_id = 1;
  void clear_artical_id();
  static const int kArticalIdFieldNumber = 1;
  const ::std::string& artical_id() const;
  void set_artical_id(const ::std::string& value);
  void set_artical_id(const char* value);
  void set_artical_id(const char* value, size_t size);
  ::std::string* mutable_artical_id();
  ::std::string* release_artical_id();
  void set_allocated_artical_id(::std::string* artical_id);

  // optional string artical_type = 2;
  void clear_artical_type();
  static const int kArticalTypeFieldNumber = 2;
  const ::std::string& artical_type() const;
  void set_artical_type(const ::std::string& value);
  void set_artical_type(const char* value);
  void set_artical_type(const char* value, size_t size);
  ::std::string* mutable_artical_type();
  ::std::string* release_artical_type();
  void set_allocated_artical_type(::std::string* artical_type);

  // @@protoc_insertion_point(class_scope:collect.MyCollectDetailRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr artical_id_;
  ::google::protobuf::internal::ArenaStringPtr artical_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectDetailRequest> MyCollectDetailRequest_default_instance_;

// -------------------------------------------------------------------

class MyCollectDetailResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectDetailResponse) */ {
 public:
  MyCollectDetailResponse();
  virtual ~MyCollectDetailResponse();

  MyCollectDetailResponse(const MyCollectDetailResponse& from);

  inline MyCollectDetailResponse& operator=(const MyCollectDetailResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectDetailResponse& default_instance();

  static const MyCollectDetailResponse* internal_default_instance();

  void Swap(MyCollectDetailResponse* other);

  // implements Message ----------------------------------------------

  inline MyCollectDetailResponse* New() const { return New(NULL); }

  MyCollectDetailResponse* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectDetailResponse& from);
  void MergeFrom(const MyCollectDetailResponse& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectDetailResponse* other);
  void UnsafeMergeFrom(const MyCollectDetailResponse& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .grpcCommon.GrpcError error = 1;
  bool has_error() const;
  void clear_error();
  static const int kErrorFieldNumber = 1;
  const ::grpcCommon::GrpcError& error() const;
  ::grpcCommon::GrpcError* mutable_error();
  ::grpcCommon::GrpcError* release_error();
  void set_allocated_error(::grpcCommon::GrpcError* error);

  // optional string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string summary = 3;
  void clear_summary();
  static const int kSummaryFieldNumber = 3;
  const ::std::string& summary() const;
  void set_summary(const ::std::string& value);
  void set_summary(const char* value);
  void set_summary(const char* value, size_t size);
  ::std::string* mutable_summary();
  ::std::string* release_summary();
  void set_allocated_summary(::std::string* summary);

  // optional string keywords = 4;
  void clear_keywords();
  static const int kKeywordsFieldNumber = 4;
  const ::std::string& keywords() const;
  void set_keywords(const ::std::string& value);
  void set_keywords(const char* value);
  void set_keywords(const char* value, size_t size);
  ::std::string* mutable_keywords();
  ::std::string* release_keywords();
  void set_allocated_keywords(::std::string* keywords);

  // optional string authors_name = 5;
  void clear_authors_name();
  static const int kAuthorsNameFieldNumber = 5;
  const ::std::string& authors_name() const;
  void set_authors_name(const ::std::string& value);
  void set_authors_name(const char* value);
  void set_authors_name(const char* value, size_t size);
  ::std::string* mutable_authors_name();
  ::std::string* release_authors_name();
  void set_allocated_authors_name(::std::string* authors_name);

  // optional string cite_num = 6;
  void clear_cite_num();
  static const int kCiteNumFieldNumber = 6;
  const ::std::string& cite_num() const;
  void set_cite_num(const ::std::string& value);
  void set_cite_num(const char* value);
  void set_cite_num(const char* value, size_t size);
  ::std::string* mutable_cite_num();
  ::std::string* release_cite_num();
  void set_allocated_cite_num(::std::string* cite_num);

  // optional string download_num = 7;
  void clear_download_num();
  static const int kDownloadNumFieldNumber = 7;
  const ::std::string& download_num() const;
  void set_download_num(const ::std::string& value);
  void set_download_num(const char* value);
  void set_download_num(const char* value, size_t size);
  ::std::string* mutable_download_num();
  ::std::string* release_download_num();
  void set_allocated_download_num(::std::string* download_num);

  // optional string fulltext_reading_num = 8;
  void clear_fulltext_reading_num();
  static const int kFulltextReadingNumFieldNumber = 8;
  const ::std::string& fulltext_reading_num() const;
  void set_fulltext_reading_num(const ::std::string& value);
  void set_fulltext_reading_num(const char* value);
  void set_fulltext_reading_num(const char* value, size_t size);
  ::std::string* mutable_fulltext_reading_num();
  ::std::string* release_fulltext_reading_num();
  void set_allocated_fulltext_reading_num(::std::string* fulltext_reading_num);

  // optional string thirdparty_links_num = 9;
  void clear_thirdparty_links_num();
  static const int kThirdpartyLinksNumFieldNumber = 9;
  const ::std::string& thirdparty_links_num() const;
  void set_thirdparty_links_num(const ::std::string& value);
  void set_thirdparty_links_num(const char* value);
  void set_thirdparty_links_num(const char* value, size_t size);
  ::std::string* mutable_thirdparty_links_num();
  ::std::string* release_thirdparty_links_num();
  void set_allocated_thirdparty_links_num(::std::string* thirdparty_links_num);

  // optional .google.protobuf.Any collect_detail = 10;
  bool has_collect_detail() const;
  void clear_collect_detail();
  static const int kCollectDetailFieldNumber = 10;
  const ::google::protobuf::Any& collect_detail() const;
  ::google::protobuf::Any* mutable_collect_detail();
  ::google::protobuf::Any* release_collect_detail();
  void set_allocated_collect_detail(::google::protobuf::Any* collect_detail);

  // optional .collect.MyCollectDetailType detail_type = 11;
  void clear_detail_type();
  static const int kDetailTypeFieldNumber = 11;
  ::collect::MyCollectDetailType detail_type() const;
  void set_detail_type(::collect::MyCollectDetailType value);

  // repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
  int similar_papers_size() const;
  void clear_similar_papers();
  static const int kSimilarPapersFieldNumber = 12;
  const ::collect::MyCollectSimilarPaperMessage& similar_papers(int index) const;
  ::collect::MyCollectSimilarPaperMessage* mutable_similar_papers(int index);
  ::collect::MyCollectSimilarPaperMessage* add_similar_papers();
  ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >*
      mutable_similar_papers();
  const ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >&
      similar_papers() const;

  // optional string resource_id = 13;
  void clear_resource_id();
  static const int kResourceIdFieldNumber = 13;
  const ::std::string& resource_id() const;
  void set_resource_id(const ::std::string& value);
  void set_resource_id(const char* value);
  void set_resource_id(const char* value, size_t size);
  ::std::string* mutable_resource_id();
  ::std::string* release_resource_id();
  void set_allocated_resource_id(::std::string* resource_id);

  // optional string resource_db = 14;
  void clear_resource_db();
  static const int kResourceDbFieldNumber = 14;
  const ::std::string& resource_db() const;
  void set_resource_db(const ::std::string& value);
  void set_resource_db(const char* value);
  void set_resource_db(const char* value, size_t size);
  ::std::string* mutable_resource_db();
  ::std::string* release_resource_db();
  void set_allocated_resource_db(::std::string* resource_db);

  // optional string language = 15;
  void clear_language();
  static const int kLanguageFieldNumber = 15;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // optional string class_type = 16;
  void clear_class_type();
  static const int kClassTypeFieldNumber = 16;
  const ::std::string& class_type() const;
  void set_class_type(const ::std::string& value);
  void set_class_type(const char* value);
  void set_class_type(const char* value, size_t size);
  ::std::string* mutable_class_type();
  ::std::string* release_class_type();
  void set_allocated_class_type(::std::string* class_type);

  // @@protoc_insertion_point(class_scope:collect.MyCollectDetailResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage > similar_papers_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr summary_;
  ::google::protobuf::internal::ArenaStringPtr keywords_;
  ::google::protobuf::internal::ArenaStringPtr authors_name_;
  ::google::protobuf::internal::ArenaStringPtr cite_num_;
  ::google::protobuf::internal::ArenaStringPtr download_num_;
  ::google::protobuf::internal::ArenaStringPtr fulltext_reading_num_;
  ::google::protobuf::internal::ArenaStringPtr thirdparty_links_num_;
  ::google::protobuf::internal::ArenaStringPtr resource_id_;
  ::google::protobuf::internal::ArenaStringPtr resource_db_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::internal::ArenaStringPtr class_type_;
  ::grpcCommon::GrpcError* error_;
  ::google::protobuf::Any* collect_detail_;
  int detail_type_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectDetailResponse> MyCollectDetailResponse_default_instance_;

// -------------------------------------------------------------------

class MyCollectConfMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectConfMessage) */ {
 public:
  MyCollectConfMessage();
  virtual ~MyCollectConfMessage();

  MyCollectConfMessage(const MyCollectConfMessage& from);

  inline MyCollectConfMessage& operator=(const MyCollectConfMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectConfMessage& default_instance();

  static const MyCollectConfMessage* internal_default_instance();

  void Swap(MyCollectConfMessage* other);

  // implements Message ----------------------------------------------

  inline MyCollectConfMessage* New() const { return New(NULL); }

  MyCollectConfMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectConfMessage& from);
  void MergeFrom(const MyCollectConfMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectConfMessage* other);
  void UnsafeMergeFrom(const MyCollectConfMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string conf_name = 1;
  void clear_conf_name();
  static const int kConfNameFieldNumber = 1;
  const ::std::string& conf_name() const;
  void set_conf_name(const ::std::string& value);
  void set_conf_name(const char* value);
  void set_conf_name(const char* value, size_t size);
  ::std::string* mutable_conf_name();
  ::std::string* release_conf_name();
  void set_allocated_conf_name(::std::string* conf_name);

  // optional string conf_type = 2;
  void clear_conf_type();
  static const int kConfTypeFieldNumber = 2;
  const ::std::string& conf_type() const;
  void set_conf_type(const ::std::string& value);
  void set_conf_type(const char* value);
  void set_conf_type(const char* value, size_t size);
  ::std::string* mutable_conf_type();
  ::std::string* release_conf_type();
  void set_allocated_conf_type(::std::string* conf_type);

  // optional string conf_year = 3;
  void clear_conf_year();
  static const int kConfYearFieldNumber = 3;
  const ::std::string& conf_year() const;
  void set_conf_year(const ::std::string& value);
  void set_conf_year(const char* value);
  void set_conf_year(const char* value, size_t size);
  ::std::string* mutable_conf_year();
  ::std::string* release_conf_year();
  void set_allocated_conf_year(::std::string* conf_year);

  // optional string publish_place = 4;
  void clear_publish_place();
  static const int kPublishPlaceFieldNumber = 4;
  const ::std::string& publish_place() const;
  void set_publish_place(const ::std::string& value);
  void set_publish_place(const char* value);
  void set_publish_place(const char* value, size_t size);
  ::std::string* mutable_publish_place();
  ::std::string* release_publish_place();
  void set_allocated_publish_place(::std::string* publish_place);

  // optional string hostunit_name = 5;
  void clear_hostunit_name();
  static const int kHostunitNameFieldNumber = 5;
  const ::std::string& hostunit_name() const;
  void set_hostunit_name(const ::std::string& value);
  void set_hostunit_name(const char* value);
  void set_hostunit_name(const char* value, size_t size);
  ::std::string* mutable_hostunit_name();
  ::std::string* release_hostunit_name();
  void set_allocated_hostunit_name(::std::string* hostunit_name);

  // @@protoc_insertion_point(class_scope:collect.MyCollectConfMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr conf_name_;
  ::google::protobuf::internal::ArenaStringPtr conf_type_;
  ::google::protobuf::internal::ArenaStringPtr conf_year_;
  ::google::protobuf::internal::ArenaStringPtr publish_place_;
  ::google::protobuf::internal::ArenaStringPtr hostunit_name_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectConfMessage> MyCollectConfMessage_default_instance_;

// -------------------------------------------------------------------

class MyCollectPerioMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectPerioMessage) */ {
 public:
  MyCollectPerioMessage();
  virtual ~MyCollectPerioMessage();

  MyCollectPerioMessage(const MyCollectPerioMessage& from);

  inline MyCollectPerioMessage& operator=(const MyCollectPerioMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectPerioMessage& default_instance();

  static const MyCollectPerioMessage* internal_default_instance();

  void Swap(MyCollectPerioMessage* other);

  // implements Message ----------------------------------------------

  inline MyCollectPerioMessage* New() const { return New(NULL); }

  MyCollectPerioMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectPerioMessage& from);
  void MergeFrom(const MyCollectPerioMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectPerioMessage* other);
  void UnsafeMergeFrom(const MyCollectPerioMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string authors_unit = 1;
  void clear_authors_unit();
  static const int kAuthorsUnitFieldNumber = 1;
  const ::std::string& authors_unit() const;
  void set_authors_unit(const ::std::string& value);
  void set_authors_unit(const char* value);
  void set_authors_unit(const char* value, size_t size);
  ::std::string* mutable_authors_unit();
  ::std::string* release_authors_unit();
  void set_allocated_authors_unit(::std::string* authors_unit);

  // optional string perio_title = 2;
  void clear_perio_title();
  static const int kPerioTitleFieldNumber = 2;
  const ::std::string& perio_title() const;
  void set_perio_title(const ::std::string& value);
  void set_perio_title(const char* value);
  void set_perio_title(const char* value, size_t size);
  ::std::string* mutable_perio_title();
  ::std::string* release_perio_title();
  void set_allocated_perio_title(::std::string* perio_title);

  // optional string perio_title_en = 3;
  void clear_perio_title_en();
  static const int kPerioTitleEnFieldNumber = 3;
  const ::std::string& perio_title_en() const;
  void set_perio_title_en(const ::std::string& value);
  void set_perio_title_en(const char* value);
  void set_perio_title_en(const char* value, size_t size);
  ::std::string* mutable_perio_title_en();
  ::std::string* release_perio_title_en();
  void set_allocated_perio_title_en(::std::string* perio_title_en);

  // optional string publish_year = 4;
  void clear_publish_year();
  static const int kPublishYearFieldNumber = 4;
  const ::std::string& publish_year() const;
  void set_publish_year(const ::std::string& value);
  void set_publish_year(const char* value);
  void set_publish_year(const char* value, size_t size);
  ::std::string* mutable_publish_year();
  ::std::string* release_publish_year();
  void set_allocated_publish_year(::std::string* publish_year);

  // optional string issue_num = 5;
  void clear_issue_num();
  static const int kIssueNumFieldNumber = 5;
  const ::std::string& issue_num() const;
  void set_issue_num(const ::std::string& value);
  void set_issue_num(const char* value);
  void set_issue_num(const char* value, size_t size);
  ::std::string* mutable_issue_num();
  ::std::string* release_issue_num();
  void set_allocated_issue_num(::std::string* issue_num);

  // optional string abst_webdate = 6;
  void clear_abst_webdate();
  static const int kAbstWebdateFieldNumber = 6;
  const ::std::string& abst_webdate() const;
  void set_abst_webdate(const ::std::string& value);
  void set_abst_webdate(const char* value);
  void set_abst_webdate(const char* value, size_t size);
  ::std::string* mutable_abst_webdate();
  ::std::string* release_abst_webdate();
  void set_allocated_abst_webdate(::std::string* abst_webdate);

  // @@protoc_insertion_point(class_scope:collect.MyCollectPerioMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authors_unit_;
  ::google::protobuf::internal::ArenaStringPtr perio_title_;
  ::google::protobuf::internal::ArenaStringPtr perio_title_en_;
  ::google::protobuf::internal::ArenaStringPtr publish_year_;
  ::google::protobuf::internal::ArenaStringPtr issue_num_;
  ::google::protobuf::internal::ArenaStringPtr abst_webdate_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectPerioMessage> MyCollectPerioMessage_default_instance_;

// -------------------------------------------------------------------

class MyCollectDegreeMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectDegreeMessage) */ {
 public:
  MyCollectDegreeMessage();
  virtual ~MyCollectDegreeMessage();

  MyCollectDegreeMessage(const MyCollectDegreeMessage& from);

  inline MyCollectDegreeMessage& operator=(const MyCollectDegreeMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectDegreeMessage& default_instance();

  static const MyCollectDegreeMessage* internal_default_instance();

  void Swap(MyCollectDegreeMessage* other);

  // implements Message ----------------------------------------------

  inline MyCollectDegreeMessage* New() const { return New(NULL); }

  MyCollectDegreeMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectDegreeMessage& from);
  void MergeFrom(const MyCollectDegreeMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectDegreeMessage* other);
  void UnsafeMergeFrom(const MyCollectDegreeMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string deunit_name = 1;
  void clear_deunit_name();
  static const int kDeunitNameFieldNumber = 1;
  const ::std::string& deunit_name() const;
  void set_deunit_name(const ::std::string& value);
  void set_deunit_name(const char* value);
  void set_deunit_name(const char* value, size_t size);
  ::std::string* mutable_deunit_name();
  ::std::string* release_deunit_name();
  void set_allocated_deunit_name(::std::string* deunit_name);

  // optional string degree_level = 2;
  void clear_degree_level();
  static const int kDegreeLevelFieldNumber = 2;
  const ::std::string& degree_level() const;
  void set_degree_level(const ::std::string& value);
  void set_degree_level(const char* value);
  void set_degree_level(const char* value, size_t size);
  ::std::string* mutable_degree_level();
  ::std::string* release_degree_level();
  void set_allocated_degree_level(::std::string* degree_level);

  // optional string major_name = 3;
  void clear_major_name();
  static const int kMajorNameFieldNumber = 3;
  const ::std::string& major_name() const;
  void set_major_name(const ::std::string& value);
  void set_major_name(const char* value);
  void set_major_name(const char* value, size_t size);
  ::std::string* mutable_major_name();
  ::std::string* release_major_name();
  void set_allocated_major_name(::std::string* major_name);

  // optional string tutor_name = 4;
  void clear_tutor_name();
  static const int kTutorNameFieldNumber = 4;
  const ::std::string& tutor_name() const;
  void set_tutor_name(const ::std::string& value);
  void set_tutor_name(const char* value);
  void set_tutor_name(const char* value, size_t size);
  ::std::string* mutable_tutor_name();
  ::std::string* release_tutor_name();
  void set_allocated_tutor_name(::std::string* tutor_name);

  // optional string publish_year = 5;
  void clear_publish_year();
  static const int kPublishYearFieldNumber = 5;
  const ::std::string& publish_year() const;
  void set_publish_year(const ::std::string& value);
  void set_publish_year(const char* value);
  void set_publish_year(const char* value, size_t size);
  ::std::string* mutable_publish_year();
  ::std::string* release_publish_year();
  void set_allocated_publish_year(::std::string* publish_year);

  // @@protoc_insertion_point(class_scope:collect.MyCollectDegreeMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr deunit_name_;
  ::google::protobuf::internal::ArenaStringPtr degree_level_;
  ::google::protobuf::internal::ArenaStringPtr major_name_;
  ::google::protobuf::internal::ArenaStringPtr tutor_name_;
  ::google::protobuf::internal::ArenaStringPtr publish_year_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectDegreeMessage> MyCollectDegreeMessage_default_instance_;

// -------------------------------------------------------------------

class MyCollectSimilarPaperMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:collect.MyCollectSimilarPaperMessage) */ {
 public:
  MyCollectSimilarPaperMessage();
  virtual ~MyCollectSimilarPaperMessage();

  MyCollectSimilarPaperMessage(const MyCollectSimilarPaperMessage& from);

  inline MyCollectSimilarPaperMessage& operator=(const MyCollectSimilarPaperMessage& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MyCollectSimilarPaperMessage& default_instance();

  static const MyCollectSimilarPaperMessage* internal_default_instance();

  void Swap(MyCollectSimilarPaperMessage* other);

  // implements Message ----------------------------------------------

  inline MyCollectSimilarPaperMessage* New() const { return New(NULL); }

  MyCollectSimilarPaperMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MyCollectSimilarPaperMessage& from);
  void MergeFrom(const MyCollectSimilarPaperMessage& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(MyCollectSimilarPaperMessage* other);
  void UnsafeMergeFrom(const MyCollectSimilarPaperMessage& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string artical_id = 1;
  void clear_artical_id();
  static const int kArticalIdFieldNumber = 1;
  const ::std::string& artical_id() const;
  void set_artical_id(const ::std::string& value);
  void set_artical_id(const char* value);
  void set_artical_id(const char* value, size_t size);
  ::std::string* mutable_artical_id();
  ::std::string* release_artical_id();
  void set_allocated_artical_id(::std::string* artical_id);

  // optional string artical_type = 2;
  void clear_artical_type();
  static const int kArticalTypeFieldNumber = 2;
  const ::std::string& artical_type() const;
  void set_artical_type(const ::std::string& value);
  void set_artical_type(const char* value);
  void set_artical_type(const char* value, size_t size);
  ::std::string* mutable_artical_type();
  ::std::string* release_artical_type();
  void set_allocated_artical_type(::std::string* artical_type);

  // optional string title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // @@protoc_insertion_point(class_scope:collect.MyCollectSimilarPaperMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr artical_id_;
  ::google::protobuf::internal::ArenaStringPtr artical_type_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl();
  friend void  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl();
  friend void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto();
  friend void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<MyCollectSimilarPaperMessage> MyCollectSimilarPaperMessage_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckISCollectedRequest

// optional string user_id = 1;
inline void CheckISCollectedRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckISCollectedRequest::user_id() const {
  // @@protoc_insertion_point(field_get:collect.CheckISCollectedRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CheckISCollectedRequest.user_id)
}
inline void CheckISCollectedRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CheckISCollectedRequest.user_id)
}
inline void CheckISCollectedRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CheckISCollectedRequest.user_id)
}
inline ::std::string* CheckISCollectedRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CheckISCollectedRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckISCollectedRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:collect.CheckISCollectedRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CheckISCollectedRequest.user_id)
}

// optional string docu_id = 2;
inline void CheckISCollectedRequest::clear_docu_id() {
  docu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckISCollectedRequest::docu_id() const {
  // @@protoc_insertion_point(field_get:collect.CheckISCollectedRequest.docu_id)
  return docu_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_docu_id(const ::std::string& value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CheckISCollectedRequest.docu_id)
}
inline void CheckISCollectedRequest::set_docu_id(const char* value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CheckISCollectedRequest.docu_id)
}
inline void CheckISCollectedRequest::set_docu_id(const char* value, size_t size) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CheckISCollectedRequest.docu_id)
}
inline ::std::string* CheckISCollectedRequest::mutable_docu_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CheckISCollectedRequest.docu_id)
  return docu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckISCollectedRequest::release_docu_id() {
  // @@protoc_insertion_point(field_release:collect.CheckISCollectedRequest.docu_id)
  
  return docu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_allocated_docu_id(::std::string* docu_id) {
  if (docu_id != NULL) {
    
  } else {
    
  }
  docu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CheckISCollectedRequest.docu_id)
}

// optional string docu_type = 3;
inline void CheckISCollectedRequest::clear_docu_type() {
  docu_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckISCollectedRequest::docu_type() const {
  // @@protoc_insertion_point(field_get:collect.CheckISCollectedRequest.docu_type)
  return docu_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_docu_type(const ::std::string& value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CheckISCollectedRequest.docu_type)
}
inline void CheckISCollectedRequest::set_docu_type(const char* value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CheckISCollectedRequest.docu_type)
}
inline void CheckISCollectedRequest::set_docu_type(const char* value, size_t size) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CheckISCollectedRequest.docu_type)
}
inline ::std::string* CheckISCollectedRequest::mutable_docu_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.CheckISCollectedRequest.docu_type)
  return docu_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckISCollectedRequest::release_docu_type() {
  // @@protoc_insertion_point(field_release:collect.CheckISCollectedRequest.docu_type)
  
  return docu_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckISCollectedRequest::set_allocated_docu_type(::std::string* docu_type) {
  if (docu_type != NULL) {
    
  } else {
    
  }
  docu_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_type);
  // @@protoc_insertion_point(field_set_allocated:collect.CheckISCollectedRequest.docu_type)
}

inline const CheckISCollectedRequest* CheckISCollectedRequest::internal_default_instance() {
  return &CheckISCollectedRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CheckISCollectedResponse

// optional bool is_collected = 1;
inline void CheckISCollectedResponse::clear_is_collected() {
  is_collected_ = false;
}
inline bool CheckISCollectedResponse::is_collected() const {
  // @@protoc_insertion_point(field_get:collect.CheckISCollectedResponse.is_collected)
  return is_collected_;
}
inline void CheckISCollectedResponse::set_is_collected(bool value) {
  
  is_collected_ = value;
  // @@protoc_insertion_point(field_set:collect.CheckISCollectedResponse.is_collected)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool CheckISCollectedResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void CheckISCollectedResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& CheckISCollectedResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.CheckISCollectedResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* CheckISCollectedResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.CheckISCollectedResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* CheckISCollectedResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.CheckISCollectedResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CheckISCollectedResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.CheckISCollectedResponse.error)
}

inline const CheckISCollectedResponse* CheckISCollectedResponse::internal_default_instance() {
  return &CheckISCollectedResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CollectRequest

// optional string user_id = 1;
inline void CollectRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectRequest::user_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.user_id)
}
inline void CollectRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.user_id)
}
inline void CollectRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.user_id)
}
inline ::std::string* CollectRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.user_id)
}

// optional string doc_id = 2;
inline void CollectRequest::clear_doc_id() {
  doc_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectRequest::doc_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.doc_id)
  return doc_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_doc_id(const ::std::string& value) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.doc_id)
}
inline void CollectRequest::set_doc_id(const char* value) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.doc_id)
}
inline void CollectRequest::set_doc_id(const char* value, size_t size) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.doc_id)
}
inline ::std::string* CollectRequest::mutable_doc_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.doc_id)
  return doc_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectRequest::release_doc_id() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.doc_id)
  
  return doc_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_allocated_doc_id(::std::string* doc_id) {
  if (doc_id != NULL) {
    
  } else {
    
  }
  doc_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.doc_id)
}

// optional string doc_type = 3;
inline void CollectRequest::clear_doc_type() {
  doc_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectRequest::doc_type() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.doc_type)
  return doc_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_doc_type(const ::std::string& value) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.doc_type)
}
inline void CollectRequest::set_doc_type(const char* value) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.doc_type)
}
inline void CollectRequest::set_doc_type(const char* value, size_t size) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.doc_type)
}
inline ::std::string* CollectRequest::mutable_doc_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.doc_type)
  return doc_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectRequest::release_doc_type() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.doc_type)
  
  return doc_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectRequest::set_allocated_doc_type(::std::string* doc_type) {
  if (doc_type != NULL) {
    
  } else {
    
  }
  doc_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_type);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.doc_type)
}

inline const CollectRequest* CollectRequest::internal_default_instance() {
  return &CollectRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// CollectResponse

// optional bool collect_success = 1;
inline void CollectResponse::clear_collect_success() {
  collect_success_ = false;
}
inline bool CollectResponse::collect_success() const {
  // @@protoc_insertion_point(field_get:collect.CollectResponse.collect_success)
  return collect_success_;
}
inline void CollectResponse::set_collect_success(bool value) {
  
  collect_success_ = value;
  // @@protoc_insertion_point(field_set:collect.CollectResponse.collect_success)
}

// optional .grpcCommon.GrpcError error = 2;
inline bool CollectResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void CollectResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& CollectResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.CollectResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* CollectResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.CollectResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* CollectResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.CollectResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void CollectResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.CollectResponse.error)
}

inline const CollectResponse* CollectResponse::internal_default_instance() {
  return &CollectResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectRequest

// optional string user_id = 1;
inline void MyCollectRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectRequest::user_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.user_id)
}
inline void MyCollectRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectRequest.user_id)
}
inline void MyCollectRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectRequest.user_id)
}
inline ::std::string* MyCollectRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectRequest.user_id)
}

// optional int32 page_number = 2;
inline void MyCollectRequest::clear_page_number() {
  page_number_ = 0;
}
inline ::google::protobuf::int32 MyCollectRequest::page_number() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.page_number)
  return page_number_;
}
inline void MyCollectRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.page_number)
}

// optional int32 page_size = 3;
inline void MyCollectRequest::clear_page_size() {
  page_size_ = 0;
}
inline ::google::protobuf::int32 MyCollectRequest::page_size() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.page_size)
  return page_size_;
}
inline void MyCollectRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.page_size)
}

inline const MyCollectRequest* MyCollectRequest::internal_default_instance() {
  return &MyCollectRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectResponse

// repeated .google.protobuf.Any results = 1;
inline int MyCollectResponse::results_size() const {
  return results_.size();
}
inline void MyCollectResponse::clear_results() {
  results_.Clear();
}
inline const ::google::protobuf::Any& MyCollectResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.results)
  return results_.Get(index);
}
inline ::google::protobuf::Any* MyCollectResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:collect.MyCollectResponse.results)
  return results_.Mutable(index);
}
inline ::google::protobuf::Any* MyCollectResponse::add_results() {
  // @@protoc_insertion_point(field_add:collect.MyCollectResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
MyCollectResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:collect.MyCollectResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
MyCollectResponse::results() const {
  // @@protoc_insertion_point(field_list:collect.MyCollectResponse.results)
  return results_;
}

// optional bool has_more = 2;
inline void MyCollectResponse::clear_has_more() {
  has_more_ = false;
}
inline bool MyCollectResponse::has_more() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.has_more)
  return has_more_;
}
inline void MyCollectResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectResponse.has_more)
}

// optional int32 total_count = 3;
inline void MyCollectResponse::clear_total_count() {
  total_count_ = 0;
}
inline ::google::protobuf::int32 MyCollectResponse::total_count() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.total_count)
  return total_count_;
}
inline void MyCollectResponse::set_total_count(::google::protobuf::int32 value) {
  
  total_count_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectResponse.total_count)
}

// optional .grpcCommon.GrpcError error = 4;
inline bool MyCollectResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void MyCollectResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& MyCollectResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* MyCollectResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* MyCollectResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.MyCollectResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void MyCollectResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectResponse.error)
}

inline const MyCollectResponse* MyCollectResponse::internal_default_instance() {
  return &MyCollectResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// CollectBody

// optional string docu_id = 1;
inline void CollectBody::clear_docu_id() {
  docu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::docu_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_id)
  return docu_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_docu_id(const ::std::string& value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_id)
}
inline void CollectBody::set_docu_id(const char* value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_id)
}
inline void CollectBody::set_docu_id(const char* value, size_t size) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_id)
}
inline ::std::string* CollectBody::mutable_docu_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_id)
  return docu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_docu_id() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_id)
  
  return docu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_docu_id(::std::string* docu_id) {
  if (docu_id != NULL) {
    
  } else {
    
  }
  docu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_id)
}

// optional string docu_title = 2;
inline void CollectBody::clear_docu_title() {
  docu_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::docu_title() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_title)
  return docu_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_docu_title(const ::std::string& value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_title)
}
inline void CollectBody::set_docu_title(const char* value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_title)
}
inline void CollectBody::set_docu_title(const char* value, size_t size) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_title)
}
inline ::std::string* CollectBody::mutable_docu_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_title)
  return docu_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_docu_title() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_title)
  
  return docu_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_docu_title(::std::string* docu_title) {
  if (docu_title != NULL) {
    
  } else {
    
  }
  docu_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_title);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_title)
}

// optional string add_time = 3;
inline void CollectBody::clear_add_time() {
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::add_time() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.add_time)
  return add_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_add_time(const ::std::string& value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.add_time)
}
inline void CollectBody::set_add_time(const char* value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.add_time)
}
inline void CollectBody::set_add_time(const char* value, size_t size) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.add_time)
}
inline ::std::string* CollectBody::mutable_add_time() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.add_time)
  return add_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_add_time() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.add_time)
  
  return add_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_add_time(::std::string* add_time) {
  if (add_time != NULL) {
    
  } else {
    
  }
  add_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), add_time);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.add_time)
}

// optional int32 star_level = 4;
inline void CollectBody::clear_star_level() {
  star_level_ = 0;
}
inline ::google::protobuf::int32 CollectBody::star_level() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.star_level)
  return star_level_;
}
inline void CollectBody::set_star_level(::google::protobuf::int32 value) {
  
  star_level_ = value;
  // @@protoc_insertion_point(field_set:collect.CollectBody.star_level)
}

// optional string docu_type = 5;
inline void CollectBody::clear_docu_type() {
  docu_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CollectBody::docu_type() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_type)
  return docu_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_docu_type(const ::std::string& value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_type)
}
inline void CollectBody::set_docu_type(const char* value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_type)
}
inline void CollectBody::set_docu_type(const char* value, size_t size) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_type)
}
inline ::std::string* CollectBody::mutable_docu_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_type)
  return docu_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CollectBody::release_docu_type() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_type)
  
  return docu_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CollectBody::set_allocated_docu_type(::std::string* docu_type) {
  if (docu_type != NULL) {
    
  } else {
    
  }
  docu_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_type);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_type)
}

inline const CollectBody* CollectBody::internal_default_instance() {
  return &CollectBody_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectDetailRequest

// optional string artical_id = 1;
inline void MyCollectDetailRequest::clear_artical_id() {
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailRequest::artical_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailRequest.artical_id)
  return artical_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailRequest::set_artical_id(const ::std::string& value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailRequest.artical_id)
}
inline void MyCollectDetailRequest::set_artical_id(const char* value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailRequest.artical_id)
}
inline void MyCollectDetailRequest::set_artical_id(const char* value, size_t size) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailRequest.artical_id)
}
inline ::std::string* MyCollectDetailRequest::mutable_artical_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailRequest.artical_id)
  return artical_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailRequest::release_artical_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailRequest.artical_id)
  
  return artical_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailRequest::set_allocated_artical_id(::std::string* artical_id) {
  if (artical_id != NULL) {
    
  } else {
    
  }
  artical_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailRequest.artical_id)
}

// optional string artical_type = 2;
inline void MyCollectDetailRequest::clear_artical_type() {
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailRequest::artical_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailRequest.artical_type)
  return artical_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailRequest::set_artical_type(const ::std::string& value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailRequest.artical_type)
}
inline void MyCollectDetailRequest::set_artical_type(const char* value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailRequest.artical_type)
}
inline void MyCollectDetailRequest::set_artical_type(const char* value, size_t size) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailRequest.artical_type)
}
inline ::std::string* MyCollectDetailRequest::mutable_artical_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailRequest.artical_type)
  return artical_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailRequest::release_artical_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailRequest.artical_type)
  
  return artical_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailRequest::set_allocated_artical_type(::std::string* artical_type) {
  if (artical_type != NULL) {
    
  } else {
    
  }
  artical_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailRequest.artical_type)
}

inline const MyCollectDetailRequest* MyCollectDetailRequest::internal_default_instance() {
  return &MyCollectDetailRequest_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectDetailResponse

// optional .grpcCommon.GrpcError error = 1;
inline bool MyCollectDetailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
inline void MyCollectDetailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
inline const ::grpcCommon::GrpcError& MyCollectDetailResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
inline ::grpcCommon::GrpcError* MyCollectDetailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.error)
  return error_;
}
inline ::grpcCommon::GrpcError* MyCollectDetailResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
inline void MyCollectDetailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.error)
}

// optional string title = 2;
inline void MyCollectDetailResponse::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.title)
}
inline void MyCollectDetailResponse::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.title)
}
inline void MyCollectDetailResponse::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.title)
}
inline ::std::string* MyCollectDetailResponse::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.title)
}

// optional string summary = 3;
inline void MyCollectDetailResponse::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::summary() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.summary)
  return summary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_summary(const ::std::string& value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.summary)
}
inline void MyCollectDetailResponse::set_summary(const char* value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.summary)
}
inline void MyCollectDetailResponse::set_summary(const char* value, size_t size) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.summary)
}
inline ::std::string* MyCollectDetailResponse::mutable_summary() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_summary() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.summary)
  
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    
  } else {
    
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.summary)
}

// optional string keywords = 4;
inline void MyCollectDetailResponse::clear_keywords() {
  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::keywords() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.keywords)
  return keywords_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_keywords(const ::std::string& value) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.keywords)
}
inline void MyCollectDetailResponse::set_keywords(const char* value) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.keywords)
}
inline void MyCollectDetailResponse::set_keywords(const char* value, size_t size) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.keywords)
}
inline ::std::string* MyCollectDetailResponse::mutable_keywords() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.keywords)
  return keywords_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_keywords() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.keywords)
  
  return keywords_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_keywords(::std::string* keywords) {
  if (keywords != NULL) {
    
  } else {
    
  }
  keywords_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keywords);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.keywords)
}

// optional string authors_name = 5;
inline void MyCollectDetailResponse::clear_authors_name() {
  authors_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::authors_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.authors_name)
  return authors_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_authors_name(const ::std::string& value) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.authors_name)
}
inline void MyCollectDetailResponse::set_authors_name(const char* value) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.authors_name)
}
inline void MyCollectDetailResponse::set_authors_name(const char* value, size_t size) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.authors_name)
}
inline ::std::string* MyCollectDetailResponse::mutable_authors_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.authors_name)
  return authors_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_authors_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.authors_name)
  
  return authors_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_authors_name(::std::string* authors_name) {
  if (authors_name != NULL) {
    
  } else {
    
  }
  authors_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authors_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.authors_name)
}

// optional string cite_num = 6;
inline void MyCollectDetailResponse::clear_cite_num() {
  cite_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::cite_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.cite_num)
  return cite_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_cite_num(const ::std::string& value) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.cite_num)
}
inline void MyCollectDetailResponse::set_cite_num(const char* value) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.cite_num)
}
inline void MyCollectDetailResponse::set_cite_num(const char* value, size_t size) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.cite_num)
}
inline ::std::string* MyCollectDetailResponse::mutable_cite_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.cite_num)
  return cite_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_cite_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.cite_num)
  
  return cite_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_cite_num(::std::string* cite_num) {
  if (cite_num != NULL) {
    
  } else {
    
  }
  cite_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cite_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.cite_num)
}

// optional string download_num = 7;
inline void MyCollectDetailResponse::clear_download_num() {
  download_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::download_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.download_num)
  return download_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_download_num(const ::std::string& value) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.download_num)
}
inline void MyCollectDetailResponse::set_download_num(const char* value) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.download_num)
}
inline void MyCollectDetailResponse::set_download_num(const char* value, size_t size) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.download_num)
}
inline ::std::string* MyCollectDetailResponse::mutable_download_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.download_num)
  return download_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_download_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.download_num)
  
  return download_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_download_num(::std::string* download_num) {
  if (download_num != NULL) {
    
  } else {
    
  }
  download_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), download_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.download_num)
}

// optional string fulltext_reading_num = 8;
inline void MyCollectDetailResponse::clear_fulltext_reading_num() {
  fulltext_reading_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::fulltext_reading_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.fulltext_reading_num)
  return fulltext_reading_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_fulltext_reading_num(const ::std::string& value) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.fulltext_reading_num)
}
inline void MyCollectDetailResponse::set_fulltext_reading_num(const char* value) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.fulltext_reading_num)
}
inline void MyCollectDetailResponse::set_fulltext_reading_num(const char* value, size_t size) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.fulltext_reading_num)
}
inline ::std::string* MyCollectDetailResponse::mutable_fulltext_reading_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.fulltext_reading_num)
  return fulltext_reading_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_fulltext_reading_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.fulltext_reading_num)
  
  return fulltext_reading_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_fulltext_reading_num(::std::string* fulltext_reading_num) {
  if (fulltext_reading_num != NULL) {
    
  } else {
    
  }
  fulltext_reading_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fulltext_reading_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.fulltext_reading_num)
}

// optional string thirdparty_links_num = 9;
inline void MyCollectDetailResponse::clear_thirdparty_links_num() {
  thirdparty_links_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::thirdparty_links_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.thirdparty_links_num)
  return thirdparty_links_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_thirdparty_links_num(const ::std::string& value) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.thirdparty_links_num)
}
inline void MyCollectDetailResponse::set_thirdparty_links_num(const char* value) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.thirdparty_links_num)
}
inline void MyCollectDetailResponse::set_thirdparty_links_num(const char* value, size_t size) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.thirdparty_links_num)
}
inline ::std::string* MyCollectDetailResponse::mutable_thirdparty_links_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.thirdparty_links_num)
  return thirdparty_links_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_thirdparty_links_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.thirdparty_links_num)
  
  return thirdparty_links_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_thirdparty_links_num(::std::string* thirdparty_links_num) {
  if (thirdparty_links_num != NULL) {
    
  } else {
    
  }
  thirdparty_links_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thirdparty_links_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.thirdparty_links_num)
}

// optional .google.protobuf.Any collect_detail = 10;
inline bool MyCollectDetailResponse::has_collect_detail() const {
  return this != internal_default_instance() && collect_detail_ != NULL;
}
inline void MyCollectDetailResponse::clear_collect_detail() {
  if (GetArenaNoVirtual() == NULL && collect_detail_ != NULL) delete collect_detail_;
  collect_detail_ = NULL;
}
inline const ::google::protobuf::Any& MyCollectDetailResponse::collect_detail() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.collect_detail)
  return collect_detail_ != NULL ? *collect_detail_
                         : *::google::protobuf::Any::internal_default_instance();
}
inline ::google::protobuf::Any* MyCollectDetailResponse::mutable_collect_detail() {
  
  if (collect_detail_ == NULL) {
    collect_detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.collect_detail)
  return collect_detail_;
}
inline ::google::protobuf::Any* MyCollectDetailResponse::release_collect_detail() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.collect_detail)
  
  ::google::protobuf::Any* temp = collect_detail_;
  collect_detail_ = NULL;
  return temp;
}
inline void MyCollectDetailResponse::set_allocated_collect_detail(::google::protobuf::Any* collect_detail) {
  delete collect_detail_;
  collect_detail_ = collect_detail;
  if (collect_detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.collect_detail)
}

// optional .collect.MyCollectDetailType detail_type = 11;
inline void MyCollectDetailResponse::clear_detail_type() {
  detail_type_ = 0;
}
inline ::collect::MyCollectDetailType MyCollectDetailResponse::detail_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.detail_type)
  return static_cast< ::collect::MyCollectDetailType >(detail_type_);
}
inline void MyCollectDetailResponse::set_detail_type(::collect::MyCollectDetailType value) {
  
  detail_type_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.detail_type)
}

// repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
inline int MyCollectDetailResponse::similar_papers_size() const {
  return similar_papers_.size();
}
inline void MyCollectDetailResponse::clear_similar_papers() {
  similar_papers_.Clear();
}
inline const ::collect::MyCollectSimilarPaperMessage& MyCollectDetailResponse::similar_papers(int index) const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Get(index);
}
inline ::collect::MyCollectSimilarPaperMessage* MyCollectDetailResponse::mutable_similar_papers(int index) {
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Mutable(index);
}
inline ::collect::MyCollectSimilarPaperMessage* MyCollectDetailResponse::add_similar_papers() {
  // @@protoc_insertion_point(field_add:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >*
MyCollectDetailResponse::mutable_similar_papers() {
  // @@protoc_insertion_point(field_mutable_list:collect.MyCollectDetailResponse.similar_papers)
  return &similar_papers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >&
MyCollectDetailResponse::similar_papers() const {
  // @@protoc_insertion_point(field_list:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_;
}

// optional string resource_id = 13;
inline void MyCollectDetailResponse::clear_resource_id() {
  resource_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::resource_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.resource_id)
  return resource_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_resource_id(const ::std::string& value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.resource_id)
}
inline void MyCollectDetailResponse::set_resource_id(const char* value) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.resource_id)
}
inline void MyCollectDetailResponse::set_resource_id(const char* value, size_t size) {
  
  resource_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.resource_id)
}
inline ::std::string* MyCollectDetailResponse::mutable_resource_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.resource_id)
  return resource_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_resource_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.resource_id)
  
  return resource_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_resource_id(::std::string* resource_id) {
  if (resource_id != NULL) {
    
  } else {
    
  }
  resource_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.resource_id)
}

// optional string resource_db = 14;
inline void MyCollectDetailResponse::clear_resource_db() {
  resource_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::resource_db() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.resource_db)
  return resource_db_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_resource_db(const ::std::string& value) {
  
  resource_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.resource_db)
}
inline void MyCollectDetailResponse::set_resource_db(const char* value) {
  
  resource_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.resource_db)
}
inline void MyCollectDetailResponse::set_resource_db(const char* value, size_t size) {
  
  resource_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.resource_db)
}
inline ::std::string* MyCollectDetailResponse::mutable_resource_db() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.resource_db)
  return resource_db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_resource_db() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.resource_db)
  
  return resource_db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_resource_db(::std::string* resource_db) {
  if (resource_db != NULL) {
    
  } else {
    
  }
  resource_db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), resource_db);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.resource_db)
}

// optional string language = 15;
inline void MyCollectDetailResponse::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::language() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.language)
  return language_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_language(const ::std::string& value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.language)
}
inline void MyCollectDetailResponse::set_language(const char* value) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.language)
}
inline void MyCollectDetailResponse::set_language(const char* value, size_t size) {
  
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.language)
}
inline ::std::string* MyCollectDetailResponse::mutable_language() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_language() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.language)
  
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    
  } else {
    
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.language)
}

// optional string class_type = 16;
inline void MyCollectDetailResponse::clear_class_type() {
  class_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDetailResponse::class_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.class_type)
  return class_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_class_type(const ::std::string& value) {
  
  class_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.class_type)
}
inline void MyCollectDetailResponse::set_class_type(const char* value) {
  
  class_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.class_type)
}
inline void MyCollectDetailResponse::set_class_type(const char* value, size_t size) {
  
  class_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.class_type)
}
inline ::std::string* MyCollectDetailResponse::mutable_class_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.class_type)
  return class_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDetailResponse::release_class_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.class_type)
  
  return class_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDetailResponse::set_allocated_class_type(::std::string* class_type) {
  if (class_type != NULL) {
    
  } else {
    
  }
  class_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), class_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.class_type)
}

inline const MyCollectDetailResponse* MyCollectDetailResponse::internal_default_instance() {
  return &MyCollectDetailResponse_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectConfMessage

// optional string conf_name = 1;
inline void MyCollectConfMessage::clear_conf_name() {
  conf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectConfMessage::conf_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_name)
  return conf_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_conf_name(const ::std::string& value) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_name)
}
inline void MyCollectConfMessage::set_conf_name(const char* value) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_name)
}
inline void MyCollectConfMessage::set_conf_name(const char* value, size_t size) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_name)
}
inline ::std::string* MyCollectConfMessage::mutable_conf_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_name)
  return conf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectConfMessage::release_conf_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_name)
  
  return conf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_allocated_conf_name(::std::string* conf_name) {
  if (conf_name != NULL) {
    
  } else {
    
  }
  conf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_name)
}

// optional string conf_type = 2;
inline void MyCollectConfMessage::clear_conf_type() {
  conf_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectConfMessage::conf_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_type)
  return conf_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_conf_type(const ::std::string& value) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_type)
}
inline void MyCollectConfMessage::set_conf_type(const char* value) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_type)
}
inline void MyCollectConfMessage::set_conf_type(const char* value, size_t size) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_type)
}
inline ::std::string* MyCollectConfMessage::mutable_conf_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_type)
  return conf_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectConfMessage::release_conf_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_type)
  
  return conf_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_allocated_conf_type(::std::string* conf_type) {
  if (conf_type != NULL) {
    
  } else {
    
  }
  conf_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_type)
}

// optional string conf_year = 3;
inline void MyCollectConfMessage::clear_conf_year() {
  conf_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectConfMessage::conf_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_year)
  return conf_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_conf_year(const ::std::string& value) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_year)
}
inline void MyCollectConfMessage::set_conf_year(const char* value) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_year)
}
inline void MyCollectConfMessage::set_conf_year(const char* value, size_t size) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_year)
}
inline ::std::string* MyCollectConfMessage::mutable_conf_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_year)
  return conf_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectConfMessage::release_conf_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_year)
  
  return conf_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_allocated_conf_year(::std::string* conf_year) {
  if (conf_year != NULL) {
    
  } else {
    
  }
  conf_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_year)
}

// optional string publish_place = 4;
inline void MyCollectConfMessage::clear_publish_place() {
  publish_place_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectConfMessage::publish_place() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.publish_place)
  return publish_place_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_publish_place(const ::std::string& value) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.publish_place)
}
inline void MyCollectConfMessage::set_publish_place(const char* value) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.publish_place)
}
inline void MyCollectConfMessage::set_publish_place(const char* value, size_t size) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.publish_place)
}
inline ::std::string* MyCollectConfMessage::mutable_publish_place() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.publish_place)
  return publish_place_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectConfMessage::release_publish_place() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.publish_place)
  
  return publish_place_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_allocated_publish_place(::std::string* publish_place) {
  if (publish_place != NULL) {
    
  } else {
    
  }
  publish_place_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_place);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.publish_place)
}

// optional string hostunit_name = 5;
inline void MyCollectConfMessage::clear_hostunit_name() {
  hostunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectConfMessage::hostunit_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.hostunit_name)
  return hostunit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_hostunit_name(const ::std::string& value) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.hostunit_name)
}
inline void MyCollectConfMessage::set_hostunit_name(const char* value) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.hostunit_name)
}
inline void MyCollectConfMessage::set_hostunit_name(const char* value, size_t size) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.hostunit_name)
}
inline ::std::string* MyCollectConfMessage::mutable_hostunit_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.hostunit_name)
  return hostunit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectConfMessage::release_hostunit_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.hostunit_name)
  
  return hostunit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectConfMessage::set_allocated_hostunit_name(::std::string* hostunit_name) {
  if (hostunit_name != NULL) {
    
  } else {
    
  }
  hostunit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostunit_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.hostunit_name)
}

inline const MyCollectConfMessage* MyCollectConfMessage::internal_default_instance() {
  return &MyCollectConfMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectPerioMessage

// optional string authors_unit = 1;
inline void MyCollectPerioMessage::clear_authors_unit() {
  authors_unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::authors_unit() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.authors_unit)
  return authors_unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_authors_unit(const ::std::string& value) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.authors_unit)
}
inline void MyCollectPerioMessage::set_authors_unit(const char* value) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.authors_unit)
}
inline void MyCollectPerioMessage::set_authors_unit(const char* value, size_t size) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.authors_unit)
}
inline ::std::string* MyCollectPerioMessage::mutable_authors_unit() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.authors_unit)
  return authors_unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_authors_unit() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.authors_unit)
  
  return authors_unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_authors_unit(::std::string* authors_unit) {
  if (authors_unit != NULL) {
    
  } else {
    
  }
  authors_unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authors_unit);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.authors_unit)
}

// optional string perio_title = 2;
inline void MyCollectPerioMessage::clear_perio_title() {
  perio_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::perio_title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.perio_title)
  return perio_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_perio_title(const ::std::string& value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.perio_title)
}
inline void MyCollectPerioMessage::set_perio_title(const char* value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.perio_title)
}
inline void MyCollectPerioMessage::set_perio_title(const char* value, size_t size) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.perio_title)
}
inline ::std::string* MyCollectPerioMessage::mutable_perio_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.perio_title)
  return perio_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_perio_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.perio_title)
  
  return perio_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_perio_title(::std::string* perio_title) {
  if (perio_title != NULL) {
    
  } else {
    
  }
  perio_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.perio_title)
}

// optional string perio_title_en = 3;
inline void MyCollectPerioMessage::clear_perio_title_en() {
  perio_title_en_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::perio_title_en() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.perio_title_en)
  return perio_title_en_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_perio_title_en(const ::std::string& value) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.perio_title_en)
}
inline void MyCollectPerioMessage::set_perio_title_en(const char* value) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.perio_title_en)
}
inline void MyCollectPerioMessage::set_perio_title_en(const char* value, size_t size) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.perio_title_en)
}
inline ::std::string* MyCollectPerioMessage::mutable_perio_title_en() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.perio_title_en)
  return perio_title_en_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_perio_title_en() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.perio_title_en)
  
  return perio_title_en_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_perio_title_en(::std::string* perio_title_en) {
  if (perio_title_en != NULL) {
    
  } else {
    
  }
  perio_title_en_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_title_en);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.perio_title_en)
}

// optional string publish_year = 4;
inline void MyCollectPerioMessage::clear_publish_year() {
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::publish_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.publish_year)
  return publish_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_publish_year(const ::std::string& value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.publish_year)
}
inline void MyCollectPerioMessage::set_publish_year(const char* value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.publish_year)
}
inline void MyCollectPerioMessage::set_publish_year(const char* value, size_t size) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.publish_year)
}
inline ::std::string* MyCollectPerioMessage::mutable_publish_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.publish_year)
  return publish_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_publish_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.publish_year)
  
  return publish_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_publish_year(::std::string* publish_year) {
  if (publish_year != NULL) {
    
  } else {
    
  }
  publish_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.publish_year)
}

// optional string issue_num = 5;
inline void MyCollectPerioMessage::clear_issue_num() {
  issue_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::issue_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.issue_num)
  return issue_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_issue_num(const ::std::string& value) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.issue_num)
}
inline void MyCollectPerioMessage::set_issue_num(const char* value) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.issue_num)
}
inline void MyCollectPerioMessage::set_issue_num(const char* value, size_t size) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.issue_num)
}
inline ::std::string* MyCollectPerioMessage::mutable_issue_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.issue_num)
  return issue_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_issue_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.issue_num)
  
  return issue_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_issue_num(::std::string* issue_num) {
  if (issue_num != NULL) {
    
  } else {
    
  }
  issue_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issue_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.issue_num)
}

// optional string abst_webdate = 6;
inline void MyCollectPerioMessage::clear_abst_webdate() {
  abst_webdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectPerioMessage::abst_webdate() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.abst_webdate)
  return abst_webdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_abst_webdate(const ::std::string& value) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.abst_webdate)
}
inline void MyCollectPerioMessage::set_abst_webdate(const char* value) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.abst_webdate)
}
inline void MyCollectPerioMessage::set_abst_webdate(const char* value, size_t size) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.abst_webdate)
}
inline ::std::string* MyCollectPerioMessage::mutable_abst_webdate() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.abst_webdate)
  return abst_webdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectPerioMessage::release_abst_webdate() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.abst_webdate)
  
  return abst_webdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectPerioMessage::set_allocated_abst_webdate(::std::string* abst_webdate) {
  if (abst_webdate != NULL) {
    
  } else {
    
  }
  abst_webdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), abst_webdate);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.abst_webdate)
}

inline const MyCollectPerioMessage* MyCollectPerioMessage::internal_default_instance() {
  return &MyCollectPerioMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectDegreeMessage

// optional string deunit_name = 1;
inline void MyCollectDegreeMessage::clear_deunit_name() {
  deunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDegreeMessage::deunit_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.deunit_name)
  return deunit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_deunit_name(const ::std::string& value) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.deunit_name)
}
inline void MyCollectDegreeMessage::set_deunit_name(const char* value) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.deunit_name)
}
inline void MyCollectDegreeMessage::set_deunit_name(const char* value, size_t size) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.deunit_name)
}
inline ::std::string* MyCollectDegreeMessage::mutable_deunit_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.deunit_name)
  return deunit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDegreeMessage::release_deunit_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.deunit_name)
  
  return deunit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_allocated_deunit_name(::std::string* deunit_name) {
  if (deunit_name != NULL) {
    
  } else {
    
  }
  deunit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deunit_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.deunit_name)
}

// optional string degree_level = 2;
inline void MyCollectDegreeMessage::clear_degree_level() {
  degree_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDegreeMessage::degree_level() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.degree_level)
  return degree_level_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_degree_level(const ::std::string& value) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.degree_level)
}
inline void MyCollectDegreeMessage::set_degree_level(const char* value) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.degree_level)
}
inline void MyCollectDegreeMessage::set_degree_level(const char* value, size_t size) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.degree_level)
}
inline ::std::string* MyCollectDegreeMessage::mutable_degree_level() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.degree_level)
  return degree_level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDegreeMessage::release_degree_level() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.degree_level)
  
  return degree_level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_allocated_degree_level(::std::string* degree_level) {
  if (degree_level != NULL) {
    
  } else {
    
  }
  degree_level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), degree_level);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.degree_level)
}

// optional string major_name = 3;
inline void MyCollectDegreeMessage::clear_major_name() {
  major_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDegreeMessage::major_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.major_name)
  return major_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_major_name(const ::std::string& value) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.major_name)
}
inline void MyCollectDegreeMessage::set_major_name(const char* value) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.major_name)
}
inline void MyCollectDegreeMessage::set_major_name(const char* value, size_t size) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.major_name)
}
inline ::std::string* MyCollectDegreeMessage::mutable_major_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.major_name)
  return major_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDegreeMessage::release_major_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.major_name)
  
  return major_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_allocated_major_name(::std::string* major_name) {
  if (major_name != NULL) {
    
  } else {
    
  }
  major_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), major_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.major_name)
}

// optional string tutor_name = 4;
inline void MyCollectDegreeMessage::clear_tutor_name() {
  tutor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDegreeMessage::tutor_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.tutor_name)
  return tutor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_tutor_name(const ::std::string& value) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.tutor_name)
}
inline void MyCollectDegreeMessage::set_tutor_name(const char* value) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.tutor_name)
}
inline void MyCollectDegreeMessage::set_tutor_name(const char* value, size_t size) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.tutor_name)
}
inline ::std::string* MyCollectDegreeMessage::mutable_tutor_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.tutor_name)
  return tutor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDegreeMessage::release_tutor_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.tutor_name)
  
  return tutor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_allocated_tutor_name(::std::string* tutor_name) {
  if (tutor_name != NULL) {
    
  } else {
    
  }
  tutor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tutor_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.tutor_name)
}

// optional string publish_year = 5;
inline void MyCollectDegreeMessage::clear_publish_year() {
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectDegreeMessage::publish_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.publish_year)
  return publish_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_publish_year(const ::std::string& value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.publish_year)
}
inline void MyCollectDegreeMessage::set_publish_year(const char* value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.publish_year)
}
inline void MyCollectDegreeMessage::set_publish_year(const char* value, size_t size) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.publish_year)
}
inline ::std::string* MyCollectDegreeMessage::mutable_publish_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.publish_year)
  return publish_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectDegreeMessage::release_publish_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.publish_year)
  
  return publish_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectDegreeMessage::set_allocated_publish_year(::std::string* publish_year) {
  if (publish_year != NULL) {
    
  } else {
    
  }
  publish_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.publish_year)
}

inline const MyCollectDegreeMessage* MyCollectDegreeMessage::internal_default_instance() {
  return &MyCollectDegreeMessage_default_instance_.get();
}
// -------------------------------------------------------------------

// MyCollectSimilarPaperMessage

// optional string artical_id = 1;
inline void MyCollectSimilarPaperMessage::clear_artical_id() {
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectSimilarPaperMessage::artical_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.artical_id)
  return artical_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_artical_id(const ::std::string& value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.artical_id)
}
inline void MyCollectSimilarPaperMessage::set_artical_id(const char* value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.artical_id)
}
inline void MyCollectSimilarPaperMessage::set_artical_id(const char* value, size_t size) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.artical_id)
}
inline ::std::string* MyCollectSimilarPaperMessage::mutable_artical_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.artical_id)
  return artical_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectSimilarPaperMessage::release_artical_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.artical_id)
  
  return artical_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_allocated_artical_id(::std::string* artical_id) {
  if (artical_id != NULL) {
    
  } else {
    
  }
  artical_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.artical_id)
}

// optional string artical_type = 2;
inline void MyCollectSimilarPaperMessage::clear_artical_type() {
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectSimilarPaperMessage::artical_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.artical_type)
  return artical_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_artical_type(const ::std::string& value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.artical_type)
}
inline void MyCollectSimilarPaperMessage::set_artical_type(const char* value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.artical_type)
}
inline void MyCollectSimilarPaperMessage::set_artical_type(const char* value, size_t size) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.artical_type)
}
inline ::std::string* MyCollectSimilarPaperMessage::mutable_artical_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.artical_type)
  return artical_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectSimilarPaperMessage::release_artical_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.artical_type)
  
  return artical_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_allocated_artical_type(::std::string* artical_type) {
  if (artical_type != NULL) {
    
  } else {
    
  }
  artical_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.artical_type)
}

// optional string title = 3;
inline void MyCollectSimilarPaperMessage::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MyCollectSimilarPaperMessage::title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.title)
}
inline void MyCollectSimilarPaperMessage::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.title)
}
inline void MyCollectSimilarPaperMessage::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.title)
}
inline ::std::string* MyCollectSimilarPaperMessage::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MyCollectSimilarPaperMessage::release_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MyCollectSimilarPaperMessage::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.title)
}

inline const MyCollectSimilarPaperMessage* MyCollectSimilarPaperMessage::internal_default_instance() {
  return &MyCollectSimilarPaperMessage_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace collect

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::collect::MyCollectDetailType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::collect::MyCollectDetailType>() {
  return ::collect::MyCollectDetailType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_collect_2fmsg_5fcollect_2eproto__INCLUDED
