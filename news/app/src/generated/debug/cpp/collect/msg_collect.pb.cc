// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: collect/msg_collect.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "collect/msg_collect.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace collect {

namespace {

const ::google::protobuf::Descriptor* CollectRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* CollectBody_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  CollectBody_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectDetailRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectDetailRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectDetailResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectDetailResponse_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectConfMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectConfMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectPerioMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectPerioMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectDegreeMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectDegreeMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* MyCollectSimilarPaperMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  MyCollectSimilarPaperMessage_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* MyCollectDetailType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto() {
  protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "collect/msg_collect.proto");
  GOOGLE_CHECK(file != NULL);
  CollectRequest_descriptor_ = file->message_type(0);
  static const int CollectRequest_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectRequest, doc_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectRequest, doc_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectRequest, classify_id_),
  };
  CollectRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectRequest_descriptor_,
      CollectRequest::internal_default_instance(),
      CollectRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectRequest, _internal_metadata_));
  CollectResponse_descriptor_ = file->message_type(1);
  static const int CollectResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectResponse, collect_success_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectResponse, error_),
  };
  CollectResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectResponse_descriptor_,
      CollectResponse::internal_default_instance(),
      CollectResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectResponse, _internal_metadata_));
  MyCollectRequest_descriptor_ = file->message_type(2);
  static const int MyCollectRequest_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectRequest, user_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectRequest, page_number_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectRequest, page_size_),
  };
  MyCollectRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectRequest_descriptor_,
      MyCollectRequest::internal_default_instance(),
      MyCollectRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectRequest, _internal_metadata_));
  MyCollectResponse_descriptor_ = file->message_type(3);
  static const int MyCollectResponse_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectResponse, results_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectResponse, has_more_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectResponse, total_count_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectResponse, error_),
  };
  MyCollectResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectResponse_descriptor_,
      MyCollectResponse::internal_default_instance(),
      MyCollectResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectResponse, _internal_metadata_));
  CollectBody_descriptor_ = file->message_type(4);
  static const int CollectBody_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, docu_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, docu_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, add_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, star_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, docu_type_),
  };
  CollectBody_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      CollectBody_descriptor_,
      CollectBody::internal_default_instance(),
      CollectBody_offsets_,
      -1,
      -1,
      -1,
      sizeof(CollectBody),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CollectBody, _internal_metadata_));
  MyCollectDetailRequest_descriptor_ = file->message_type(5);
  static const int MyCollectDetailRequest_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailRequest, artical_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailRequest, artical_type_),
  };
  MyCollectDetailRequest_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectDetailRequest_descriptor_,
      MyCollectDetailRequest::internal_default_instance(),
      MyCollectDetailRequest_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectDetailRequest),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailRequest, _internal_metadata_));
  MyCollectDetailResponse_descriptor_ = file->message_type(6);
  static const int MyCollectDetailResponse_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, error_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, summary_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, keywords_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, authors_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, cite_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, download_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, fulltext_reading_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, thirdparty_links_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, collect_detail_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, detail_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, similar_papers_),
  };
  MyCollectDetailResponse_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectDetailResponse_descriptor_,
      MyCollectDetailResponse::internal_default_instance(),
      MyCollectDetailResponse_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectDetailResponse),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDetailResponse, _internal_metadata_));
  MyCollectConfMessage_descriptor_ = file->message_type(7);
  static const int MyCollectConfMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, conf_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, conf_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, conf_year_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, publish_place_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, hostunit_name_),
  };
  MyCollectConfMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectConfMessage_descriptor_,
      MyCollectConfMessage::internal_default_instance(),
      MyCollectConfMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectConfMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectConfMessage, _internal_metadata_));
  MyCollectPerioMessage_descriptor_ = file->message_type(8);
  static const int MyCollectPerioMessage_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, authors_unit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, perio_title_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, perio_title_en_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, publish_year_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, issue_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, abst_webdate_),
  };
  MyCollectPerioMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectPerioMessage_descriptor_,
      MyCollectPerioMessage::internal_default_instance(),
      MyCollectPerioMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectPerioMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectPerioMessage, _internal_metadata_));
  MyCollectDegreeMessage_descriptor_ = file->message_type(9);
  static const int MyCollectDegreeMessage_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, deunit_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, degree_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, major_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, tutor_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, publish_year_),
  };
  MyCollectDegreeMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectDegreeMessage_descriptor_,
      MyCollectDegreeMessage::internal_default_instance(),
      MyCollectDegreeMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectDegreeMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectDegreeMessage, _internal_metadata_));
  MyCollectSimilarPaperMessage_descriptor_ = file->message_type(10);
  static const int MyCollectSimilarPaperMessage_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectSimilarPaperMessage, artical_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectSimilarPaperMessage, artical_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectSimilarPaperMessage, title_),
  };
  MyCollectSimilarPaperMessage_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      MyCollectSimilarPaperMessage_descriptor_,
      MyCollectSimilarPaperMessage::internal_default_instance(),
      MyCollectSimilarPaperMessage_offsets_,
      -1,
      -1,
      -1,
      sizeof(MyCollectSimilarPaperMessage),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MyCollectSimilarPaperMessage, _internal_metadata_));
  MyCollectDetailType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_collect_2fmsg_5fcollect_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectRequest_descriptor_, CollectRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectResponse_descriptor_, CollectResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectRequest_descriptor_, MyCollectRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectResponse_descriptor_, MyCollectResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      CollectBody_descriptor_, CollectBody::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectDetailRequest_descriptor_, MyCollectDetailRequest::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectDetailResponse_descriptor_, MyCollectDetailResponse::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectConfMessage_descriptor_, MyCollectConfMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectPerioMessage_descriptor_, MyCollectPerioMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectDegreeMessage_descriptor_, MyCollectDegreeMessage::internal_default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      MyCollectSimilarPaperMessage_descriptor_, MyCollectSimilarPaperMessage::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto() {
  CollectRequest_default_instance_.Shutdown();
  delete CollectRequest_reflection_;
  CollectResponse_default_instance_.Shutdown();
  delete CollectResponse_reflection_;
  MyCollectRequest_default_instance_.Shutdown();
  delete MyCollectRequest_reflection_;
  MyCollectResponse_default_instance_.Shutdown();
  delete MyCollectResponse_reflection_;
  CollectBody_default_instance_.Shutdown();
  delete CollectBody_reflection_;
  MyCollectDetailRequest_default_instance_.Shutdown();
  delete MyCollectDetailRequest_reflection_;
  MyCollectDetailResponse_default_instance_.Shutdown();
  delete MyCollectDetailResponse_reflection_;
  MyCollectConfMessage_default_instance_.Shutdown();
  delete MyCollectConfMessage_reflection_;
  MyCollectPerioMessage_default_instance_.Shutdown();
  delete MyCollectPerioMessage_reflection_;
  MyCollectDegreeMessage_default_instance_.Shutdown();
  delete MyCollectDegreeMessage_reflection_;
  MyCollectSimilarPaperMessage_default_instance_.Shutdown();
  delete MyCollectSimilarPaperMessage_reflection_;
}

void protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_InitDefaults_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_InitDefaults_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::GetEmptyString();
  CollectRequest_default_instance_.DefaultConstruct();
  CollectResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectRequest_default_instance_.DefaultConstruct();
  MyCollectResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  CollectBody_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectDetailRequest_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectDetailResponse_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectConfMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectPerioMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectDegreeMessage_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::GetEmptyString();
  MyCollectSimilarPaperMessage_default_instance_.DefaultConstruct();
  CollectRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  CollectResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  CollectBody_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectDetailRequest_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectDetailResponse_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectConfMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectPerioMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectDegreeMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
  MyCollectSimilarPaperMessage_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_once_);
void protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_once_,
                 &protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto_impl);
}
void protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\031collect/msg_collect.proto\022\007collect\032\031go"
    "ogle/protobuf/any.proto\032\032grpcCommon/msg_"
    "error.proto\"X\n\016CollectRequest\022\017\n\007user_id"
    "\030\001 \001(\t\022\016\n\006doc_id\030\002 \001(\t\022\020\n\010doc_type\030\003 \001(\t"
    "\022\023\n\013classify_id\030\004 \001(\t\"P\n\017CollectResponse"
    "\022\027\n\017collect_success\030\001 \001(\010\022$\n\005error\030\002 \001(\013"
    "2\025.grpcCommon.GrpcError\"K\n\020MyCollectRequ"
    "est\022\017\n\007user_id\030\001 \001(\t\022\023\n\013page_number\030\002 \001("
    "\005\022\021\n\tpage_size\030\003 \001(\005\"\207\001\n\021MyCollectRespon"
    "se\022%\n\007results\030\001 \003(\0132\024.google.protobuf.An"
    "y\022\020\n\010has_more\030\002 \001(\010\022\023\n\013total_count\030\003 \001(\005"
    "\022$\n\005error\030\004 \001(\0132\025.grpcCommon.GrpcError\"k"
    "\n\013CollectBody\022\017\n\007docu_id\030\001 \001(\t\022\022\n\ndocu_t"
    "itle\030\002 \001(\t\022\020\n\010add_time\030\003 \001(\t\022\022\n\nstar_lev"
    "el\030\004 \001(\005\022\021\n\tdocu_type\030\005 \001(\t\"B\n\026MyCollect"
    "DetailRequest\022\022\n\nartical_id\030\001 \001(\t\022\024\n\014art"
    "ical_type\030\002 \001(\t\"\213\003\n\027MyCollectDetailRespo"
    "nse\022$\n\005error\030\001 \001(\0132\025.grpcCommon.GrpcErro"
    "r\022\r\n\005title\030\002 \001(\t\022\017\n\007summary\030\003 \001(\t\022\020\n\010key"
    "words\030\004 \001(\t\022\024\n\014authors_name\030\005 \001(\t\022\020\n\010cit"
    "e_num\030\006 \001(\t\022\024\n\014download_num\030\007 \001(\t\022\034\n\024ful"
    "ltext_reading_num\030\010 \001(\t\022\034\n\024thirdparty_li"
    "nks_num\030\t \001(\t\022,\n\016collect_detail\030\n \001(\0132\024."
    "google.protobuf.Any\0221\n\013detail_type\030\013 \001(\016"
    "2\034.collect.MyCollectDetailType\022=\n\016simila"
    "r_papers\030\014 \003(\0132%.collect.MyCollectSimila"
    "rPaperMessage\"}\n\024MyCollectConfMessage\022\021\n"
    "\tconf_name\030\001 \001(\t\022\021\n\tconf_type\030\002 \001(\t\022\021\n\tc"
    "onf_year\030\003 \001(\t\022\025\n\rpublish_place\030\004 \001(\t\022\025\n"
    "\rhostunit_name\030\005 \001(\t\"\231\001\n\025MyCollectPerioM"
    "essage\022\024\n\014authors_unit\030\001 \001(\t\022\023\n\013perio_ti"
    "tle\030\002 \001(\t\022\026\n\016perio_title_en\030\003 \001(\t\022\024\n\014pub"
    "lish_year\030\004 \001(\t\022\021\n\tissue_num\030\005 \001(\t\022\024\n\014ab"
    "st_webdate\030\006 \001(\t\"\201\001\n\026MyCollectDegreeMess"
    "age\022\023\n\013deunit_name\030\001 \001(\t\022\024\n\014degree_level"
    "\030\002 \001(\t\022\022\n\nmajor_name\030\003 \001(\t\022\022\n\ntutor_name"
    "\030\004 \001(\t\022\024\n\014publish_year\030\005 \001(\t\"W\n\034MyCollec"
    "tSimilarPaperMessage\022\022\n\nartical_id\030\001 \001(\t"
    "\022\024\n\014artical_type\030\002 \001(\t\022\r\n\005title\030\003 \001(\t*K\n"
    "\023MyCollectDetailType\022\017\n\013DEGREE_TYPE\020\000\022\023\n"
    "\017CONFERENCE_TYPE\020\001\022\016\n\nPERIO_TYPE\020\002B\036\n\023co"
    "m.wanfang.collectP\001\242\002\004WFPRb\006proto3", 1674);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "collect/msg_collect.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fany_2eproto();
  ::grpcCommon::protobuf_AddDesc_grpcCommon_2fmsg_5ferror_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_collect_2fmsg_5fcollect_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_once_);
void protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_once_,
                 &protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_collect_2fmsg_5fcollect_2eproto {
  StaticDescriptorInitializer_collect_2fmsg_5fcollect_2eproto() {
    protobuf_AddDesc_collect_2fmsg_5fcollect_2eproto();
  }
} static_descriptor_initializer_collect_2fmsg_5fcollect_2eproto_;
const ::google::protobuf::EnumDescriptor* MyCollectDetailType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectDetailType_descriptor_;
}
bool MyCollectDetailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectRequest::kUserIdFieldNumber;
const int CollectRequest::kDocIdFieldNumber;
const int CollectRequest::kDocTypeFieldNumber;
const int CollectRequest::kClassifyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectRequest::CollectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.CollectRequest)
}

void CollectRequest::InitAsDefaultInstance() {
}

CollectRequest::CollectRequest(const CollectRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.CollectRequest)
}

void CollectRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

CollectRequest::~CollectRequest() {
  // @@protoc_insertion_point(destructor:collect.CollectRequest)
  SharedDtor();
}

void CollectRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CollectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectRequest_descriptor_;
}

const CollectRequest& CollectRequest::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CollectRequest> CollectRequest_default_instance_;

CollectRequest* CollectRequest::New(::google::protobuf::Arena* arena) const {
  CollectRequest* n = new CollectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.CollectRequest)
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  doc_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  classify_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CollectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.CollectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_doc_id;
        break;
      }

      // optional string doc_id = 2;
      case 2: {
        if (tag == 18) {
         parse_doc_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc_id().data(), this->doc_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectRequest.doc_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_doc_type;
        break;
      }

      // optional string doc_type = 3;
      case 3: {
        if (tag == 26) {
         parse_doc_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_doc_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->doc_type().data(), this->doc_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectRequest.doc_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_classify_id;
        break;
      }

      // optional string classify_id = 4;
      case 4: {
        if (tag == 34) {
         parse_classify_id:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_classify_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->classify_id().data(), this->classify_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectRequest.classify_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.CollectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.CollectRequest)
  return false;
#undef DO_
}

void CollectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.CollectRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional string doc_id = 2;
  if (this->doc_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_id().data(), this->doc_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.doc_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->doc_id(), output);
  }

  // optional string doc_type = 3;
  if (this->doc_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_type().data(), this->doc_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.doc_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->doc_type(), output);
  }

  // optional string classify_id = 4;
  if (this->classify_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classify_id().data(), this->classify_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.classify_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->classify_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.CollectRequest)
}

::google::protobuf::uint8* CollectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.CollectRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional string doc_id = 2;
  if (this->doc_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_id().data(), this->doc_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.doc_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->doc_id(), target);
  }

  // optional string doc_type = 3;
  if (this->doc_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->doc_type().data(), this->doc_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.doc_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->doc_type(), target);
  }

  // optional string classify_id = 4;
  if (this->classify_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->classify_id().data(), this->classify_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectRequest.classify_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->classify_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.CollectRequest)
  return target;
}

size_t CollectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.CollectRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional string doc_id = 2;
  if (this->doc_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_id());
  }

  // optional string doc_type = 3;
  if (this->doc_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->doc_type());
  }

  // optional string classify_id = 4;
  if (this->classify_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->classify_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.CollectRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.CollectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.CollectRequest)
    UnsafeMergeFrom(*source);
  }
}

void CollectRequest::MergeFrom(const CollectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.CollectRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CollectRequest::UnsafeMergeFrom(const CollectRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.doc_id().size() > 0) {

    doc_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_id_);
  }
  if (from.doc_type().size() > 0) {

    doc_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.doc_type_);
  }
  if (from.classify_id().size() > 0) {

    classify_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.classify_id_);
  }
}

void CollectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.CollectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectRequest::CopyFrom(const CollectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.CollectRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CollectRequest::IsInitialized() const {

  return true;
}

void CollectRequest::Swap(CollectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectRequest::InternalSwap(CollectRequest* other) {
  user_id_.Swap(&other->user_id_);
  doc_id_.Swap(&other->doc_id_);
  doc_type_.Swap(&other->doc_type_);
  classify_id_.Swap(&other->classify_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectRequest_descriptor_;
  metadata.reflection = CollectRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectRequest

// optional string user_id = 1;
void CollectRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectRequest::user_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.user_id)
}
void CollectRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.user_id)
}
void CollectRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.user_id)
}
::std::string* CollectRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.user_id)
}

// optional string doc_id = 2;
void CollectRequest::clear_doc_id() {
  doc_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectRequest::doc_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.doc_id)
  return doc_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_doc_id(const ::std::string& value) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.doc_id)
}
void CollectRequest::set_doc_id(const char* value) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.doc_id)
}
void CollectRequest::set_doc_id(const char* value, size_t size) {
  
  doc_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.doc_id)
}
::std::string* CollectRequest::mutable_doc_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.doc_id)
  return doc_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectRequest::release_doc_id() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.doc_id)
  
  return doc_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_allocated_doc_id(::std::string* doc_id) {
  if (doc_id != NULL) {
    
  } else {
    
  }
  doc_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.doc_id)
}

// optional string doc_type = 3;
void CollectRequest::clear_doc_type() {
  doc_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectRequest::doc_type() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.doc_type)
  return doc_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_doc_type(const ::std::string& value) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.doc_type)
}
void CollectRequest::set_doc_type(const char* value) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.doc_type)
}
void CollectRequest::set_doc_type(const char* value, size_t size) {
  
  doc_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.doc_type)
}
::std::string* CollectRequest::mutable_doc_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.doc_type)
  return doc_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectRequest::release_doc_type() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.doc_type)
  
  return doc_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_allocated_doc_type(::std::string* doc_type) {
  if (doc_type != NULL) {
    
  } else {
    
  }
  doc_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), doc_type);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.doc_type)
}

// optional string classify_id = 4;
void CollectRequest::clear_classify_id() {
  classify_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectRequest::classify_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectRequest.classify_id)
  return classify_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_classify_id(const ::std::string& value) {
  
  classify_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectRequest.classify_id)
}
void CollectRequest::set_classify_id(const char* value) {
  
  classify_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectRequest.classify_id)
}
void CollectRequest::set_classify_id(const char* value, size_t size) {
  
  classify_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectRequest.classify_id)
}
::std::string* CollectRequest::mutable_classify_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectRequest.classify_id)
  return classify_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectRequest::release_classify_id() {
  // @@protoc_insertion_point(field_release:collect.CollectRequest.classify_id)
  
  return classify_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectRequest::set_allocated_classify_id(::std::string* classify_id) {
  if (classify_id != NULL) {
    
  } else {
    
  }
  classify_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), classify_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectRequest.classify_id)
}

inline const CollectRequest* CollectRequest::internal_default_instance() {
  return &CollectRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectResponse::kCollectSuccessFieldNumber;
const int CollectResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectResponse::CollectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.CollectResponse)
}

void CollectResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

CollectResponse::CollectResponse(const CollectResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.CollectResponse)
}

void CollectResponse::SharedCtor() {
  error_ = NULL;
  collect_success_ = false;
  _cached_size_ = 0;
}

CollectResponse::~CollectResponse() {
  // @@protoc_insertion_point(destructor:collect.CollectResponse)
  SharedDtor();
}

void CollectResponse::SharedDtor() {
  if (this != &CollectResponse_default_instance_.get()) {
    delete error_;
  }
}

void CollectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectResponse_descriptor_;
}

const CollectResponse& CollectResponse::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CollectResponse> CollectResponse_default_instance_;

CollectResponse* CollectResponse::New(::google::protobuf::Arena* arena) const {
  CollectResponse* n = new CollectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.CollectResponse)
  collect_success_ = false;
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}

bool CollectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.CollectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool collect_success = 1;
      case 1: {
        if (tag == 8) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &collect_success_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 2;
      case 2: {
        if (tag == 18) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.CollectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.CollectResponse)
  return false;
#undef DO_
}

void CollectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.CollectResponse)
  // optional bool collect_success = 1;
  if (this->collect_success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->collect_success(), output);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:collect.CollectResponse)
}

::google::protobuf::uint8* CollectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.CollectResponse)
  // optional bool collect_success = 1;
  if (this->collect_success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->collect_success(), target);
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.CollectResponse)
  return target;
}

size_t CollectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.CollectResponse)
  size_t total_size = 0;

  // optional bool collect_success = 1;
  if (this->collect_success() != 0) {
    total_size += 1 + 1;
  }

  // optional .grpcCommon.GrpcError error = 2;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.CollectResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.CollectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.CollectResponse)
    UnsafeMergeFrom(*source);
  }
}

void CollectResponse::MergeFrom(const CollectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.CollectResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CollectResponse::UnsafeMergeFrom(const CollectResponse& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.collect_success() != 0) {
    set_collect_success(from.collect_success());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void CollectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.CollectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectResponse::CopyFrom(const CollectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.CollectResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CollectResponse::IsInitialized() const {

  return true;
}

void CollectResponse::Swap(CollectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectResponse::InternalSwap(CollectResponse* other) {
  std::swap(collect_success_, other->collect_success_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectResponse_descriptor_;
  metadata.reflection = CollectResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectResponse

// optional bool collect_success = 1;
void CollectResponse::clear_collect_success() {
  collect_success_ = false;
}
bool CollectResponse::collect_success() const {
  // @@protoc_insertion_point(field_get:collect.CollectResponse.collect_success)
  return collect_success_;
}
void CollectResponse::set_collect_success(bool value) {
  
  collect_success_ = value;
  // @@protoc_insertion_point(field_set:collect.CollectResponse.collect_success)
}

// optional .grpcCommon.GrpcError error = 2;
bool CollectResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void CollectResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& CollectResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.CollectResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* CollectResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.CollectResponse.error)
  return error_;
}
::grpcCommon::GrpcError* CollectResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.CollectResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void CollectResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.CollectResponse.error)
}

inline const CollectResponse* CollectResponse::internal_default_instance() {
  return &CollectResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectRequest::kUserIdFieldNumber;
const int MyCollectRequest::kPageNumberFieldNumber;
const int MyCollectRequest::kPageSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectRequest::MyCollectRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectRequest)
}

void MyCollectRequest::InitAsDefaultInstance() {
}

MyCollectRequest::MyCollectRequest(const MyCollectRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectRequest)
}

void MyCollectRequest::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&page_number_, 0, reinterpret_cast<char*>(&page_size_) -
    reinterpret_cast<char*>(&page_number_) + sizeof(page_size_));
  _cached_size_ = 0;
}

MyCollectRequest::~MyCollectRequest() {
  // @@protoc_insertion_point(destructor:collect.MyCollectRequest)
  SharedDtor();
}

void MyCollectRequest::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectRequest_descriptor_;
}

const MyCollectRequest& MyCollectRequest::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectRequest> MyCollectRequest_default_instance_;

MyCollectRequest* MyCollectRequest::New(::google::protobuf::Arena* arena) const {
  MyCollectRequest* n = new MyCollectRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectRequest)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MyCollectRequest, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MyCollectRequest*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(page_number_, page_size_);
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool MyCollectRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string user_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), this->user_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectRequest.user_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_page_number;
        break;
      }

      // optional int32 page_number = 2;
      case 2: {
        if (tag == 16) {
         parse_page_number:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_number_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_page_size;
        break;
      }

      // optional int32 page_size = 3;
      case 3: {
        if (tag == 24) {
         parse_page_size:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &page_size_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectRequest)
  return false;
#undef DO_
}

void MyCollectRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectRequest.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->page_number(), output);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->page_size(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectRequest)
}

::google::protobuf::uint8* MyCollectRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectRequest)
  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), this->user_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectRequest.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->page_number(), target);
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->page_size(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectRequest)
  return target;
}

size_t MyCollectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectRequest)
  size_t total_size = 0;

  // optional string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // optional int32 page_number = 2;
  if (this->page_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_number());
  }

  // optional int32 page_size = 3;
  if (this->page_size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->page_size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectRequest)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectRequest::MergeFrom(const MyCollectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectRequest::UnsafeMergeFrom(const MyCollectRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.page_number() != 0) {
    set_page_number(from.page_number());
  }
  if (from.page_size() != 0) {
    set_page_size(from.page_size());
  }
}

void MyCollectRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectRequest::CopyFrom(const MyCollectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectRequest::IsInitialized() const {

  return true;
}

void MyCollectRequest::Swap(MyCollectRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectRequest::InternalSwap(MyCollectRequest* other) {
  user_id_.Swap(&other->user_id_);
  std::swap(page_number_, other->page_number_);
  std::swap(page_size_, other->page_size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectRequest_descriptor_;
  metadata.reflection = MyCollectRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectRequest

// optional string user_id = 1;
void MyCollectRequest::clear_user_id() {
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectRequest::user_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.user_id)
  return user_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectRequest::set_user_id(const ::std::string& value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.user_id)
}
void MyCollectRequest::set_user_id(const char* value) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectRequest.user_id)
}
void MyCollectRequest::set_user_id(const char* value, size_t size) {
  
  user_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectRequest.user_id)
}
::std::string* MyCollectRequest::mutable_user_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectRequest.user_id)
  return user_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectRequest::release_user_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectRequest.user_id)
  
  return user_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectRequest::set_allocated_user_id(::std::string* user_id) {
  if (user_id != NULL) {
    
  } else {
    
  }
  user_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectRequest.user_id)
}

// optional int32 page_number = 2;
void MyCollectRequest::clear_page_number() {
  page_number_ = 0;
}
::google::protobuf::int32 MyCollectRequest::page_number() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.page_number)
  return page_number_;
}
void MyCollectRequest::set_page_number(::google::protobuf::int32 value) {
  
  page_number_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.page_number)
}

// optional int32 page_size = 3;
void MyCollectRequest::clear_page_size() {
  page_size_ = 0;
}
::google::protobuf::int32 MyCollectRequest::page_size() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectRequest.page_size)
  return page_size_;
}
void MyCollectRequest::set_page_size(::google::protobuf::int32 value) {
  
  page_size_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectRequest.page_size)
}

inline const MyCollectRequest* MyCollectRequest::internal_default_instance() {
  return &MyCollectRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectResponse::kResultsFieldNumber;
const int MyCollectResponse::kHasMoreFieldNumber;
const int MyCollectResponse::kTotalCountFieldNumber;
const int MyCollectResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectResponse::MyCollectResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectResponse)
}

void MyCollectResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
}

MyCollectResponse::MyCollectResponse(const MyCollectResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectResponse)
}

void MyCollectResponse::SharedCtor() {
  error_ = NULL;
  ::memset(&has_more_, 0, reinterpret_cast<char*>(&total_count_) -
    reinterpret_cast<char*>(&has_more_) + sizeof(total_count_));
  _cached_size_ = 0;
}

MyCollectResponse::~MyCollectResponse() {
  // @@protoc_insertion_point(destructor:collect.MyCollectResponse)
  SharedDtor();
}

void MyCollectResponse::SharedDtor() {
  if (this != &MyCollectResponse_default_instance_.get()) {
    delete error_;
  }
}

void MyCollectResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectResponse_descriptor_;
}

const MyCollectResponse& MyCollectResponse::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectResponse> MyCollectResponse_default_instance_;

MyCollectResponse* MyCollectResponse::New(::google::protobuf::Arena* arena) const {
  MyCollectResponse* n = new MyCollectResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectResponse)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(MyCollectResponse, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<MyCollectResponse*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&(first), 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(has_more_, total_count_);
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;

#undef ZR_HELPER_
#undef ZR_

  results_.Clear();
}

bool MyCollectResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.Any results = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_results:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_results;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(16)) goto parse_has_more;
        break;
      }

      // optional bool has_more = 2;
      case 2: {
        if (tag == 16) {
         parse_has_more:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has_more_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_total_count;
        break;
      }

      // optional int32 total_count = 3;
      case 3: {
        if (tag == 24) {
         parse_total_count:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_count_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_error;
        break;
      }

      // optional .grpcCommon.GrpcError error = 4;
      case 4: {
        if (tag == 34) {
         parse_error:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectResponse)
  return false;
#undef DO_
}

void MyCollectResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectResponse)
  // repeated .google.protobuf.Any results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->has_more(), output);
  }

  // optional int32 total_count = 3;
  if (this->total_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->total_count(), output);
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->error_, output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectResponse)
}

::google::protobuf::uint8* MyCollectResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectResponse)
  // repeated .google.protobuf.Any results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), false, target);
  }

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->has_more(), target);
  }

  // optional int32 total_count = 3;
  if (this->total_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->total_count(), target);
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->error_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectResponse)
  return target;
}

size_t MyCollectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectResponse)
  size_t total_size = 0;

  // optional bool has_more = 2;
  if (this->has_more() != 0) {
    total_size += 1 + 1;
  }

  // optional int32 total_count = 3;
  if (this->total_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->total_count());
  }

  // optional .grpcCommon.GrpcError error = 4;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // repeated .google.protobuf.Any results = 1;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectResponse)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectResponse::MergeFrom(const MyCollectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectResponse::UnsafeMergeFrom(const MyCollectResponse& from) {
  GOOGLE_DCHECK(&from != this);
  results_.MergeFrom(from.results_);
  if (from.has_more() != 0) {
    set_has_more(from.has_more());
  }
  if (from.total_count() != 0) {
    set_total_count(from.total_count());
  }
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
}

void MyCollectResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectResponse::CopyFrom(const MyCollectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectResponse::IsInitialized() const {

  return true;
}

void MyCollectResponse::Swap(MyCollectResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectResponse::InternalSwap(MyCollectResponse* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(has_more_, other->has_more_);
  std::swap(total_count_, other->total_count_);
  std::swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectResponse_descriptor_;
  metadata.reflection = MyCollectResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectResponse

// repeated .google.protobuf.Any results = 1;
int MyCollectResponse::results_size() const {
  return results_.size();
}
void MyCollectResponse::clear_results() {
  results_.Clear();
}
const ::google::protobuf::Any& MyCollectResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.results)
  return results_.Get(index);
}
::google::protobuf::Any* MyCollectResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:collect.MyCollectResponse.results)
  return results_.Mutable(index);
}
::google::protobuf::Any* MyCollectResponse::add_results() {
  // @@protoc_insertion_point(field_add:collect.MyCollectResponse.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >*
MyCollectResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:collect.MyCollectResponse.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::Any >&
MyCollectResponse::results() const {
  // @@protoc_insertion_point(field_list:collect.MyCollectResponse.results)
  return results_;
}

// optional bool has_more = 2;
void MyCollectResponse::clear_has_more() {
  has_more_ = false;
}
bool MyCollectResponse::has_more() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.has_more)
  return has_more_;
}
void MyCollectResponse::set_has_more(bool value) {
  
  has_more_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectResponse.has_more)
}

// optional int32 total_count = 3;
void MyCollectResponse::clear_total_count() {
  total_count_ = 0;
}
::google::protobuf::int32 MyCollectResponse::total_count() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.total_count)
  return total_count_;
}
void MyCollectResponse::set_total_count(::google::protobuf::int32 value) {
  
  total_count_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectResponse.total_count)
}

// optional .grpcCommon.GrpcError error = 4;
bool MyCollectResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void MyCollectResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& MyCollectResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* MyCollectResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectResponse.error)
  return error_;
}
::grpcCommon::GrpcError* MyCollectResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.MyCollectResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void MyCollectResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectResponse.error)
}

inline const MyCollectResponse* MyCollectResponse::internal_default_instance() {
  return &MyCollectResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CollectBody::kDocuIdFieldNumber;
const int CollectBody::kDocuTitleFieldNumber;
const int CollectBody::kAddTimeFieldNumber;
const int CollectBody::kStarLevelFieldNumber;
const int CollectBody::kDocuTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CollectBody::CollectBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.CollectBody)
}

void CollectBody::InitAsDefaultInstance() {
}

CollectBody::CollectBody(const CollectBody& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.CollectBody)
}

void CollectBody::SharedCtor() {
  docu_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docu_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docu_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  star_level_ = 0;
  _cached_size_ = 0;
}

CollectBody::~CollectBody() {
  // @@protoc_insertion_point(destructor:collect.CollectBody)
  SharedDtor();
}

void CollectBody::SharedDtor() {
  docu_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docu_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docu_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CollectBody::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CollectBody::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return CollectBody_descriptor_;
}

const CollectBody& CollectBody::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<CollectBody> CollectBody_default_instance_;

CollectBody* CollectBody::New(::google::protobuf::Arena* arena) const {
  CollectBody* n = new CollectBody;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CollectBody::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.CollectBody)
  docu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  docu_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  star_level_ = 0;
  docu_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool CollectBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.CollectBody)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string docu_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docu_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docu_id().data(), this->docu_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectBody.docu_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_docu_title;
        break;
      }

      // optional string docu_title = 2;
      case 2: {
        if (tag == 18) {
         parse_docu_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docu_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docu_title().data(), this->docu_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectBody.docu_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_add_time;
        break;
      }

      // optional string add_time = 3;
      case 3: {
        if (tag == 26) {
         parse_add_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_add_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->add_time().data(), this->add_time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectBody.add_time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_star_level;
        break;
      }

      // optional int32 star_level = 4;
      case 4: {
        if (tag == 32) {
         parse_star_level:

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &star_level_)));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_docu_type;
        break;
      }

      // optional string docu_type = 5;
      case 5: {
        if (tag == 42) {
         parse_docu_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_docu_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->docu_type().data(), this->docu_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.CollectBody.docu_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.CollectBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.CollectBody)
  return false;
#undef DO_
}

void CollectBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.CollectBody)
  // optional string docu_id = 1;
  if (this->docu_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_id().data(), this->docu_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->docu_id(), output);
  }

  // optional string docu_title = 2;
  if (this->docu_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_title().data(), this->docu_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->docu_title(), output);
  }

  // optional string add_time = 3;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.add_time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->add_time(), output);
  }

  // optional int32 star_level = 4;
  if (this->star_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->star_level(), output);
  }

  // optional string docu_type = 5;
  if (this->docu_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_type().data(), this->docu_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->docu_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.CollectBody)
}

::google::protobuf::uint8* CollectBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.CollectBody)
  // optional string docu_id = 1;
  if (this->docu_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_id().data(), this->docu_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->docu_id(), target);
  }

  // optional string docu_title = 2;
  if (this->docu_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_title().data(), this->docu_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->docu_title(), target);
  }

  // optional string add_time = 3;
  if (this->add_time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->add_time().data(), this->add_time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.add_time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->add_time(), target);
  }

  // optional int32 star_level = 4;
  if (this->star_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->star_level(), target);
  }

  // optional string docu_type = 5;
  if (this->docu_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->docu_type().data(), this->docu_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.CollectBody.docu_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->docu_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.CollectBody)
  return target;
}

size_t CollectBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.CollectBody)
  size_t total_size = 0;

  // optional string docu_id = 1;
  if (this->docu_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docu_id());
  }

  // optional string docu_title = 2;
  if (this->docu_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docu_title());
  }

  // optional string add_time = 3;
  if (this->add_time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->add_time());
  }

  // optional int32 star_level = 4;
  if (this->star_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->star_level());
  }

  // optional string docu_type = 5;
  if (this->docu_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->docu_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CollectBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.CollectBody)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const CollectBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CollectBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.CollectBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.CollectBody)
    UnsafeMergeFrom(*source);
  }
}

void CollectBody::MergeFrom(const CollectBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.CollectBody)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void CollectBody::UnsafeMergeFrom(const CollectBody& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.docu_id().size() > 0) {

    docu_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docu_id_);
  }
  if (from.docu_title().size() > 0) {

    docu_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docu_title_);
  }
  if (from.add_time().size() > 0) {

    add_time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.add_time_);
  }
  if (from.star_level() != 0) {
    set_star_level(from.star_level());
  }
  if (from.docu_type().size() > 0) {

    docu_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.docu_type_);
  }
}

void CollectBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.CollectBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CollectBody::CopyFrom(const CollectBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.CollectBody)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool CollectBody::IsInitialized() const {

  return true;
}

void CollectBody::Swap(CollectBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CollectBody::InternalSwap(CollectBody* other) {
  docu_id_.Swap(&other->docu_id_);
  docu_title_.Swap(&other->docu_title_);
  add_time_.Swap(&other->add_time_);
  std::swap(star_level_, other->star_level_);
  docu_type_.Swap(&other->docu_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CollectBody::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = CollectBody_descriptor_;
  metadata.reflection = CollectBody_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CollectBody

// optional string docu_id = 1;
void CollectBody::clear_docu_id() {
  docu_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectBody::docu_id() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_id)
  return docu_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_docu_id(const ::std::string& value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_id)
}
void CollectBody::set_docu_id(const char* value) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_id)
}
void CollectBody::set_docu_id(const char* value, size_t size) {
  
  docu_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_id)
}
::std::string* CollectBody::mutable_docu_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_id)
  return docu_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectBody::release_docu_id() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_id)
  
  return docu_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_allocated_docu_id(::std::string* docu_id) {
  if (docu_id != NULL) {
    
  } else {
    
  }
  docu_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_id);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_id)
}

// optional string docu_title = 2;
void CollectBody::clear_docu_title() {
  docu_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectBody::docu_title() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_title)
  return docu_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_docu_title(const ::std::string& value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_title)
}
void CollectBody::set_docu_title(const char* value) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_title)
}
void CollectBody::set_docu_title(const char* value, size_t size) {
  
  docu_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_title)
}
::std::string* CollectBody::mutable_docu_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_title)
  return docu_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectBody::release_docu_title() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_title)
  
  return docu_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_allocated_docu_title(::std::string* docu_title) {
  if (docu_title != NULL) {
    
  } else {
    
  }
  docu_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_title);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_title)
}

// optional string add_time = 3;
void CollectBody::clear_add_time() {
  add_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectBody::add_time() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.add_time)
  return add_time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_add_time(const ::std::string& value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.add_time)
}
void CollectBody::set_add_time(const char* value) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.add_time)
}
void CollectBody::set_add_time(const char* value, size_t size) {
  
  add_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.add_time)
}
::std::string* CollectBody::mutable_add_time() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.add_time)
  return add_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectBody::release_add_time() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.add_time)
  
  return add_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_allocated_add_time(::std::string* add_time) {
  if (add_time != NULL) {
    
  } else {
    
  }
  add_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), add_time);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.add_time)
}

// optional int32 star_level = 4;
void CollectBody::clear_star_level() {
  star_level_ = 0;
}
::google::protobuf::int32 CollectBody::star_level() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.star_level)
  return star_level_;
}
void CollectBody::set_star_level(::google::protobuf::int32 value) {
  
  star_level_ = value;
  // @@protoc_insertion_point(field_set:collect.CollectBody.star_level)
}

// optional string docu_type = 5;
void CollectBody::clear_docu_type() {
  docu_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& CollectBody::docu_type() const {
  // @@protoc_insertion_point(field_get:collect.CollectBody.docu_type)
  return docu_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_docu_type(const ::std::string& value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.CollectBody.docu_type)
}
void CollectBody::set_docu_type(const char* value) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.CollectBody.docu_type)
}
void CollectBody::set_docu_type(const char* value, size_t size) {
  
  docu_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.CollectBody.docu_type)
}
::std::string* CollectBody::mutable_docu_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.CollectBody.docu_type)
  return docu_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CollectBody::release_docu_type() {
  // @@protoc_insertion_point(field_release:collect.CollectBody.docu_type)
  
  return docu_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CollectBody::set_allocated_docu_type(::std::string* docu_type) {
  if (docu_type != NULL) {
    
  } else {
    
  }
  docu_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), docu_type);
  // @@protoc_insertion_point(field_set_allocated:collect.CollectBody.docu_type)
}

inline const CollectBody* CollectBody::internal_default_instance() {
  return &CollectBody_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectDetailRequest::kArticalIdFieldNumber;
const int MyCollectDetailRequest::kArticalTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectDetailRequest::MyCollectDetailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectDetailRequest)
}

void MyCollectDetailRequest::InitAsDefaultInstance() {
}

MyCollectDetailRequest::MyCollectDetailRequest(const MyCollectDetailRequest& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectDetailRequest)
}

void MyCollectDetailRequest::SharedCtor() {
  artical_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyCollectDetailRequest::~MyCollectDetailRequest() {
  // @@protoc_insertion_point(destructor:collect.MyCollectDetailRequest)
  SharedDtor();
}

void MyCollectDetailRequest::SharedDtor() {
  artical_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectDetailRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectDetailRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectDetailRequest_descriptor_;
}

const MyCollectDetailRequest& MyCollectDetailRequest::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectDetailRequest> MyCollectDetailRequest_default_instance_;

MyCollectDetailRequest* MyCollectDetailRequest::New(::google::protobuf::Arena* arena) const {
  MyCollectDetailRequest* n = new MyCollectDetailRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectDetailRequest)
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyCollectDetailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectDetailRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string artical_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artical_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->artical_id().data(), this->artical_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailRequest.artical_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_artical_type;
        break;
      }

      // optional string artical_type = 2;
      case 2: {
        if (tag == 18) {
         parse_artical_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artical_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->artical_type().data(), this->artical_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailRequest.artical_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectDetailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectDetailRequest)
  return false;
#undef DO_
}

void MyCollectDetailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectDetailRequest)
  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_id().data(), this->artical_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailRequest.artical_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->artical_id(), output);
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_type().data(), this->artical_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailRequest.artical_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->artical_type(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectDetailRequest)
}

::google::protobuf::uint8* MyCollectDetailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectDetailRequest)
  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_id().data(), this->artical_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailRequest.artical_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->artical_id(), target);
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_type().data(), this->artical_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailRequest.artical_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->artical_type(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectDetailRequest)
  return target;
}

size_t MyCollectDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectDetailRequest)
  size_t total_size = 0;

  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->artical_id());
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->artical_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectDetailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectDetailRequest)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectDetailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectDetailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectDetailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectDetailRequest)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectDetailRequest::MergeFrom(const MyCollectDetailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectDetailRequest)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectDetailRequest::UnsafeMergeFrom(const MyCollectDetailRequest& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.artical_id().size() > 0) {

    artical_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artical_id_);
  }
  if (from.artical_type().size() > 0) {

    artical_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artical_type_);
  }
}

void MyCollectDetailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectDetailRequest::CopyFrom(const MyCollectDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectDetailRequest)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectDetailRequest::IsInitialized() const {

  return true;
}

void MyCollectDetailRequest::Swap(MyCollectDetailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectDetailRequest::InternalSwap(MyCollectDetailRequest* other) {
  artical_id_.Swap(&other->artical_id_);
  artical_type_.Swap(&other->artical_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectDetailRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectDetailRequest_descriptor_;
  metadata.reflection = MyCollectDetailRequest_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectDetailRequest

// optional string artical_id = 1;
void MyCollectDetailRequest::clear_artical_id() {
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailRequest::artical_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailRequest.artical_id)
  return artical_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailRequest::set_artical_id(const ::std::string& value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailRequest.artical_id)
}
void MyCollectDetailRequest::set_artical_id(const char* value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailRequest.artical_id)
}
void MyCollectDetailRequest::set_artical_id(const char* value, size_t size) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailRequest.artical_id)
}
::std::string* MyCollectDetailRequest::mutable_artical_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailRequest.artical_id)
  return artical_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailRequest::release_artical_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailRequest.artical_id)
  
  return artical_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailRequest::set_allocated_artical_id(::std::string* artical_id) {
  if (artical_id != NULL) {
    
  } else {
    
  }
  artical_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailRequest.artical_id)
}

// optional string artical_type = 2;
void MyCollectDetailRequest::clear_artical_type() {
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailRequest::artical_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailRequest.artical_type)
  return artical_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailRequest::set_artical_type(const ::std::string& value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailRequest.artical_type)
}
void MyCollectDetailRequest::set_artical_type(const char* value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailRequest.artical_type)
}
void MyCollectDetailRequest::set_artical_type(const char* value, size_t size) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailRequest.artical_type)
}
::std::string* MyCollectDetailRequest::mutable_artical_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailRequest.artical_type)
  return artical_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailRequest::release_artical_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailRequest.artical_type)
  
  return artical_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailRequest::set_allocated_artical_type(::std::string* artical_type) {
  if (artical_type != NULL) {
    
  } else {
    
  }
  artical_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailRequest.artical_type)
}

inline const MyCollectDetailRequest* MyCollectDetailRequest::internal_default_instance() {
  return &MyCollectDetailRequest_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectDetailResponse::kErrorFieldNumber;
const int MyCollectDetailResponse::kTitleFieldNumber;
const int MyCollectDetailResponse::kSummaryFieldNumber;
const int MyCollectDetailResponse::kKeywordsFieldNumber;
const int MyCollectDetailResponse::kAuthorsNameFieldNumber;
const int MyCollectDetailResponse::kCiteNumFieldNumber;
const int MyCollectDetailResponse::kDownloadNumFieldNumber;
const int MyCollectDetailResponse::kFulltextReadingNumFieldNumber;
const int MyCollectDetailResponse::kThirdpartyLinksNumFieldNumber;
const int MyCollectDetailResponse::kCollectDetailFieldNumber;
const int MyCollectDetailResponse::kDetailTypeFieldNumber;
const int MyCollectDetailResponse::kSimilarPapersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectDetailResponse::MyCollectDetailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectDetailResponse)
}

void MyCollectDetailResponse::InitAsDefaultInstance() {
  error_ = const_cast< ::grpcCommon::GrpcError*>(
      ::grpcCommon::GrpcError::internal_default_instance());
  collect_detail_ = const_cast< ::google::protobuf::Any*>(
      ::google::protobuf::Any::internal_default_instance());
}

MyCollectDetailResponse::MyCollectDetailResponse(const MyCollectDetailResponse& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectDetailResponse)
}

void MyCollectDetailResponse::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  summary_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authors_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cite_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulltext_reading_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thirdparty_links_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
  collect_detail_ = NULL;
  detail_type_ = 0;
  _cached_size_ = 0;
}

MyCollectDetailResponse::~MyCollectDetailResponse() {
  // @@protoc_insertion_point(destructor:collect.MyCollectDetailResponse)
  SharedDtor();
}

void MyCollectDetailResponse::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  summary_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authors_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cite_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulltext_reading_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thirdparty_links_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != &MyCollectDetailResponse_default_instance_.get()) {
    delete error_;
    delete collect_detail_;
  }
}

void MyCollectDetailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectDetailResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectDetailResponse_descriptor_;
}

const MyCollectDetailResponse& MyCollectDetailResponse::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectDetailResponse> MyCollectDetailResponse_default_instance_;

MyCollectDetailResponse* MyCollectDetailResponse::New(::google::protobuf::Arena* arena) const {
  MyCollectDetailResponse* n = new MyCollectDetailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectDetailResponse)
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  authors_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cite_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fulltext_reading_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thirdparty_links_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && collect_detail_ != NULL) delete collect_detail_;
  collect_detail_ = NULL;
  detail_type_ = 0;
  similar_papers_.Clear();
}

bool MyCollectDetailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectDetailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .grpcCommon.GrpcError error = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_title;
        break;
      }

      // optional string title = 2;
      case 2: {
        if (tag == 18) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_summary;
        break;
      }

      // optional string summary = 3;
      case 3: {
        if (tag == 26) {
         parse_summary:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_summary()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->summary().data(), this->summary().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.summary"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_keywords;
        break;
      }

      // optional string keywords = 4;
      case 4: {
        if (tag == 34) {
         parse_keywords:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_keywords()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->keywords().data(), this->keywords().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.keywords"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_authors_name;
        break;
      }

      // optional string authors_name = 5;
      case 5: {
        if (tag == 42) {
         parse_authors_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authors_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authors_name().data(), this->authors_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.authors_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_cite_num;
        break;
      }

      // optional string cite_num = 6;
      case 6: {
        if (tag == 50) {
         parse_cite_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cite_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cite_num().data(), this->cite_num().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.cite_num"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_download_num;
        break;
      }

      // optional string download_num = 7;
      case 7: {
        if (tag == 58) {
         parse_download_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->download_num().data(), this->download_num().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.download_num"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_fulltext_reading_num;
        break;
      }

      // optional string fulltext_reading_num = 8;
      case 8: {
        if (tag == 66) {
         parse_fulltext_reading_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fulltext_reading_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fulltext_reading_num().data(), this->fulltext_reading_num().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.fulltext_reading_num"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_thirdparty_links_num;
        break;
      }

      // optional string thirdparty_links_num = 9;
      case 9: {
        if (tag == 74) {
         parse_thirdparty_links_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thirdparty_links_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thirdparty_links_num().data(), this->thirdparty_links_num().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDetailResponse.thirdparty_links_num"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_collect_detail;
        break;
      }

      // optional .google.protobuf.Any collect_detail = 10;
      case 10: {
        if (tag == 82) {
         parse_collect_detail:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_collect_detail()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_detail_type;
        break;
      }

      // optional .collect.MyCollectDetailType detail_type = 11;
      case 11: {
        if (tag == 88) {
         parse_detail_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_detail_type(static_cast< ::collect::MyCollectDetailType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_similar_papers;
        break;
      }

      // repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
      case 12: {
        if (tag == 98) {
         parse_similar_papers:
          DO_(input->IncrementRecursionDepth());
         parse_loop_similar_papers:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_similar_papers()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_loop_similar_papers;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectDetailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectDetailResponse)
  return false;
#undef DO_
}

void MyCollectDetailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectDetailResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->error_, output);
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // optional string summary = 3;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.summary");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->summary(), output);
  }

  // optional string keywords = 4;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), this->keywords().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.keywords");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->keywords(), output);
  }

  // optional string authors_name = 5;
  if (this->authors_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors_name().data(), this->authors_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.authors_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->authors_name(), output);
  }

  // optional string cite_num = 6;
  if (this->cite_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cite_num().data(), this->cite_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.cite_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cite_num(), output);
  }

  // optional string download_num = 7;
  if (this->download_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->download_num().data(), this->download_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.download_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->download_num(), output);
  }

  // optional string fulltext_reading_num = 8;
  if (this->fulltext_reading_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulltext_reading_num().data(), this->fulltext_reading_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.fulltext_reading_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->fulltext_reading_num(), output);
  }

  // optional string thirdparty_links_num = 9;
  if (this->thirdparty_links_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thirdparty_links_num().data(), this->thirdparty_links_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.thirdparty_links_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->thirdparty_links_num(), output);
  }

  // optional .google.protobuf.Any collect_detail = 10;
  if (this->has_collect_detail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->collect_detail_, output);
  }

  // optional .collect.MyCollectDetailType detail_type = 11;
  if (this->detail_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->detail_type(), output);
  }

  // repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
  for (unsigned int i = 0, n = this->similar_papers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->similar_papers(i), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectDetailResponse)
}

::google::protobuf::uint8* MyCollectDetailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectDetailResponse)
  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->error_, false, target);
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // optional string summary = 3;
  if (this->summary().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->summary().data(), this->summary().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.summary");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->summary(), target);
  }

  // optional string keywords = 4;
  if (this->keywords().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->keywords().data(), this->keywords().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.keywords");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->keywords(), target);
  }

  // optional string authors_name = 5;
  if (this->authors_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors_name().data(), this->authors_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.authors_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->authors_name(), target);
  }

  // optional string cite_num = 6;
  if (this->cite_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cite_num().data(), this->cite_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.cite_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cite_num(), target);
  }

  // optional string download_num = 7;
  if (this->download_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->download_num().data(), this->download_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.download_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->download_num(), target);
  }

  // optional string fulltext_reading_num = 8;
  if (this->fulltext_reading_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fulltext_reading_num().data(), this->fulltext_reading_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.fulltext_reading_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->fulltext_reading_num(), target);
  }

  // optional string thirdparty_links_num = 9;
  if (this->thirdparty_links_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thirdparty_links_num().data(), this->thirdparty_links_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDetailResponse.thirdparty_links_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->thirdparty_links_num(), target);
  }

  // optional .google.protobuf.Any collect_detail = 10;
  if (this->has_collect_detail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->collect_detail_, false, target);
  }

  // optional .collect.MyCollectDetailType detail_type = 11;
  if (this->detail_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->detail_type(), target);
  }

  // repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
  for (unsigned int i = 0, n = this->similar_papers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, this->similar_papers(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectDetailResponse)
  return target;
}

size_t MyCollectDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectDetailResponse)
  size_t total_size = 0;

  // optional .grpcCommon.GrpcError error = 1;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->error_);
  }

  // optional string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // optional string summary = 3;
  if (this->summary().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->summary());
  }

  // optional string keywords = 4;
  if (this->keywords().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->keywords());
  }

  // optional string authors_name = 5;
  if (this->authors_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authors_name());
  }

  // optional string cite_num = 6;
  if (this->cite_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cite_num());
  }

  // optional string download_num = 7;
  if (this->download_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->download_num());
  }

  // optional string fulltext_reading_num = 8;
  if (this->fulltext_reading_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fulltext_reading_num());
  }

  // optional string thirdparty_links_num = 9;
  if (this->thirdparty_links_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thirdparty_links_num());
  }

  // optional .google.protobuf.Any collect_detail = 10;
  if (this->has_collect_detail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->collect_detail_);
  }

  // optional .collect.MyCollectDetailType detail_type = 11;
  if (this->detail_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->detail_type());
  }

  // repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
  {
    unsigned int count = this->similar_papers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->similar_papers(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectDetailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectDetailResponse)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectDetailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectDetailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectDetailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectDetailResponse)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectDetailResponse::MergeFrom(const MyCollectDetailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectDetailResponse)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectDetailResponse::UnsafeMergeFrom(const MyCollectDetailResponse& from) {
  GOOGLE_DCHECK(&from != this);
  similar_papers_.MergeFrom(from.similar_papers_);
  if (from.has_error()) {
    mutable_error()->::grpcCommon::GrpcError::MergeFrom(from.error());
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.summary().size() > 0) {

    summary_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.summary_);
  }
  if (from.keywords().size() > 0) {

    keywords_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.keywords_);
  }
  if (from.authors_name().size() > 0) {

    authors_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authors_name_);
  }
  if (from.cite_num().size() > 0) {

    cite_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cite_num_);
  }
  if (from.download_num().size() > 0) {

    download_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_num_);
  }
  if (from.fulltext_reading_num().size() > 0) {

    fulltext_reading_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fulltext_reading_num_);
  }
  if (from.thirdparty_links_num().size() > 0) {

    thirdparty_links_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thirdparty_links_num_);
  }
  if (from.has_collect_detail()) {
    mutable_collect_detail()->::google::protobuf::Any::MergeFrom(from.collect_detail());
  }
  if (from.detail_type() != 0) {
    set_detail_type(from.detail_type());
  }
}

void MyCollectDetailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectDetailResponse::CopyFrom(const MyCollectDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectDetailResponse)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectDetailResponse::IsInitialized() const {

  return true;
}

void MyCollectDetailResponse::Swap(MyCollectDetailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectDetailResponse::InternalSwap(MyCollectDetailResponse* other) {
  std::swap(error_, other->error_);
  title_.Swap(&other->title_);
  summary_.Swap(&other->summary_);
  keywords_.Swap(&other->keywords_);
  authors_name_.Swap(&other->authors_name_);
  cite_num_.Swap(&other->cite_num_);
  download_num_.Swap(&other->download_num_);
  fulltext_reading_num_.Swap(&other->fulltext_reading_num_);
  thirdparty_links_num_.Swap(&other->thirdparty_links_num_);
  std::swap(collect_detail_, other->collect_detail_);
  std::swap(detail_type_, other->detail_type_);
  similar_papers_.UnsafeArenaSwap(&other->similar_papers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectDetailResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectDetailResponse_descriptor_;
  metadata.reflection = MyCollectDetailResponse_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectDetailResponse

// optional .grpcCommon.GrpcError error = 1;
bool MyCollectDetailResponse::has_error() const {
  return this != internal_default_instance() && error_ != NULL;
}
void MyCollectDetailResponse::clear_error() {
  if (GetArenaNoVirtual() == NULL && error_ != NULL) delete error_;
  error_ = NULL;
}
const ::grpcCommon::GrpcError& MyCollectDetailResponse::error() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.error)
  return error_ != NULL ? *error_
                         : *::grpcCommon::GrpcError::internal_default_instance();
}
::grpcCommon::GrpcError* MyCollectDetailResponse::mutable_error() {
  
  if (error_ == NULL) {
    error_ = new ::grpcCommon::GrpcError;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.error)
  return error_;
}
::grpcCommon::GrpcError* MyCollectDetailResponse::release_error() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.error)
  
  ::grpcCommon::GrpcError* temp = error_;
  error_ = NULL;
  return temp;
}
void MyCollectDetailResponse::set_allocated_error(::grpcCommon::GrpcError* error) {
  delete error_;
  error_ = error;
  if (error) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.error)
}

// optional string title = 2;
void MyCollectDetailResponse::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.title)
}
void MyCollectDetailResponse::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.title)
}
void MyCollectDetailResponse::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.title)
}
::std::string* MyCollectDetailResponse::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.title)
}

// optional string summary = 3;
void MyCollectDetailResponse::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::summary() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.summary)
  return summary_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_summary(const ::std::string& value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.summary)
}
void MyCollectDetailResponse::set_summary(const char* value) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.summary)
}
void MyCollectDetailResponse::set_summary(const char* value, size_t size) {
  
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.summary)
}
::std::string* MyCollectDetailResponse::mutable_summary() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_summary() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.summary)
  
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    
  } else {
    
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.summary)
}

// optional string keywords = 4;
void MyCollectDetailResponse::clear_keywords() {
  keywords_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::keywords() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.keywords)
  return keywords_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_keywords(const ::std::string& value) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.keywords)
}
void MyCollectDetailResponse::set_keywords(const char* value) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.keywords)
}
void MyCollectDetailResponse::set_keywords(const char* value, size_t size) {
  
  keywords_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.keywords)
}
::std::string* MyCollectDetailResponse::mutable_keywords() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.keywords)
  return keywords_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_keywords() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.keywords)
  
  return keywords_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_keywords(::std::string* keywords) {
  if (keywords != NULL) {
    
  } else {
    
  }
  keywords_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), keywords);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.keywords)
}

// optional string authors_name = 5;
void MyCollectDetailResponse::clear_authors_name() {
  authors_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::authors_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.authors_name)
  return authors_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_authors_name(const ::std::string& value) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.authors_name)
}
void MyCollectDetailResponse::set_authors_name(const char* value) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.authors_name)
}
void MyCollectDetailResponse::set_authors_name(const char* value, size_t size) {
  
  authors_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.authors_name)
}
::std::string* MyCollectDetailResponse::mutable_authors_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.authors_name)
  return authors_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_authors_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.authors_name)
  
  return authors_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_authors_name(::std::string* authors_name) {
  if (authors_name != NULL) {
    
  } else {
    
  }
  authors_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authors_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.authors_name)
}

// optional string cite_num = 6;
void MyCollectDetailResponse::clear_cite_num() {
  cite_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::cite_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.cite_num)
  return cite_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_cite_num(const ::std::string& value) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.cite_num)
}
void MyCollectDetailResponse::set_cite_num(const char* value) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.cite_num)
}
void MyCollectDetailResponse::set_cite_num(const char* value, size_t size) {
  
  cite_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.cite_num)
}
::std::string* MyCollectDetailResponse::mutable_cite_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.cite_num)
  return cite_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_cite_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.cite_num)
  
  return cite_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_cite_num(::std::string* cite_num) {
  if (cite_num != NULL) {
    
  } else {
    
  }
  cite_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cite_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.cite_num)
}

// optional string download_num = 7;
void MyCollectDetailResponse::clear_download_num() {
  download_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::download_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.download_num)
  return download_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_download_num(const ::std::string& value) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.download_num)
}
void MyCollectDetailResponse::set_download_num(const char* value) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.download_num)
}
void MyCollectDetailResponse::set_download_num(const char* value, size_t size) {
  
  download_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.download_num)
}
::std::string* MyCollectDetailResponse::mutable_download_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.download_num)
  return download_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_download_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.download_num)
  
  return download_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_download_num(::std::string* download_num) {
  if (download_num != NULL) {
    
  } else {
    
  }
  download_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), download_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.download_num)
}

// optional string fulltext_reading_num = 8;
void MyCollectDetailResponse::clear_fulltext_reading_num() {
  fulltext_reading_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::fulltext_reading_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.fulltext_reading_num)
  return fulltext_reading_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_fulltext_reading_num(const ::std::string& value) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.fulltext_reading_num)
}
void MyCollectDetailResponse::set_fulltext_reading_num(const char* value) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.fulltext_reading_num)
}
void MyCollectDetailResponse::set_fulltext_reading_num(const char* value, size_t size) {
  
  fulltext_reading_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.fulltext_reading_num)
}
::std::string* MyCollectDetailResponse::mutable_fulltext_reading_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.fulltext_reading_num)
  return fulltext_reading_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_fulltext_reading_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.fulltext_reading_num)
  
  return fulltext_reading_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_fulltext_reading_num(::std::string* fulltext_reading_num) {
  if (fulltext_reading_num != NULL) {
    
  } else {
    
  }
  fulltext_reading_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fulltext_reading_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.fulltext_reading_num)
}

// optional string thirdparty_links_num = 9;
void MyCollectDetailResponse::clear_thirdparty_links_num() {
  thirdparty_links_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDetailResponse::thirdparty_links_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.thirdparty_links_num)
  return thirdparty_links_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_thirdparty_links_num(const ::std::string& value) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.thirdparty_links_num)
}
void MyCollectDetailResponse::set_thirdparty_links_num(const char* value) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDetailResponse.thirdparty_links_num)
}
void MyCollectDetailResponse::set_thirdparty_links_num(const char* value, size_t size) {
  
  thirdparty_links_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDetailResponse.thirdparty_links_num)
}
::std::string* MyCollectDetailResponse::mutable_thirdparty_links_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.thirdparty_links_num)
  return thirdparty_links_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDetailResponse::release_thirdparty_links_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.thirdparty_links_num)
  
  return thirdparty_links_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDetailResponse::set_allocated_thirdparty_links_num(::std::string* thirdparty_links_num) {
  if (thirdparty_links_num != NULL) {
    
  } else {
    
  }
  thirdparty_links_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thirdparty_links_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.thirdparty_links_num)
}

// optional .google.protobuf.Any collect_detail = 10;
bool MyCollectDetailResponse::has_collect_detail() const {
  return this != internal_default_instance() && collect_detail_ != NULL;
}
void MyCollectDetailResponse::clear_collect_detail() {
  if (GetArenaNoVirtual() == NULL && collect_detail_ != NULL) delete collect_detail_;
  collect_detail_ = NULL;
}
const ::google::protobuf::Any& MyCollectDetailResponse::collect_detail() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.collect_detail)
  return collect_detail_ != NULL ? *collect_detail_
                         : *::google::protobuf::Any::internal_default_instance();
}
::google::protobuf::Any* MyCollectDetailResponse::mutable_collect_detail() {
  
  if (collect_detail_ == NULL) {
    collect_detail_ = new ::google::protobuf::Any;
  }
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.collect_detail)
  return collect_detail_;
}
::google::protobuf::Any* MyCollectDetailResponse::release_collect_detail() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDetailResponse.collect_detail)
  
  ::google::protobuf::Any* temp = collect_detail_;
  collect_detail_ = NULL;
  return temp;
}
void MyCollectDetailResponse::set_allocated_collect_detail(::google::protobuf::Any* collect_detail) {
  delete collect_detail_;
  collect_detail_ = collect_detail;
  if (collect_detail) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDetailResponse.collect_detail)
}

// optional .collect.MyCollectDetailType detail_type = 11;
void MyCollectDetailResponse::clear_detail_type() {
  detail_type_ = 0;
}
::collect::MyCollectDetailType MyCollectDetailResponse::detail_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.detail_type)
  return static_cast< ::collect::MyCollectDetailType >(detail_type_);
}
void MyCollectDetailResponse::set_detail_type(::collect::MyCollectDetailType value) {
  
  detail_type_ = value;
  // @@protoc_insertion_point(field_set:collect.MyCollectDetailResponse.detail_type)
}

// repeated .collect.MyCollectSimilarPaperMessage similar_papers = 12;
int MyCollectDetailResponse::similar_papers_size() const {
  return similar_papers_.size();
}
void MyCollectDetailResponse::clear_similar_papers() {
  similar_papers_.Clear();
}
const ::collect::MyCollectSimilarPaperMessage& MyCollectDetailResponse::similar_papers(int index) const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Get(index);
}
::collect::MyCollectSimilarPaperMessage* MyCollectDetailResponse::mutable_similar_papers(int index) {
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Mutable(index);
}
::collect::MyCollectSimilarPaperMessage* MyCollectDetailResponse::add_similar_papers() {
  // @@protoc_insertion_point(field_add:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_.Add();
}
::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >*
MyCollectDetailResponse::mutable_similar_papers() {
  // @@protoc_insertion_point(field_mutable_list:collect.MyCollectDetailResponse.similar_papers)
  return &similar_papers_;
}
const ::google::protobuf::RepeatedPtrField< ::collect::MyCollectSimilarPaperMessage >&
MyCollectDetailResponse::similar_papers() const {
  // @@protoc_insertion_point(field_list:collect.MyCollectDetailResponse.similar_papers)
  return similar_papers_;
}

inline const MyCollectDetailResponse* MyCollectDetailResponse::internal_default_instance() {
  return &MyCollectDetailResponse_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectConfMessage::kConfNameFieldNumber;
const int MyCollectConfMessage::kConfTypeFieldNumber;
const int MyCollectConfMessage::kConfYearFieldNumber;
const int MyCollectConfMessage::kPublishPlaceFieldNumber;
const int MyCollectConfMessage::kHostunitNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectConfMessage::MyCollectConfMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectConfMessage)
}

void MyCollectConfMessage::InitAsDefaultInstance() {
}

MyCollectConfMessage::MyCollectConfMessage(const MyCollectConfMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectConfMessage)
}

void MyCollectConfMessage::SharedCtor() {
  conf_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_place_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostunit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyCollectConfMessage::~MyCollectConfMessage() {
  // @@protoc_insertion_point(destructor:collect.MyCollectConfMessage)
  SharedDtor();
}

void MyCollectConfMessage::SharedDtor() {
  conf_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_place_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostunit_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectConfMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectConfMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectConfMessage_descriptor_;
}

const MyCollectConfMessage& MyCollectConfMessage::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectConfMessage> MyCollectConfMessage_default_instance_;

MyCollectConfMessage* MyCollectConfMessage::New(::google::protobuf::Arena* arena) const {
  MyCollectConfMessage* n = new MyCollectConfMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectConfMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectConfMessage)
  conf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  conf_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_place_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hostunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyCollectConfMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectConfMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string conf_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conf_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conf_name().data(), this->conf_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectConfMessage.conf_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_conf_type;
        break;
      }

      // optional string conf_type = 2;
      case 2: {
        if (tag == 18) {
         parse_conf_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conf_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conf_type().data(), this->conf_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectConfMessage.conf_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_conf_year;
        break;
      }

      // optional string conf_year = 3;
      case 3: {
        if (tag == 26) {
         parse_conf_year:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_conf_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->conf_year().data(), this->conf_year().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectConfMessage.conf_year"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_publish_place;
        break;
      }

      // optional string publish_place = 4;
      case 4: {
        if (tag == 34) {
         parse_publish_place:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_place()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_place().data(), this->publish_place().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectConfMessage.publish_place"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_hostunit_name;
        break;
      }

      // optional string hostunit_name = 5;
      case 5: {
        if (tag == 42) {
         parse_hostunit_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hostunit_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hostunit_name().data(), this->hostunit_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectConfMessage.hostunit_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectConfMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectConfMessage)
  return false;
#undef DO_
}

void MyCollectConfMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectConfMessage)
  // optional string conf_name = 1;
  if (this->conf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_name().data(), this->conf_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->conf_name(), output);
  }

  // optional string conf_type = 2;
  if (this->conf_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_type().data(), this->conf_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->conf_type(), output);
  }

  // optional string conf_year = 3;
  if (this->conf_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_year().data(), this->conf_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->conf_year(), output);
  }

  // optional string publish_place = 4;
  if (this->publish_place().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_place().data(), this->publish_place().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.publish_place");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->publish_place(), output);
  }

  // optional string hostunit_name = 5;
  if (this->hostunit_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostunit_name().data(), this->hostunit_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.hostunit_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->hostunit_name(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectConfMessage)
}

::google::protobuf::uint8* MyCollectConfMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectConfMessage)
  // optional string conf_name = 1;
  if (this->conf_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_name().data(), this->conf_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->conf_name(), target);
  }

  // optional string conf_type = 2;
  if (this->conf_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_type().data(), this->conf_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->conf_type(), target);
  }

  // optional string conf_year = 3;
  if (this->conf_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->conf_year().data(), this->conf_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.conf_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->conf_year(), target);
  }

  // optional string publish_place = 4;
  if (this->publish_place().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_place().data(), this->publish_place().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.publish_place");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->publish_place(), target);
  }

  // optional string hostunit_name = 5;
  if (this->hostunit_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hostunit_name().data(), this->hostunit_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectConfMessage.hostunit_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->hostunit_name(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectConfMessage)
  return target;
}

size_t MyCollectConfMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectConfMessage)
  size_t total_size = 0;

  // optional string conf_name = 1;
  if (this->conf_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conf_name());
  }

  // optional string conf_type = 2;
  if (this->conf_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conf_type());
  }

  // optional string conf_year = 3;
  if (this->conf_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->conf_year());
  }

  // optional string publish_place = 4;
  if (this->publish_place().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_place());
  }

  // optional string hostunit_name = 5;
  if (this->hostunit_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hostunit_name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectConfMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectConfMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectConfMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectConfMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectConfMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectConfMessage)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectConfMessage::MergeFrom(const MyCollectConfMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectConfMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectConfMessage::UnsafeMergeFrom(const MyCollectConfMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.conf_name().size() > 0) {

    conf_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_name_);
  }
  if (from.conf_type().size() > 0) {

    conf_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_type_);
  }
  if (from.conf_year().size() > 0) {

    conf_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.conf_year_);
  }
  if (from.publish_place().size() > 0) {

    publish_place_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_place_);
  }
  if (from.hostunit_name().size() > 0) {

    hostunit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hostunit_name_);
  }
}

void MyCollectConfMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectConfMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectConfMessage::CopyFrom(const MyCollectConfMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectConfMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectConfMessage::IsInitialized() const {

  return true;
}

void MyCollectConfMessage::Swap(MyCollectConfMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectConfMessage::InternalSwap(MyCollectConfMessage* other) {
  conf_name_.Swap(&other->conf_name_);
  conf_type_.Swap(&other->conf_type_);
  conf_year_.Swap(&other->conf_year_);
  publish_place_.Swap(&other->publish_place_);
  hostunit_name_.Swap(&other->hostunit_name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectConfMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectConfMessage_descriptor_;
  metadata.reflection = MyCollectConfMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectConfMessage

// optional string conf_name = 1;
void MyCollectConfMessage::clear_conf_name() {
  conf_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectConfMessage::conf_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_name)
  return conf_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_conf_name(const ::std::string& value) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_name)
}
void MyCollectConfMessage::set_conf_name(const char* value) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_name)
}
void MyCollectConfMessage::set_conf_name(const char* value, size_t size) {
  
  conf_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_name)
}
::std::string* MyCollectConfMessage::mutable_conf_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_name)
  return conf_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectConfMessage::release_conf_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_name)
  
  return conf_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_allocated_conf_name(::std::string* conf_name) {
  if (conf_name != NULL) {
    
  } else {
    
  }
  conf_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_name)
}

// optional string conf_type = 2;
void MyCollectConfMessage::clear_conf_type() {
  conf_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectConfMessage::conf_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_type)
  return conf_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_conf_type(const ::std::string& value) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_type)
}
void MyCollectConfMessage::set_conf_type(const char* value) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_type)
}
void MyCollectConfMessage::set_conf_type(const char* value, size_t size) {
  
  conf_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_type)
}
::std::string* MyCollectConfMessage::mutable_conf_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_type)
  return conf_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectConfMessage::release_conf_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_type)
  
  return conf_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_allocated_conf_type(::std::string* conf_type) {
  if (conf_type != NULL) {
    
  } else {
    
  }
  conf_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_type)
}

// optional string conf_year = 3;
void MyCollectConfMessage::clear_conf_year() {
  conf_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectConfMessage::conf_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.conf_year)
  return conf_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_conf_year(const ::std::string& value) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.conf_year)
}
void MyCollectConfMessage::set_conf_year(const char* value) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.conf_year)
}
void MyCollectConfMessage::set_conf_year(const char* value, size_t size) {
  
  conf_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.conf_year)
}
::std::string* MyCollectConfMessage::mutable_conf_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.conf_year)
  return conf_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectConfMessage::release_conf_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.conf_year)
  
  return conf_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_allocated_conf_year(::std::string* conf_year) {
  if (conf_year != NULL) {
    
  } else {
    
  }
  conf_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), conf_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.conf_year)
}

// optional string publish_place = 4;
void MyCollectConfMessage::clear_publish_place() {
  publish_place_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectConfMessage::publish_place() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.publish_place)
  return publish_place_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_publish_place(const ::std::string& value) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.publish_place)
}
void MyCollectConfMessage::set_publish_place(const char* value) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.publish_place)
}
void MyCollectConfMessage::set_publish_place(const char* value, size_t size) {
  
  publish_place_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.publish_place)
}
::std::string* MyCollectConfMessage::mutable_publish_place() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.publish_place)
  return publish_place_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectConfMessage::release_publish_place() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.publish_place)
  
  return publish_place_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_allocated_publish_place(::std::string* publish_place) {
  if (publish_place != NULL) {
    
  } else {
    
  }
  publish_place_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_place);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.publish_place)
}

// optional string hostunit_name = 5;
void MyCollectConfMessage::clear_hostunit_name() {
  hostunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectConfMessage::hostunit_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectConfMessage.hostunit_name)
  return hostunit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_hostunit_name(const ::std::string& value) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectConfMessage.hostunit_name)
}
void MyCollectConfMessage::set_hostunit_name(const char* value) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectConfMessage.hostunit_name)
}
void MyCollectConfMessage::set_hostunit_name(const char* value, size_t size) {
  
  hostunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectConfMessage.hostunit_name)
}
::std::string* MyCollectConfMessage::mutable_hostunit_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectConfMessage.hostunit_name)
  return hostunit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectConfMessage::release_hostunit_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectConfMessage.hostunit_name)
  
  return hostunit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectConfMessage::set_allocated_hostunit_name(::std::string* hostunit_name) {
  if (hostunit_name != NULL) {
    
  } else {
    
  }
  hostunit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostunit_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectConfMessage.hostunit_name)
}

inline const MyCollectConfMessage* MyCollectConfMessage::internal_default_instance() {
  return &MyCollectConfMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectPerioMessage::kAuthorsUnitFieldNumber;
const int MyCollectPerioMessage::kPerioTitleFieldNumber;
const int MyCollectPerioMessage::kPerioTitleEnFieldNumber;
const int MyCollectPerioMessage::kPublishYearFieldNumber;
const int MyCollectPerioMessage::kIssueNumFieldNumber;
const int MyCollectPerioMessage::kAbstWebdateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectPerioMessage::MyCollectPerioMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectPerioMessage)
}

void MyCollectPerioMessage::InitAsDefaultInstance() {
}

MyCollectPerioMessage::MyCollectPerioMessage(const MyCollectPerioMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectPerioMessage)
}

void MyCollectPerioMessage::SharedCtor() {
  authors_unit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_en_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issue_num_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abst_webdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyCollectPerioMessage::~MyCollectPerioMessage() {
  // @@protoc_insertion_point(destructor:collect.MyCollectPerioMessage)
  SharedDtor();
}

void MyCollectPerioMessage::SharedDtor() {
  authors_unit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_en_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issue_num_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abst_webdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectPerioMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectPerioMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectPerioMessage_descriptor_;
}

const MyCollectPerioMessage& MyCollectPerioMessage::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectPerioMessage> MyCollectPerioMessage_default_instance_;

MyCollectPerioMessage* MyCollectPerioMessage::New(::google::protobuf::Arena* arena) const {
  MyCollectPerioMessage* n = new MyCollectPerioMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectPerioMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectPerioMessage)
  authors_unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  perio_title_en_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issue_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  abst_webdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyCollectPerioMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectPerioMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string authors_unit = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_authors_unit()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->authors_unit().data(), this->authors_unit().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.authors_unit"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_perio_title;
        break;
      }

      // optional string perio_title = 2;
      case 2: {
        if (tag == 18) {
         parse_perio_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_title().data(), this->perio_title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.perio_title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_perio_title_en;
        break;
      }

      // optional string perio_title_en = 3;
      case 3: {
        if (tag == 26) {
         parse_perio_title_en:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_perio_title_en()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->perio_title_en().data(), this->perio_title_en().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.perio_title_en"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_publish_year;
        break;
      }

      // optional string publish_year = 4;
      case 4: {
        if (tag == 34) {
         parse_publish_year:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_year().data(), this->publish_year().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.publish_year"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_issue_num;
        break;
      }

      // optional string issue_num = 5;
      case 5: {
        if (tag == 42) {
         parse_issue_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issue_num()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issue_num().data(), this->issue_num().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.issue_num"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_abst_webdate;
        break;
      }

      // optional string abst_webdate = 6;
      case 6: {
        if (tag == 50) {
         parse_abst_webdate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_abst_webdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->abst_webdate().data(), this->abst_webdate().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectPerioMessage.abst_webdate"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectPerioMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectPerioMessage)
  return false;
#undef DO_
}

void MyCollectPerioMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectPerioMessage)
  // optional string authors_unit = 1;
  if (this->authors_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors_unit().data(), this->authors_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.authors_unit");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->authors_unit(), output);
  }

  // optional string perio_title = 2;
  if (this->perio_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title().data(), this->perio_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.perio_title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->perio_title(), output);
  }

  // optional string perio_title_en = 3;
  if (this->perio_title_en().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title_en().data(), this->perio_title_en().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.perio_title_en");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->perio_title_en(), output);
  }

  // optional string publish_year = 4;
  if (this->publish_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_year().data(), this->publish_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.publish_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->publish_year(), output);
  }

  // optional string issue_num = 5;
  if (this->issue_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issue_num().data(), this->issue_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.issue_num");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->issue_num(), output);
  }

  // optional string abst_webdate = 6;
  if (this->abst_webdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abst_webdate().data(), this->abst_webdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.abst_webdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->abst_webdate(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectPerioMessage)
}

::google::protobuf::uint8* MyCollectPerioMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectPerioMessage)
  // optional string authors_unit = 1;
  if (this->authors_unit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->authors_unit().data(), this->authors_unit().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.authors_unit");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->authors_unit(), target);
  }

  // optional string perio_title = 2;
  if (this->perio_title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title().data(), this->perio_title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.perio_title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->perio_title(), target);
  }

  // optional string perio_title_en = 3;
  if (this->perio_title_en().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->perio_title_en().data(), this->perio_title_en().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.perio_title_en");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->perio_title_en(), target);
  }

  // optional string publish_year = 4;
  if (this->publish_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_year().data(), this->publish_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.publish_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->publish_year(), target);
  }

  // optional string issue_num = 5;
  if (this->issue_num().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issue_num().data(), this->issue_num().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.issue_num");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->issue_num(), target);
  }

  // optional string abst_webdate = 6;
  if (this->abst_webdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->abst_webdate().data(), this->abst_webdate().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectPerioMessage.abst_webdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->abst_webdate(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectPerioMessage)
  return target;
}

size_t MyCollectPerioMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectPerioMessage)
  size_t total_size = 0;

  // optional string authors_unit = 1;
  if (this->authors_unit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->authors_unit());
  }

  // optional string perio_title = 2;
  if (this->perio_title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_title());
  }

  // optional string perio_title_en = 3;
  if (this->perio_title_en().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->perio_title_en());
  }

  // optional string publish_year = 4;
  if (this->publish_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_year());
  }

  // optional string issue_num = 5;
  if (this->issue_num().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issue_num());
  }

  // optional string abst_webdate = 6;
  if (this->abst_webdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->abst_webdate());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectPerioMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectPerioMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectPerioMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectPerioMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectPerioMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectPerioMessage)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectPerioMessage::MergeFrom(const MyCollectPerioMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectPerioMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectPerioMessage::UnsafeMergeFrom(const MyCollectPerioMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.authors_unit().size() > 0) {

    authors_unit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.authors_unit_);
  }
  if (from.perio_title().size() > 0) {

    perio_title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_title_);
  }
  if (from.perio_title_en().size() > 0) {

    perio_title_en_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.perio_title_en_);
  }
  if (from.publish_year().size() > 0) {

    publish_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_year_);
  }
  if (from.issue_num().size() > 0) {

    issue_num_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issue_num_);
  }
  if (from.abst_webdate().size() > 0) {

    abst_webdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.abst_webdate_);
  }
}

void MyCollectPerioMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectPerioMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectPerioMessage::CopyFrom(const MyCollectPerioMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectPerioMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectPerioMessage::IsInitialized() const {

  return true;
}

void MyCollectPerioMessage::Swap(MyCollectPerioMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectPerioMessage::InternalSwap(MyCollectPerioMessage* other) {
  authors_unit_.Swap(&other->authors_unit_);
  perio_title_.Swap(&other->perio_title_);
  perio_title_en_.Swap(&other->perio_title_en_);
  publish_year_.Swap(&other->publish_year_);
  issue_num_.Swap(&other->issue_num_);
  abst_webdate_.Swap(&other->abst_webdate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectPerioMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectPerioMessage_descriptor_;
  metadata.reflection = MyCollectPerioMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectPerioMessage

// optional string authors_unit = 1;
void MyCollectPerioMessage::clear_authors_unit() {
  authors_unit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::authors_unit() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.authors_unit)
  return authors_unit_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_authors_unit(const ::std::string& value) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.authors_unit)
}
void MyCollectPerioMessage::set_authors_unit(const char* value) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.authors_unit)
}
void MyCollectPerioMessage::set_authors_unit(const char* value, size_t size) {
  
  authors_unit_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.authors_unit)
}
::std::string* MyCollectPerioMessage::mutable_authors_unit() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.authors_unit)
  return authors_unit_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_authors_unit() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.authors_unit)
  
  return authors_unit_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_authors_unit(::std::string* authors_unit) {
  if (authors_unit != NULL) {
    
  } else {
    
  }
  authors_unit_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authors_unit);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.authors_unit)
}

// optional string perio_title = 2;
void MyCollectPerioMessage::clear_perio_title() {
  perio_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::perio_title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.perio_title)
  return perio_title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_perio_title(const ::std::string& value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.perio_title)
}
void MyCollectPerioMessage::set_perio_title(const char* value) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.perio_title)
}
void MyCollectPerioMessage::set_perio_title(const char* value, size_t size) {
  
  perio_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.perio_title)
}
::std::string* MyCollectPerioMessage::mutable_perio_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.perio_title)
  return perio_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_perio_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.perio_title)
  
  return perio_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_perio_title(::std::string* perio_title) {
  if (perio_title != NULL) {
    
  } else {
    
  }
  perio_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.perio_title)
}

// optional string perio_title_en = 3;
void MyCollectPerioMessage::clear_perio_title_en() {
  perio_title_en_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::perio_title_en() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.perio_title_en)
  return perio_title_en_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_perio_title_en(const ::std::string& value) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.perio_title_en)
}
void MyCollectPerioMessage::set_perio_title_en(const char* value) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.perio_title_en)
}
void MyCollectPerioMessage::set_perio_title_en(const char* value, size_t size) {
  
  perio_title_en_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.perio_title_en)
}
::std::string* MyCollectPerioMessage::mutable_perio_title_en() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.perio_title_en)
  return perio_title_en_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_perio_title_en() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.perio_title_en)
  
  return perio_title_en_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_perio_title_en(::std::string* perio_title_en) {
  if (perio_title_en != NULL) {
    
  } else {
    
  }
  perio_title_en_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), perio_title_en);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.perio_title_en)
}

// optional string publish_year = 4;
void MyCollectPerioMessage::clear_publish_year() {
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::publish_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.publish_year)
  return publish_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_publish_year(const ::std::string& value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.publish_year)
}
void MyCollectPerioMessage::set_publish_year(const char* value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.publish_year)
}
void MyCollectPerioMessage::set_publish_year(const char* value, size_t size) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.publish_year)
}
::std::string* MyCollectPerioMessage::mutable_publish_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.publish_year)
  return publish_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_publish_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.publish_year)
  
  return publish_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_publish_year(::std::string* publish_year) {
  if (publish_year != NULL) {
    
  } else {
    
  }
  publish_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.publish_year)
}

// optional string issue_num = 5;
void MyCollectPerioMessage::clear_issue_num() {
  issue_num_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::issue_num() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.issue_num)
  return issue_num_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_issue_num(const ::std::string& value) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.issue_num)
}
void MyCollectPerioMessage::set_issue_num(const char* value) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.issue_num)
}
void MyCollectPerioMessage::set_issue_num(const char* value, size_t size) {
  
  issue_num_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.issue_num)
}
::std::string* MyCollectPerioMessage::mutable_issue_num() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.issue_num)
  return issue_num_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_issue_num() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.issue_num)
  
  return issue_num_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_issue_num(::std::string* issue_num) {
  if (issue_num != NULL) {
    
  } else {
    
  }
  issue_num_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issue_num);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.issue_num)
}

// optional string abst_webdate = 6;
void MyCollectPerioMessage::clear_abst_webdate() {
  abst_webdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectPerioMessage::abst_webdate() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectPerioMessage.abst_webdate)
  return abst_webdate_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_abst_webdate(const ::std::string& value) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectPerioMessage.abst_webdate)
}
void MyCollectPerioMessage::set_abst_webdate(const char* value) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectPerioMessage.abst_webdate)
}
void MyCollectPerioMessage::set_abst_webdate(const char* value, size_t size) {
  
  abst_webdate_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectPerioMessage.abst_webdate)
}
::std::string* MyCollectPerioMessage::mutable_abst_webdate() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectPerioMessage.abst_webdate)
  return abst_webdate_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectPerioMessage::release_abst_webdate() {
  // @@protoc_insertion_point(field_release:collect.MyCollectPerioMessage.abst_webdate)
  
  return abst_webdate_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectPerioMessage::set_allocated_abst_webdate(::std::string* abst_webdate) {
  if (abst_webdate != NULL) {
    
  } else {
    
  }
  abst_webdate_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), abst_webdate);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectPerioMessage.abst_webdate)
}

inline const MyCollectPerioMessage* MyCollectPerioMessage::internal_default_instance() {
  return &MyCollectPerioMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectDegreeMessage::kDeunitNameFieldNumber;
const int MyCollectDegreeMessage::kDegreeLevelFieldNumber;
const int MyCollectDegreeMessage::kMajorNameFieldNumber;
const int MyCollectDegreeMessage::kTutorNameFieldNumber;
const int MyCollectDegreeMessage::kPublishYearFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectDegreeMessage::MyCollectDegreeMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectDegreeMessage)
}

void MyCollectDegreeMessage::InitAsDefaultInstance() {
}

MyCollectDegreeMessage::MyCollectDegreeMessage(const MyCollectDegreeMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectDegreeMessage)
}

void MyCollectDegreeMessage::SharedCtor() {
  deunit_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  degree_level_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tutor_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyCollectDegreeMessage::~MyCollectDegreeMessage() {
  // @@protoc_insertion_point(destructor:collect.MyCollectDegreeMessage)
  SharedDtor();
}

void MyCollectDegreeMessage::SharedDtor() {
  deunit_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  degree_level_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tutor_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectDegreeMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectDegreeMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectDegreeMessage_descriptor_;
}

const MyCollectDegreeMessage& MyCollectDegreeMessage::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectDegreeMessage> MyCollectDegreeMessage_default_instance_;

MyCollectDegreeMessage* MyCollectDegreeMessage::New(::google::protobuf::Arena* arena) const {
  MyCollectDegreeMessage* n = new MyCollectDegreeMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectDegreeMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectDegreeMessage)
  deunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  degree_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  major_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tutor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyCollectDegreeMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectDegreeMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string deunit_name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_deunit_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->deunit_name().data(), this->deunit_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDegreeMessage.deunit_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_degree_level;
        break;
      }

      // optional string degree_level = 2;
      case 2: {
        if (tag == 18) {
         parse_degree_level:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_degree_level()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->degree_level().data(), this->degree_level().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDegreeMessage.degree_level"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_major_name;
        break;
      }

      // optional string major_name = 3;
      case 3: {
        if (tag == 26) {
         parse_major_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_major_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->major_name().data(), this->major_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDegreeMessage.major_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_tutor_name;
        break;
      }

      // optional string tutor_name = 4;
      case 4: {
        if (tag == 34) {
         parse_tutor_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tutor_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->tutor_name().data(), this->tutor_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDegreeMessage.tutor_name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_publish_year;
        break;
      }

      // optional string publish_year = 5;
      case 5: {
        if (tag == 42) {
         parse_publish_year:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_publish_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->publish_year().data(), this->publish_year().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectDegreeMessage.publish_year"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectDegreeMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectDegreeMessage)
  return false;
#undef DO_
}

void MyCollectDegreeMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectDegreeMessage)
  // optional string deunit_name = 1;
  if (this->deunit_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deunit_name().data(), this->deunit_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.deunit_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->deunit_name(), output);
  }

  // optional string degree_level = 2;
  if (this->degree_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->degree_level().data(), this->degree_level().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.degree_level");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->degree_level(), output);
  }

  // optional string major_name = 3;
  if (this->major_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->major_name().data(), this->major_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.major_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->major_name(), output);
  }

  // optional string tutor_name = 4;
  if (this->tutor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tutor_name().data(), this->tutor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.tutor_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->tutor_name(), output);
  }

  // optional string publish_year = 5;
  if (this->publish_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_year().data(), this->publish_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.publish_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->publish_year(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectDegreeMessage)
}

::google::protobuf::uint8* MyCollectDegreeMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectDegreeMessage)
  // optional string deunit_name = 1;
  if (this->deunit_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->deunit_name().data(), this->deunit_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.deunit_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->deunit_name(), target);
  }

  // optional string degree_level = 2;
  if (this->degree_level().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->degree_level().data(), this->degree_level().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.degree_level");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->degree_level(), target);
  }

  // optional string major_name = 3;
  if (this->major_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->major_name().data(), this->major_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.major_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->major_name(), target);
  }

  // optional string tutor_name = 4;
  if (this->tutor_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->tutor_name().data(), this->tutor_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.tutor_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->tutor_name(), target);
  }

  // optional string publish_year = 5;
  if (this->publish_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->publish_year().data(), this->publish_year().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectDegreeMessage.publish_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->publish_year(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectDegreeMessage)
  return target;
}

size_t MyCollectDegreeMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectDegreeMessage)
  size_t total_size = 0;

  // optional string deunit_name = 1;
  if (this->deunit_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->deunit_name());
  }

  // optional string degree_level = 2;
  if (this->degree_level().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->degree_level());
  }

  // optional string major_name = 3;
  if (this->major_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->major_name());
  }

  // optional string tutor_name = 4;
  if (this->tutor_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->tutor_name());
  }

  // optional string publish_year = 5;
  if (this->publish_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->publish_year());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectDegreeMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectDegreeMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectDegreeMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectDegreeMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectDegreeMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectDegreeMessage)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectDegreeMessage::MergeFrom(const MyCollectDegreeMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectDegreeMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectDegreeMessage::UnsafeMergeFrom(const MyCollectDegreeMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.deunit_name().size() > 0) {

    deunit_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.deunit_name_);
  }
  if (from.degree_level().size() > 0) {

    degree_level_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.degree_level_);
  }
  if (from.major_name().size() > 0) {

    major_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.major_name_);
  }
  if (from.tutor_name().size() > 0) {

    tutor_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tutor_name_);
  }
  if (from.publish_year().size() > 0) {

    publish_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.publish_year_);
  }
}

void MyCollectDegreeMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectDegreeMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectDegreeMessage::CopyFrom(const MyCollectDegreeMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectDegreeMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectDegreeMessage::IsInitialized() const {

  return true;
}

void MyCollectDegreeMessage::Swap(MyCollectDegreeMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectDegreeMessage::InternalSwap(MyCollectDegreeMessage* other) {
  deunit_name_.Swap(&other->deunit_name_);
  degree_level_.Swap(&other->degree_level_);
  major_name_.Swap(&other->major_name_);
  tutor_name_.Swap(&other->tutor_name_);
  publish_year_.Swap(&other->publish_year_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectDegreeMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectDegreeMessage_descriptor_;
  metadata.reflection = MyCollectDegreeMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectDegreeMessage

// optional string deunit_name = 1;
void MyCollectDegreeMessage::clear_deunit_name() {
  deunit_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDegreeMessage::deunit_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.deunit_name)
  return deunit_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_deunit_name(const ::std::string& value) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.deunit_name)
}
void MyCollectDegreeMessage::set_deunit_name(const char* value) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.deunit_name)
}
void MyCollectDegreeMessage::set_deunit_name(const char* value, size_t size) {
  
  deunit_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.deunit_name)
}
::std::string* MyCollectDegreeMessage::mutable_deunit_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.deunit_name)
  return deunit_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDegreeMessage::release_deunit_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.deunit_name)
  
  return deunit_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_allocated_deunit_name(::std::string* deunit_name) {
  if (deunit_name != NULL) {
    
  } else {
    
  }
  deunit_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), deunit_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.deunit_name)
}

// optional string degree_level = 2;
void MyCollectDegreeMessage::clear_degree_level() {
  degree_level_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDegreeMessage::degree_level() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.degree_level)
  return degree_level_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_degree_level(const ::std::string& value) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.degree_level)
}
void MyCollectDegreeMessage::set_degree_level(const char* value) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.degree_level)
}
void MyCollectDegreeMessage::set_degree_level(const char* value, size_t size) {
  
  degree_level_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.degree_level)
}
::std::string* MyCollectDegreeMessage::mutable_degree_level() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.degree_level)
  return degree_level_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDegreeMessage::release_degree_level() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.degree_level)
  
  return degree_level_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_allocated_degree_level(::std::string* degree_level) {
  if (degree_level != NULL) {
    
  } else {
    
  }
  degree_level_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), degree_level);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.degree_level)
}

// optional string major_name = 3;
void MyCollectDegreeMessage::clear_major_name() {
  major_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDegreeMessage::major_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.major_name)
  return major_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_major_name(const ::std::string& value) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.major_name)
}
void MyCollectDegreeMessage::set_major_name(const char* value) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.major_name)
}
void MyCollectDegreeMessage::set_major_name(const char* value, size_t size) {
  
  major_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.major_name)
}
::std::string* MyCollectDegreeMessage::mutable_major_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.major_name)
  return major_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDegreeMessage::release_major_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.major_name)
  
  return major_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_allocated_major_name(::std::string* major_name) {
  if (major_name != NULL) {
    
  } else {
    
  }
  major_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), major_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.major_name)
}

// optional string tutor_name = 4;
void MyCollectDegreeMessage::clear_tutor_name() {
  tutor_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDegreeMessage::tutor_name() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.tutor_name)
  return tutor_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_tutor_name(const ::std::string& value) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.tutor_name)
}
void MyCollectDegreeMessage::set_tutor_name(const char* value) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.tutor_name)
}
void MyCollectDegreeMessage::set_tutor_name(const char* value, size_t size) {
  
  tutor_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.tutor_name)
}
::std::string* MyCollectDegreeMessage::mutable_tutor_name() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.tutor_name)
  return tutor_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDegreeMessage::release_tutor_name() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.tutor_name)
  
  return tutor_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_allocated_tutor_name(::std::string* tutor_name) {
  if (tutor_name != NULL) {
    
  } else {
    
  }
  tutor_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tutor_name);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.tutor_name)
}

// optional string publish_year = 5;
void MyCollectDegreeMessage::clear_publish_year() {
  publish_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectDegreeMessage::publish_year() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectDegreeMessage.publish_year)
  return publish_year_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_publish_year(const ::std::string& value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectDegreeMessage.publish_year)
}
void MyCollectDegreeMessage::set_publish_year(const char* value) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectDegreeMessage.publish_year)
}
void MyCollectDegreeMessage::set_publish_year(const char* value, size_t size) {
  
  publish_year_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectDegreeMessage.publish_year)
}
::std::string* MyCollectDegreeMessage::mutable_publish_year() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectDegreeMessage.publish_year)
  return publish_year_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectDegreeMessage::release_publish_year() {
  // @@protoc_insertion_point(field_release:collect.MyCollectDegreeMessage.publish_year)
  
  return publish_year_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectDegreeMessage::set_allocated_publish_year(::std::string* publish_year) {
  if (publish_year != NULL) {
    
  } else {
    
  }
  publish_year_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), publish_year);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectDegreeMessage.publish_year)
}

inline const MyCollectDegreeMessage* MyCollectDegreeMessage::internal_default_instance() {
  return &MyCollectDegreeMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MyCollectSimilarPaperMessage::kArticalIdFieldNumber;
const int MyCollectSimilarPaperMessage::kArticalTypeFieldNumber;
const int MyCollectSimilarPaperMessage::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MyCollectSimilarPaperMessage::MyCollectSimilarPaperMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:collect.MyCollectSimilarPaperMessage)
}

void MyCollectSimilarPaperMessage::InitAsDefaultInstance() {
}

MyCollectSimilarPaperMessage::MyCollectSimilarPaperMessage(const MyCollectSimilarPaperMessage& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:collect.MyCollectSimilarPaperMessage)
}

void MyCollectSimilarPaperMessage::SharedCtor() {
  artical_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

MyCollectSimilarPaperMessage::~MyCollectSimilarPaperMessage() {
  // @@protoc_insertion_point(destructor:collect.MyCollectSimilarPaperMessage)
  SharedDtor();
}

void MyCollectSimilarPaperMessage::SharedDtor() {
  artical_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MyCollectSimilarPaperMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MyCollectSimilarPaperMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return MyCollectSimilarPaperMessage_descriptor_;
}

const MyCollectSimilarPaperMessage& MyCollectSimilarPaperMessage::default_instance() {
  protobuf_InitDefaults_collect_2fmsg_5fcollect_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<MyCollectSimilarPaperMessage> MyCollectSimilarPaperMessage_default_instance_;

MyCollectSimilarPaperMessage* MyCollectSimilarPaperMessage::New(::google::protobuf::Arena* arena) const {
  MyCollectSimilarPaperMessage* n = new MyCollectSimilarPaperMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MyCollectSimilarPaperMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:collect.MyCollectSimilarPaperMessage)
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool MyCollectSimilarPaperMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:collect.MyCollectSimilarPaperMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string artical_id = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artical_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->artical_id().data(), this->artical_id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectSimilarPaperMessage.artical_id"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_artical_type;
        break;
      }

      // optional string artical_type = 2;
      case 2: {
        if (tag == 18) {
         parse_artical_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_artical_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->artical_type().data(), this->artical_type().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectSimilarPaperMessage.artical_type"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_title;
        break;
      }

      // optional string title = 3;
      case 3: {
        if (tag == 26) {
         parse_title:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "collect.MyCollectSimilarPaperMessage.title"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:collect.MyCollectSimilarPaperMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:collect.MyCollectSimilarPaperMessage)
  return false;
#undef DO_
}

void MyCollectSimilarPaperMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:collect.MyCollectSimilarPaperMessage)
  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_id().data(), this->artical_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.artical_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->artical_id(), output);
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_type().data(), this->artical_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.artical_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->artical_type(), output);
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  // @@protoc_insertion_point(serialize_end:collect.MyCollectSimilarPaperMessage)
}

::google::protobuf::uint8* MyCollectSimilarPaperMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:collect.MyCollectSimilarPaperMessage)
  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_id().data(), this->artical_id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.artical_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->artical_id(), target);
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->artical_type().data(), this->artical_type().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.artical_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->artical_type(), target);
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "collect.MyCollectSimilarPaperMessage.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:collect.MyCollectSimilarPaperMessage)
  return target;
}

size_t MyCollectSimilarPaperMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:collect.MyCollectSimilarPaperMessage)
  size_t total_size = 0;

  // optional string artical_id = 1;
  if (this->artical_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->artical_id());
  }

  // optional string artical_type = 2;
  if (this->artical_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->artical_type());
  }

  // optional string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MyCollectSimilarPaperMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:collect.MyCollectSimilarPaperMessage)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const MyCollectSimilarPaperMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MyCollectSimilarPaperMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:collect.MyCollectSimilarPaperMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:collect.MyCollectSimilarPaperMessage)
    UnsafeMergeFrom(*source);
  }
}

void MyCollectSimilarPaperMessage::MergeFrom(const MyCollectSimilarPaperMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:collect.MyCollectSimilarPaperMessage)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void MyCollectSimilarPaperMessage::UnsafeMergeFrom(const MyCollectSimilarPaperMessage& from) {
  GOOGLE_DCHECK(&from != this);
  if (from.artical_id().size() > 0) {

    artical_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artical_id_);
  }
  if (from.artical_type().size() > 0) {

    artical_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.artical_type_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void MyCollectSimilarPaperMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:collect.MyCollectSimilarPaperMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MyCollectSimilarPaperMessage::CopyFrom(const MyCollectSimilarPaperMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:collect.MyCollectSimilarPaperMessage)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool MyCollectSimilarPaperMessage::IsInitialized() const {

  return true;
}

void MyCollectSimilarPaperMessage::Swap(MyCollectSimilarPaperMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MyCollectSimilarPaperMessage::InternalSwap(MyCollectSimilarPaperMessage* other) {
  artical_id_.Swap(&other->artical_id_);
  artical_type_.Swap(&other->artical_type_);
  title_.Swap(&other->title_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MyCollectSimilarPaperMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = MyCollectSimilarPaperMessage_descriptor_;
  metadata.reflection = MyCollectSimilarPaperMessage_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MyCollectSimilarPaperMessage

// optional string artical_id = 1;
void MyCollectSimilarPaperMessage::clear_artical_id() {
  artical_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectSimilarPaperMessage::artical_id() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.artical_id)
  return artical_id_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_artical_id(const ::std::string& value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.artical_id)
}
void MyCollectSimilarPaperMessage::set_artical_id(const char* value) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.artical_id)
}
void MyCollectSimilarPaperMessage::set_artical_id(const char* value, size_t size) {
  
  artical_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.artical_id)
}
::std::string* MyCollectSimilarPaperMessage::mutable_artical_id() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.artical_id)
  return artical_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectSimilarPaperMessage::release_artical_id() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.artical_id)
  
  return artical_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_allocated_artical_id(::std::string* artical_id) {
  if (artical_id != NULL) {
    
  } else {
    
  }
  artical_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_id);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.artical_id)
}

// optional string artical_type = 2;
void MyCollectSimilarPaperMessage::clear_artical_type() {
  artical_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectSimilarPaperMessage::artical_type() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.artical_type)
  return artical_type_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_artical_type(const ::std::string& value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.artical_type)
}
void MyCollectSimilarPaperMessage::set_artical_type(const char* value) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.artical_type)
}
void MyCollectSimilarPaperMessage::set_artical_type(const char* value, size_t size) {
  
  artical_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.artical_type)
}
::std::string* MyCollectSimilarPaperMessage::mutable_artical_type() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.artical_type)
  return artical_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectSimilarPaperMessage::release_artical_type() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.artical_type)
  
  return artical_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_allocated_artical_type(::std::string* artical_type) {
  if (artical_type != NULL) {
    
  } else {
    
  }
  artical_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), artical_type);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.artical_type)
}

// optional string title = 3;
void MyCollectSimilarPaperMessage::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& MyCollectSimilarPaperMessage::title() const {
  // @@protoc_insertion_point(field_get:collect.MyCollectSimilarPaperMessage.title)
  return title_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:collect.MyCollectSimilarPaperMessage.title)
}
void MyCollectSimilarPaperMessage::set_title(const char* value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:collect.MyCollectSimilarPaperMessage.title)
}
void MyCollectSimilarPaperMessage::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:collect.MyCollectSimilarPaperMessage.title)
}
::std::string* MyCollectSimilarPaperMessage::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:collect.MyCollectSimilarPaperMessage.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MyCollectSimilarPaperMessage::release_title() {
  // @@protoc_insertion_point(field_release:collect.MyCollectSimilarPaperMessage.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MyCollectSimilarPaperMessage::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:collect.MyCollectSimilarPaperMessage.title)
}

inline const MyCollectSimilarPaperMessage* MyCollectSimilarPaperMessage::internal_default_instance() {
  return &MyCollectSimilarPaperMessage_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace collect

// @@protoc_insertion_point(global_scope)
